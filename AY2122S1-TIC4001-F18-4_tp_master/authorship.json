[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"    testCompile(\"org.junit.jupiter:junit-jupiter-params:5.8.1\")","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"    implementation group:\u0027com.google.guava\u0027, name:\u0027guava\u0027, version: \u002731.0.1-jre\u0027","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"    maxParallelForks 3","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"    mainClassName \u003d \"seedu.justbook.JustBook\"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"    archiveBaseName \u003d \"justbook\"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gweeyc":6,"-":42,"zcnmashleu95":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"- [docs.oracle.com Java time References](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDateTime.html) ","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"- [Java Streams Reference](http://tutorials.jenkov.com/java-functional-programming/streams.html)","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"- Raoul-Gabriel Urma, Mario Fusco, Alan Mycroft, *Modern Java in Action: Lambdas, streams, functional and reactive programming 2nd Edition*, Manning, 2018. ","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"- Team members: **Wan Yin, Hanna, Yeu Chai and Sze Chun**  ","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"## Design","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"**JustBook Command Line App** leverages on the help of a total five Java classes, viz. **JustBook, Bookings, AddCommand, DeleteCommand and HelpCommand** created by the Team. It makes optimal use of Java Stream and the latest java time APIs, e.g. LocalDateTime and LocalDate, among others, together with a judicious choice of data structures, to allow a single user good at the keyboard to make and register bookings / appointments online fast: ","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"- Each user booking entry is stored in an `Arraylist\u003cBookings\u003e` data structure (sorted before each listing display -\u003e allowing for editing or deleting functions onscreen). ","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"yinyin377"},"content":"  ","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"- The **Bookings** class will capture the user booking description, the scheduled start localDateTime and end localDateTime data of a specific booking. ","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yinyin377"},"content":"  ","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"- Another data structure, `HashMap\u003cLocalDate, LocalDate\u003e`, chosen for efficient search/retrieval, is used to store a blocklist consisting of blocking periods where the user will not be able to make any bookings.  ","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"## Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"### Show weekends / we feature","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"#### Highlights:","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"![JustBook Class Diag.](WEClass%20Diagram.png) ","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"Fig 1. - JustBook Class Diagram Sample\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"![JustBook Seq Diag.](JustBookSeqDiag.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"Fig 2. - Sequence Diagram Illustration\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"The `show weekends` or `show we` mechanism is facilitated by two JustBook Class-level helper methods, namely, ","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"**listWeekends()** and **weekendListings()**. ","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"The plan of this feature is to display quickly all the weekends and their booking listings of the current month, if any,","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"to the console, arranged in chronological order - starting from the weekend nearest to the point of date of entry of the","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"user, when he or she enters the CLI command.","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"The first method **listWeekends()** will accomplish the bulk of the above work while working in synchronicity with the","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"second helper method **weekendListings()**, which mainly formats the display to group all weekend bookings by their ","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"respective weekend headers, and searches the online appointment database to extract out only the weekend entries to","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"display for the month.","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"#### Design considerations:","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"Considerations in the design of both methods have been specially given for the optimization of both operations in terms","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"of time and space complexity, ","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"- in terms of unnecessary non-weekend database searches skipped ","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"  - once a valid weekend date has been processed proper - until the next valid weekend processing begins, ","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"- and the deployment of an **EnumSet** (with the two DayOfWeek weekends values) ","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"  - to afford quick comparison operations during the sifting out of the weekend","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"  dates, from the generated stream of dates, bracketed by the current day date to the end of the month.","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"gweeyc"},"content":"**Target user profile:**","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"- has a need to manage a number of fast bookings","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"- prefer desktop apps vs other types","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"- can type fast","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"- prefers using the keyboard over mouse interactions","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"gweeyc"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"gweeyc"},"content":"**Value proposition:** manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"yinyin377"},"content":"Target User: John","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"yinyin377"},"content":"Age: 18 (typical)","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"yinyin377"},"content":"Occupation: Student","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"yinyin377"},"content":"Education: Currently in Poly or JC","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"yinyin377"},"content":"Commitments: CCAs, recreational activities, Studies","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"gweeyc"},"content":"Traits: Is technologically literate, active in activities, comfortable typing commands","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"yinyin377"},"content":"Our target user is a Student that is currently schooling. As an active student, the Target User has multiple activities that may be hard to keep track of. With the scheduler, John will be able to plan and organize multiple appointments at the same time.","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"gweeyc"},"content":"JustBook provides a user-friendly, consistent and error-free interface, as well as helpful message feedback or alerts to users, throughout the app use. The scheduler can be customized into working on the basis of various time durations (6 months, monthly, weekly etc.). Using the CLI-type interface, the user will be able to edit multiple appointments easily with minimal commands / single commands.","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"gweeyc"},"content":"Users are able to make, check, delete, view, change, and source in real-time for available slots for appointments using this application. This application will display a range of time slots available for users to choose from, may also list available dates and unavailable dates when the User is trying to schedule an appointment. The User can also choose to work on a 6-calendar-months view / basis (coming feature), or per month, per week, down to a day’s view / basis.  ","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"yinyin377"},"content":"Possible enhancements include appointment data printout, a file backup in the background to act as a redundancy measure for unforeseen disruption, alerts for the User if so scheduled, etc. ","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"gweeyc"},"content":"Our Value Proposition is that our scheduler provides, throughout the app use, a consistent, user-friendly and error-free interface, assisting message feedback or alerts and a capability to suggest time slots to the user, in addition to the time slots available (coming feature). The scheduler can be customized to work on the basis of various time durations (monthly, weekly, daily etc.). Using the CLI-type interface, the user will be able to edit multiple appointments easily with minimal commands / single commands.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"gweeyc"},"content":"|v1.0|new user|see help usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"gweeyc"},"content":"|v1.0|regular user|I can add in a booking entry in one line|make an entry and have it stored online fast|","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"gweeyc"},"content":"|v1.0|a quick user|I can edit a booking entry description|modify an entry description easily at will|","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"gweeyc"},"content":"|v1.0|date planner|I find a booking item by date|locate a to-do without having to go through the entire list|","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"yinyin377"},"content":"|v1.0|efficient student|I can order all my tasks and appointment by their due date|order all my tasks and appointment by their due date|","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"gweeyc"},"content":"|v1.0|systematic student|I can see my list upfront |know what tasks I have clear for the day|","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"gweeyc"},"content":"|v1.0|active student|I can view the block of outstanding schedules for the month displayed (coming feature)|check if I can add further bookings for that month|","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"gweeyc"},"content":"|v1.0|fast-moving student|I can view the the day\u0027s block of remaining schedules|remind myself of the schedules done and which ones left to attend to that day|","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"gweeyc"},"content":"|v1.0|studious student|I can input a blocking period into the database|so that I\u0027m unable to book within that critical period|","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"gweeyc"},"content":"|v2.0|student|I can save or load at start up my appointments and schedule|not need to re-create them everytime I log in|","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"gweeyc"},"content":"|v2.0|structured student|I can see my appointments arranged together and tasks arranged together|have a clear distinct view of appointments and tasks|","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"gweeyc"},"content":"|v2.0|student who always does late minute work|I want to see tasks or appointments going to be due being highlighted to me in ordered deadline date and time|can meet the deadline (coming feature)|","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"gweeyc"},"content":"|v2.0|social student|I can view the block of weekend outstanding schedules for the entire current month displayed|check if I can add further bookings for the weekends|","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"yinyin377"},"content":"|v2.0|busy student|I can quit the application immediately with an automatic save|move on to my other activities quickly|","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"gweeyc"},"content":"1. Users are able to run the application as long as Java11 is installed","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"yinyin377"},"content":"2. The application has been designed to handle up to 100’s of user appointments optimally without affecting its performance.","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"yinyin377"},"content":"3. The application should preferably be executable on Windows OS or compatible software-emulated terminal.","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"yinyin377"},"content":"4. User-friendly features incorporated in helpful messages feedback and diagnostic prompts (more to come) ","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"gweeyc"},"content":"* **Mainstream OS** - Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"gweeyc"},"content":"* **JustBook App**  - A single-user command line app for making and storing student bookings online ","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"gweeyc"},"content":"* **CLI**           - Command Line Interface","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"gweeyc"},"content":"* **booking**       - A typed entry consisting of booking text description, a start Date-Time and end Date-Time ","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"gweeyc"},"content":"* **ISO (time)**    - For Java time Standards, it follows this format: \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"gweeyc"},"content":"* **DateTime**     - Java LocalDateTime implemented with format as \"yyy-M-d HH:mm\", using a 24 hr format","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"gweeyc"},"content":"- Ensure Java jdk 11 is installed","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"gweeyc"},"content":"- Download the justbook.jar file from Release v2.0","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"gweeyc"},"content":"- Obtain a sample test file, e.g. justbook.txt with saved entries (correctly formatted)","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"gweeyc"},"content":"- Copy the sample test file to a local folder named data","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"gweeyc"},"content":"- start up the app, eg.` java -jar justbook.jar` via a windows cmd or compatible terminal","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"gweeyc"},"content":"- Type in a username of your choice","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"gweeyc"},"content":"- Type `show --all` or `show all` to check the display list tallies with those saved in the justbook.txt file","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"yinyin377"},"content":"- Sample instruction:","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"yinyin377"},"content":"\u003cimg width\u003d\"552\" alt\u003d\"Screenshot 2021-10-22 at 12 40 41 PM\" src\u003d\"https://user-images.githubusercontent.com/88772711/138399952-42c4ebfa-ac1a-4a35-922b-c9979d7b1402.png\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"zcnmashleu95"},"content":"## Instructions for Regression testing","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"zcnmashleu95"},"content":"1. Navigate to text-ui-test folder","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"gweeyc"},"content":"2. Depending on your (User\u0027s) OS, if Windows, run runtest.bat, if Linux or macOS, run runtest.sh","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"zcnmashleu95"},"content":"3. The CMD window or shell output will display if the comparison between the expected output and actual output are the same","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"zcnmashleu95"},"content":"4. If there are any differences, they will be displayed at the CMD or shell window as well.","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"zcnmashleu95"},"content":"5. The regression test would have passed if no differences are found.","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"gweeyc":86,"yinyin377":34,"-":30,"zcnmashleu95":5}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"# JustBook Command Line Java Program","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"**JustBook: An easy-to-use Appointment CLI App**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"gweeyc":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"**JustBook: An easy-to-use Appointment CLI App**","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"1. Down the latest version of `JustBook App` from [here](https://github.com/AY2122S1-TIC4001-F18-4/tp/releases/tag/v2.0).","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"Program designed for someone adept with the keyboard, for Single User use. ","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"### Adding a booking: `add`","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"Adds a new item to the list of booking items.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"**Format**: `add BOOKING_DESC /s DATE TIME /e DATE TIME`","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"* The `BOOKING_DESC` can be in a natural language format.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"* The `DATE TIME` uses format *yyyy-M-d* *HH:mm*.","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"* Current version allows within same day booking only.","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"* User expected to input non-clashing same day timing ranges.","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e ","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"`add meet@Sports Hall One lvl 3 /s 2021-6-7 09:00 /e 2021-6-7 10:30`","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"`todo attend IT Exhibit Changi Expo Halls /s 2021-06-07 11:00 /e 2021-06-07 13:30`","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"### Blocking date-range setting: `block \u003cDATE\u003e \u003cDATE\u003e`","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"Blocks users from creating appointments during a specific date range.","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"**Format**: `block DATE DATE`","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"* `DATE` uses format *yyyy-M-d*.","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"* Users may release blocked dates at their discretion _(e.g. via `unblock \u003cdate\u003e \u003cdate\u003e`)_.","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"`block 2021-11-5 2021-11-30`","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"### Deleting all bookings: `del \u003c--all\u003e`","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"Erase all records inside the online appointment database.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"**Format**: `del --all` ","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"* Alternate versions: `del a` or `del all`.","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"`del a`","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"gweeyc"},"content":"### Editing a booking: `edit`","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"gweeyc"},"content":"Edits the booking description of the chosen item (current v2.0).","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"**Format**: `edit BOOKING_DESC /s DATE /o OPTION NO.`","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"* The `BOOKING_DESC` can be in a natural language format.","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"* The `DATE` uses format *yyyy-M-d*.","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"* Current version allows editing the booking text-description only.","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"gweeyc"},"content":"* `OPTION NO.` \u003d the serial no. of an item under a booking list display. ","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"gweeyc"},"content":"* Before using `edit`, user is expected to open up first either","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"gweeyc"},"content":"  - a specific date entries listing _(e.g. via `show \u003cdate\u003e`)_ or ","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"gweeyc"},"content":"  - the entire database listing _(e.g. via `show \u003c--all\u003e`)_.","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"gweeyc"},"content":"`edit meet@Sports Hall One lvl 3 /s 2021-6-7 /o 3`","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"gweeyc"},"content":"`edit attend Exhibit A /s 2021-06-07 /o 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"gweeyc"},"content":"### Exiting Program: `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"gweeyc"},"content":"Exits the JustBook App Program.","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"gweeyc"},"content":"**Format**: `exit`","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"gweeyc"},"content":"* An alternate version: `bye`.","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"gweeyc"},"content":"`exit` or `bye`","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"gweeyc"},"content":"### Showing all bookings: `show \u003c--all\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"gweeyc"},"content":"Displays all database records, headed by distinct dates header, in chronological order.","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"gweeyc"},"content":"**Format**: `show -all`","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"gweeyc"},"content":"* Alternate versions: `show a` or `show all`.","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"gweeyc"},"content":"`show a`","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"gweeyc"},"content":"### Showing a specific date\u0027s list of bookings: `show \u003cDATE\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"gweeyc"},"content":"Displays all records chronologically, under a specific date header.","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"gweeyc"},"content":"**Format**: `show DATE`","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"gweeyc"},"content":"* `DATE` uses format *yyyy-M-d*.","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"gweeyc"},"content":"`show 2021-11-8`","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"gweeyc"},"content":"### Showing all weekends bookings (current month): `show \u003cWEEKENDS\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"gweeyc"},"content":"Displays all weekend records chronologically, under specific weekend headers, for the current month.","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"gweeyc"},"content":"**Format**: `show WEEKENDS`","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"gweeyc"},"content":"* `WEEKENDS` can be in a natural language format.","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"gweeyc"},"content":"* An alternate version: `show we`.","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"gweeyc"},"content":"`show we`","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"gweeyc"},"content":"### Unlocking date-range setting: `unblock \u003cDATE\u003e \u003cDATE\u003e`","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"gweeyc"},"content":"Releases blocked dates during the range period as specified by users.","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"gweeyc"},"content":"**Format**: `unblock DATE DATE`","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"gweeyc"},"content":"* `DATE` uses format *yyyy-M-d*.","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"gweeyc"},"content":"`unblock 2021-11-5 2021-11-30`","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"gweeyc"},"content":"### Undeleting a previous online database delete action: `undel \u003c--all\u003e`","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"gweeyc"},"content":"Erase all records inside the online appointment database.","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"gweeyc"},"content":"**Format**: `undel --all`","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"gweeyc"},"content":"* Alternate versions: `undel a` or `undel all`.","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"gweeyc"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"gweeyc"},"content":"`undel a`","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"yinyin377"},"content":"**Q**: How do I show all the bookings done for a range of days? ","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"yinyin377"},"content":"**A**: you can refer to the _Show all bookings within two date_ in the Command Summary.","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"yinyin377"},"content":"**Q**: How do I delete all the bookings done for a range of days?","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"yinyin377"},"content":"**A**: you can refer to the _Delete all bookings within two date_ in the Command Summary.","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"yinyin377"},"content":"**Q**: How do I save all the bookings on the go?","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"yinyin377"},"content":"**A**: you can simply key in `save`.","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"gweeyc"},"content":"[ \u0027Cheat Sheet\u0027 of **CLI COMMANDS** - _case-sensitive_ ]","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"gweeyc"},"content":"* Add booking: `add \u003cBOOKING_DESC\u003e /s \u003cDATE\u003e \u003cTIME\u003e /e \u003cDATE\u003e \u003cTIME\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"gweeyc"},"content":"* Block date range: `block \u003cDATE\u003e \u003cDATE\u003e`","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"gweeyc"},"content":"* Delete all bookings: `del --all` or `del all` or `del a`","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"gweeyc"},"content":"* Delete all bookings within two dates: `del /b \u003cDATE\u003e \u003cDATE\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"gweeyc"},"content":"* Edit a booking description: `edit \u003cBOOKING_DESC\u003e /s \u003cDATE\u003e /o \u003cOPTION NO.\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"gweeyc"},"content":"* Exit the Program: `exit` or `bye`","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"gweeyc"},"content":"* Save bookings to file: `save`","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"gweeyc"},"content":"* Show all bookings: `show -all` or `show all` or `show a`","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"gweeyc"},"content":"* Show a specific date\u0027s list of bookings: `show \u003cDATE\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"gweeyc"},"content":"* Show all bookings within two dates: `show /b \u003cDATE\u003e \u003cDATE\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"gweeyc"},"content":"* Show all weekends bookings (for current month): `show \u003cweekends\u003e` or `show we`","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"gweeyc"},"content":"* Unlock a blocked date range: `unblock \u003cDATE\u003e \u003cDATE\u003e`","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"gweeyc"},"content":"* Undelete a previous online database delete action: `undel a`","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"gweeyc":140,"yinyin377":7,"-":34}},{"path":"docs/team/gweeyc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"# Gwee Yeu Chai - Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"## Project: JustBook App v3.0 Overview","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"JustBook - Version 3.0 is a desktop application typically designed for use by a modern poly or JC student, in ","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"registering his or her personal bookings or appointments. It leverages on an online database storage facility, backed by","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"an offline backup file. The user interacts with it using a CLI. It is written in Java(ver. 11), and has about 702 LoC.","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"- New Feature: `undel a` command - added the ability to undo a previous `del --all` (delete all) command.","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"  - What it does: allows the user to undo a previous clear all operation on the online database records.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"  - Justification: This feature is to help a busy student user undo the mistake in command or decision made in haste,","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"    and the program should afford an easy way to recover from them. ","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"  - Highlights: This command is designed to work just after a previous delete all call, as well as several user entries","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"    later, so long as the `save`, `bye` or `exit` command has not been used.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"  - Special feature: The above works in tandem with the deliberate add-in _append (file write)_ design in `add` command,","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"    so that the latest additions are all saved to the offline backup file and thus get restored from file, along with ","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"    previous records, upon command invocation.","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"- New Feature: `show we` command - displays only the month\u0027s weekends and book listings, in chronological order. ","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"    - What it does: allows the user to see at a glance if weekends are occupied or there are free slots for use.","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"    - Justification: This feature is to help a socially active student user zoom in on weekend(s) slots.","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"    - Highlights: This command is designed to display weekend dates nearest the point of entry date of the user. A ","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"      \"Status: no bookings yet.\" visual message will be displayed under weekend slots with no bookings yet. ","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"    - Special feature: The commands works in tandem with the normal app functions with visual listings. ","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"- Code contributed: [Team04_gweeyc](https://tinyurl.com/TIC4001gweeycPPP)","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"- Project management:","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"    - Managed releases v1.0 - v3.0 (3 releases) on GitHub","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"    - Overall Administrator of Team Repo","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"- Enhancements to existing features:","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"    - Applied _ResolverStyle.STRICT_ condition on customized DateTimeFormatter patterns to ensure only valid dates are","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"      used","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"    - Designed in the append feature in `add` command to have a record of every new entry saved in the offline backup","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"      file (facilitates `undel a` more flexible usage, power outages or online disruption recovery)","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"    - Enabled logging and included assert statements where helpful","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"    - Made use of HashMap and Map.Entry APIs for fast storage, retrieval and compare operations in the creation of block","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"      list, unblocking functions and the policy on each new appointment entry date","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"    - listWeekends method, underpinning the `show we` command, had its particular search processes optimized so that","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"      unneeded searches are straightaway bypassed","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"    - Display of dates and appointment listings processes had been standardized, optimized for speed and designed to ","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"      work in synchronicity with all the program normal functions","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"    - The input date format was made flexible so user can enter in date digits without a \u00270\u0027 prefix if preferred.","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"    - Wrote new JUnit 5 tests for JustBookTest.java ","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"      (Pull request [#45](https://github.com/AY2122S1-TIC4001-F18-4/tp/pull/45)) ","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"- Documentation:","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"    - User Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"      - Added documentation for the features `show we` and `undel a`","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"      - Done the main format, overall template look and lines coding ([#32](https://github.com/AY2122S1-TIC4001-F18-4/tp/pull/32),","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"        [#33](https://github.com/AY2122S1-TIC4001-F18-4/tp/pull/33), [#34](https://github.com/AY2122S1-TIC4001-F18-4/tp/pull/34))","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"    - Developer Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"      - Added implementation details of the `show we` feature","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"- Community:","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"  - Kicked start the Project with the 1st. skeletal code framework the Team use for subsequent codings","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"gweeyc"},"content":"  - Contributed to [forum discussions](https://github.com/nus-tic4001-AY2122S1/forum/issues?page\u003d1\u0026q\u003dis%3Aissue+is%3Aclosed)","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"gweeyc"},"content":"  - Overall admin duties enacted for the Team Repo setup, maintenance, operations and team encouragement","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"gweeyc"},"content":"  - PRs reviewed ([#7](https://github.com/AY2122S1-TIC4001-F18-4/tp/pull/7),","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"    [#13](https://github.com/AY2122S1-TIC4001-F18-4/tp/pull/13), ","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"    [#25](https://github.com/AY2122S1-TIC4001-F18-4/tp/pull/25)) ","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"- Tools:","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"    - Integrated third party libraries ","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"gweeyc"},"content":"      ([Guava \u0026 JUnit 5.8.1](https://github.com/AY2122S1-TIC4001-F18-4/tp/blob/master/build.gradle)) to the project","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"gweeyc":66}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"distributionUrl\u003dhttps://services.gradle.org/distributions/gradle-6.3-bin.zip","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"-":4,"zcnmashleu95":2}},{"path":"src/main/java/seedu/justbook/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"import static java.time.LocalDateTime.parse;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"public class AddCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"    Bookings record;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"    public AddCommand(String bookDesc, String begin, String end) throws DateTimeParseException {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"        // ensures correct Phase 2 resolution of parsed text fields","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"                .ofPattern(\"uuuu-M-d HH:mm\")","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"        // adds assertions to check for null objects","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"        assert begin !\u003d null : \"begin cannot be null for parse method\";","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"        assert end !\u003d null : \"end cannot be null for parse method\";","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"        record \u003d new Bookings(bookDesc, parse(begin, format), parse(end, format));","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"    public void execute() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"        LocalDateTime begin \u003d record.getStartDateTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"        LocalDateTime end \u003d record.getEndDateTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"        String description \u003d record.getBookDesc();","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"        // checks that \u0027start\u0027 time is before the \u0027end\u0027 time","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"        if (begin.isBefore(end)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"            JustBook.appointments.add(record);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"            System.out.printf(\"Successfully added \\\"%s\\\" from %s to %s%n\",","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"                    description, begin, end);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"            // appends the new booking entry to the database file","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"            try (BufferedWriter fAdd \u003d new BufferedWriter(new FileWriter(\"data/justbook.txt\", true))) {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"                fAdd.write(description + \" | \" + begin + \" | \" + end);","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"                fAdd.newLine();","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"                fAdd.flush();","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"            System.out.println(\"Invalid entry: \u0027start\u0027 time is after the \u0027end\u0027 time? Try again?\");","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"gweeyc":48}},{"path":"src/main/java/seedu/justbook/Bookings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"public class Bookings {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"    String bookDesc;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"    LocalDateTime start;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"    LocalDateTime end;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"    public Bookings(String bookDesc, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"        this.bookDesc \u003d bookDesc;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"    public void setBookDesc(String bookDesc) {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"        this.bookDesc \u003d bookDesc;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"    public void setStart(LocalDateTime start) {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"    public void setEnd(LocalDateTime end) {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"    public String getBookDesc() {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"        return bookDesc;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"        return start;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"        return start.toLocalDate();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"    public String getStartDateString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"        return start.toLocalDate().format(DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"        return String.format(\"%s %s - %s\", bookDesc, start.toLocalTime(), end.toLocalTime());","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"yinyin377"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"yinyin377"},"content":"        return end;","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"yinyin377"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"gweeyc":50,"yinyin377":4,"zcnmashleu95":2}},{"path":"src/main/java/seedu/justbook/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"yinyin377"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"public class DeleteCommand {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"    LocalDate startDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"yinyin377"},"content":"    LocalDate endDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"    int optionNumber;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"    public DeleteCommand(String date, String option) {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"        this.startDate \u003d LocalDate.parse(date, format);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"        this.optionNumber \u003d Integer.parseInt(option);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yinyin377"},"content":"    public DeleteCommand(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yinyin377"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yinyin377"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yinyin377"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"    public void execute(List\u003cBookings\u003e bookings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDate temp;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"        for (Bookings booking : bookings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"            temp \u003d LocalDate.parse(booking.getStartDate().format(formatter), formatter);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"            if (temp.equals(startDate)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"                optionNumber \u003d optionNumber - 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"            if (optionNumber \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"                bookings.remove(booking);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"                System.out.println(\"Successfully removed Appointment at \" + booking.getStartDateString());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"                return;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"        System.out.println(\"Your appointment is not stored in our calendar. Please input a new command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"    public static String getHelp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"        return \"del [Appointment_Start_Date] /o [Option_Number]\";","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"yinyin377"},"content":"    public void deleteRange(List\u003cBookings\u003e bookings) {","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"yinyin377"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"yinyin377"},"content":"        LocalDate temp;","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"yinyin377"},"content":"        for (Iterator\u003cBookings\u003e i \u003d bookings.iterator(); i.hasNext();) {","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"yinyin377"},"content":"            Bookings b \u003d i.next();","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"yinyin377"},"content":"            temp \u003d LocalDate.parse(b.getStartDate().format(formatter), formatter);","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"yinyin377"},"content":"            if (temp.compareTo(startDate) \u003e\u003d 0 \u0026\u0026 temp.compareTo(endDate) \u003c\u003d 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"yinyin377"},"content":"                i.remove();","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"yinyin377"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"yinyin377"},"content":"        System.out.println(\"Successfully removed all appointments between \" + startDate + \" to \" + endDate + \".\");","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"yinyin377"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"yinyin377":23,"gweeyc":1,"zcnmashleu95":37}},{"path":"src/main/java/seedu/justbook/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"public class HelpCommand {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"    public void execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"        String instructions \u003d \"For each command, their inputs will be in the square brackets[]. \"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"                + \"The format will follow Command [Input]\"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"                + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"                + \"Commands: \"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"                + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"                + \"Adding an appointment: add [Appointment_Description] /s [Start_Time] /e [End_Time]\"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"                + \"\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"                + \"Deleting an appointment: \" + DeleteCommand.getHelp()","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"                + \"\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"                + \"Editing an appointment: edit [description] /s [Appointment_Start_Date] /o [Option_Number]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"        System.out.println(instructions);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zcnmashleu95":18}},{"path":"src/main/java/seedu/justbook/JustBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"yinyin377"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"yinyin377"},"content":"import java.io.File;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"yinyin377"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"yinyin377"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"yinyin377"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"import java.util.AbstractMap.SimpleEntry;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"import java.util.EnumSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"import static java.time.LocalDateTime.parse;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"import static java.util.Comparator.comparing;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"public class JustBook {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"    static final List\u003cBookings\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"    static final HashMap\u003cLocalDate, LocalDate\u003e BLOCKLIST \u003d new HashMap\u003c\u003e(5);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"    private static final Logger logger \u003d Logger.getLogger(JustBook.class.getName());","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"yinyin377"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"yinyin377"},"content":"            onLoad();","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"yinyin377"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"yinyin377"},"content":"            System.out.println(ex.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"yinyin377"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"yinyin377"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"        String userName \u003d in.nextLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"        System.out.printf(\"Hello %s,%n\", userName);","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"        // write your code here","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"        System.out.printf(\"Welcome back!%n\");","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"gweeyc"},"content":"        System.out.printf(\"You can now proceed to do your booking :)%n\");","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"gweeyc"},"content":"        while (true) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"gweeyc"},"content":"            System.out.printf(\"%n%s: \", userName);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"            String input \u003d in.nextLine().replace(\"\\\\s+\", \" \").trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"gweeyc"},"content":"            if (input.equals(\"exit\") || input.equals(\"bye\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"gweeyc"},"content":"                System.out.println(\"Bye! See you again!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"yinyin377"},"content":"                int size \u003d appointments.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"gweeyc"},"content":"                logger.log(Level.INFO, \"going to start processing\");","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"gweeyc"},"content":"                try {","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"gweeyc"},"content":"                    assert (size !\u003d 0) : \"database size should not be 0\";","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"gweeyc"},"content":"                } catch (AssertionError ex) {","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"gweeyc"},"content":"                    logger.log(Level.WARNING, \"processing error\", ex);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"gweeyc"},"content":"                logger.log(Level.INFO, \"end of processing\");","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"gweeyc"},"content":"                // does a backup save before program exits","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"gweeyc"},"content":"                onSave();","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"gweeyc"},"content":"                in.close();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"gweeyc"},"content":"                exit(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"gweeyc"},"content":"            String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"gweeyc"},"content":"            String command \u003d tokens[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"zcnmashleu95"},"content":"            String inputContent \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"zcnmashleu95"},"content":"            if (tokens.length \u003e\u003d 2) {","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"zcnmashleu95"},"content":"                inputContent \u003d tokens[1];","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"zcnmashleu95"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"gweeyc"},"content":"            switch (command) {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"gweeyc"},"content":"            case \"add\":","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"zcnmashleu95"},"content":"                String[] arguments \u003d inputContent.split(\" /[s,e] \");","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"gweeyc"},"content":"                String booking \u003d arguments[0];","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"gweeyc"},"content":"                String start \u003d arguments[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"gweeyc"},"content":"                String date \u003d start.substring(0, start.indexOf(\" \"));","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"gweeyc"},"content":"                String end \u003d arguments[2];","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"gweeyc"},"content":"                if (isBlocked(date)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"gweeyc"},"content":"                    continue;","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"gweeyc"},"content":"                try {","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"gweeyc"},"content":"                    AddCommand add \u003d new AddCommand(booking, start, end);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"gweeyc"},"content":"                    add.execute();","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"gweeyc"},"content":"                } catch (DateTimeParseException err) {","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"gweeyc"},"content":"                    System.out.println(\"Input date is invalid! Retry again?\");","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"gweeyc"},"content":"            case \"edit\":","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"zcnmashleu95"},"content":"                String[] segments \u003d inputContent.split(\" /o \", 2);","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"gweeyc"},"content":"                String[] subSeg \u003d segments[0].split(\" /s \", 2);","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"gweeyc"},"content":"                int optionNum;","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"gweeyc"},"content":"                try {","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"gweeyc"},"content":"                    optionNum \u003d Integer.parseInt(segments[1]);","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"gweeyc"},"content":"                } catch (NumberFormatException ex) {","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"gweeyc"},"content":"                    System.out.println(\"User No. input was not a number.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"gweeyc"},"content":"                    continue;","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"gweeyc"},"content":"                String bookDesc \u003d subSeg[0];","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"gweeyc"},"content":"                String chosenDate \u003d subSeg[1];","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"gweeyc"},"content":"                edit(bookDesc, chosenDate, optionNum);","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"gweeyc"},"content":"            case \"save\":","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"gweeyc"},"content":"                onSave();","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"gweeyc"},"content":"            case \"del\":","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"gweeyc"},"content":"                if (inputContent.equals(\"a\") || inputContent.contains(\"all\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"gweeyc"},"content":"                    appointments.clear();","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"gweeyc"},"content":"                    System.out.println(\"Successfully deleted all appointment records\");","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"yinyin377"},"content":"                } else if (inputContent.contains(\"/b\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"yinyin377"},"content":"                    String[] dateRange \u003d inputContent.split(\" \",3);","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"yinyin377"},"content":"                    LocalDate startDate \u003d LocalDate.parse(dateRange[1], DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"yinyin377"},"content":"                    LocalDate endDate \u003d LocalDate.parse(dateRange[2], DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"yinyin377"},"content":"                    DeleteCommand delRange \u003d new DeleteCommand(startDate, endDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"yinyin377"},"content":"                    delRange.deleteRange(appointments);","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"gweeyc"},"content":"                } else {","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"zcnmashleu95"},"content":"                    int index \u003d inputContent.indexOf(\"/o\");","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"zcnmashleu95"},"content":"                    String inputDate \u003d inputContent.substring(0, index).trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"zcnmashleu95"},"content":"                    String optionNumber \u003d inputContent.substring(index).replace(\"/o\", \"\").trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"zcnmashleu95"},"content":"                    DeleteCommand del \u003d new DeleteCommand(inputDate, optionNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"zcnmashleu95"},"content":"                    del.execute(appointments);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"gweeyc"},"content":"            case \"show\":","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"gweeyc"},"content":"                // sorts the database in ascending order","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"gweeyc"},"content":"                appointments.sort(comparing(Bookings::getStartDateTime));","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"gweeyc"},"content":"                int listNum \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"gweeyc"},"content":"                int totalRecords \u003d appointments.size();","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"gweeyc"},"content":"                if (inputContent.equals(\"a\") || inputContent.contains(\"all\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"gweeyc"},"content":"                    //displays user\u0027s complete list of bookings in the database","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"gweeyc"},"content":"                    displayRecords(listNum, totalRecords);","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"yinyin377"},"content":"                } else if (inputContent.contains(\"/b\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"yinyin377"},"content":"                    String[] dateRange \u003d inputContent.split(\" \",3);","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"yinyin377"},"content":"                    LocalDate startDate \u003d LocalDate.parse(dateRange[1], DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"yinyin377"},"content":"                    LocalDate endDate \u003d LocalDate.parse(dateRange[2], DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"yinyin377"},"content":"                    showRange(startDate, endDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"yinyin377"},"content":"                } else if (inputContent.matches(\"^(.*)-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"gweeyc"},"content":"                    //displays user\u0027s selected date list of bookings in the database","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"gweeyc"},"content":"                    displayDateBookings(inputContent, listNum);","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"gweeyc"},"content":"                } else if (inputContent.equals(\"we\") || inputContent.equals(\"weekends\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"gweeyc"},"content":"                    //displays user\u0027s current month list of weekend bookings in the database, if any","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"gweeyc"},"content":"                    listWeekends();","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"yinyin377"},"content":"                } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"yinyin377"},"content":"                    System.out.println(\"You have entered an unknown or invalid date, please try again!\");","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"gweeyc"},"content":"            case \"block\": case \"unblock\":","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"gweeyc"},"content":"                setBlockRules(command, inputContent);","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"gweeyc"},"content":"            case \"help\":","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"gweeyc"},"content":"                HelpCommand help \u003d new HelpCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"gweeyc"},"content":"                help.execute();","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"gweeyc"},"content":"            case \"undel\":","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"gweeyc"},"content":"                if (inputContent.contains(\"a\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"gweeyc"},"content":"                    try {","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"gweeyc"},"content":"                        onLoad();","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"gweeyc"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"gweeyc"},"content":"                        e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"gweeyc"},"content":"                    }","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"gweeyc"},"content":"                System.out.println(\"Online database status: Fully restored.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"gweeyc"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"gweeyc"},"content":"                System.out.println(\"You have entered an unknown or invalid command, please try again!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"gweeyc"},"content":"    private static void displayDateBookings(String inputContent, int listNum) {","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"gweeyc"},"content":"        LocalDate localDate \u003d LocalDate.parse(inputContent, DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"gweeyc"},"content":"        String putDate \u003d String.valueOf(localDate).replaceAll(\"-\", \"/\");","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"gweeyc"},"content":"        //displays the specified date booking(s) of user","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"gweeyc"},"content":"        LocalDate dateIso;","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"gweeyc"},"content":"        System.out.printf(\"%nDate: %s%n\", putDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"gweeyc"},"content":"        if (inputContent.matches(\"^((2[0-9])[0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"gweeyc"},"content":"            dateIso \u003d LocalDate.parse(inputContent);","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"yinyin377"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"gweeyc"},"content":"            dateIso \u003d formLocalDate(inputContent);","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"gweeyc"},"content":"        for (Bookings item : appointments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"gweeyc"},"content":"            if (dateIso.equals(item.getStartDate())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"gweeyc"},"content":"                System.out.printf(\"%d. %s%n\", listNum++, item);","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"yinyin377"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"gweeyc"},"content":"        System.out.println();","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"gweeyc"},"content":"    private static void displayRecords(int listNum, int totalRecords) {","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"gweeyc"},"content":"        if (totalRecords \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"gweeyc"},"content":"            System.out.println(\"Current appointments list is : empty\");","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"gweeyc"},"content":"        System.out.println();","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"gweeyc"},"content":"        for (int i \u003d 0; i \u003c totalRecords; ) {","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"gweeyc"},"content":"            LocalDate startDate \u003d appointments.get(i).getStartDate();","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"gweeyc"},"content":"            String dateHeader \u003d String.valueOf(startDate).replaceAll(\"-\", \"/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"gweeyc"},"content":"            System.out.printf(\"Date: %s%n\", dateHeader);","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"gweeyc"},"content":"            while (i \u003c totalRecords \u0026\u0026 appointments.get(i).getStartDate().equals(startDate)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"gweeyc"},"content":"                System.out.printf(\"%d. %s%n\", listNum++, appointments.get(i));","lastModifiedDate":"2021-10-11"},{"lineNumber":247,"author":{"gitId":"gweeyc"},"content":"                i++;","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":249,"author":{"gitId":"gweeyc"},"content":"            // resets ListNum value to 1 for next date header","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"gweeyc"},"content":"            listNum \u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"gweeyc"},"content":"            System.out.println();","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"gweeyc"},"content":"    public static void edit(String amendDesc, String startDate, int optionNumber) {","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"gweeyc"},"content":"        int bookNum \u003d optionNumber;","lastModifiedDate":"2021-10-31"},{"lineNumber":257,"author":{"gitId":"gweeyc"},"content":"        LocalDate testDate \u003d formLocalDate(startDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":258,"author":{"gitId":"gweeyc"},"content":"        LocalDate temp;","lastModifiedDate":"2021-10-31"},{"lineNumber":259,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":260,"author":{"gitId":"gweeyc"},"content":"        for (Bookings booking : appointments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":261,"author":{"gitId":"gweeyc"},"content":"            temp \u003d booking.getStartDate();","lastModifiedDate":"2021-10-31"},{"lineNumber":262,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":263,"author":{"gitId":"gweeyc"},"content":"            if (temp.equals(testDate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":264,"author":{"gitId":"gweeyc"},"content":"                --optionNumber;","lastModifiedDate":"2021-10-31"},{"lineNumber":265,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":266,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"gweeyc"},"content":"            if (optionNumber \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":268,"author":{"gitId":"gweeyc"},"content":"                String bookingDesc \u003d booking.getBookDesc();","lastModifiedDate":"2021-10-31"},{"lineNumber":269,"author":{"gitId":"gweeyc"},"content":"                booking.setBookDesc(amendDesc);","lastModifiedDate":"2021-10-31"},{"lineNumber":270,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"gweeyc"},"content":"                System.out.printf(\"Successfully changed \\\"%s\\\" on %s : book #%d%n\", bookingDesc,","lastModifiedDate":"2021-10-31"},{"lineNumber":272,"author":{"gitId":"gweeyc"},"content":"                        startDate.replaceAll(\"-\", \"/\"), bookNum);","lastModifiedDate":"2021-10-31"},{"lineNumber":273,"author":{"gitId":"gweeyc"},"content":"                System.out.printf(\"To \\\"%s\\\" on %s : book #%d%n\", amendDesc, testDate, bookNum);","lastModifiedDate":"2021-10-31"},{"lineNumber":274,"author":{"gitId":"gweeyc"},"content":"                return;","lastModifiedDate":"2021-10-31"},{"lineNumber":275,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"gweeyc"},"content":"        System.out.println(\"Your appointment is not stored in our calendar. Pl check the start date.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":278,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"gweeyc"},"content":"    private static LocalDate formLocalDate(String date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":281,"author":{"gitId":"gweeyc"},"content":"        LocalDate dateIso \u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":282,"author":{"gitId":"gweeyc"},"content":"        int[] figures \u003d Arrays.stream(date.split(\"-\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":283,"author":{"gitId":"gweeyc"},"content":"                .mapToInt(Integer::parseInt)","lastModifiedDate":"2021-10-31"},{"lineNumber":284,"author":{"gitId":"gweeyc"},"content":"                .toArray();","lastModifiedDate":"2021-10-31"},{"lineNumber":285,"author":{"gitId":"gweeyc"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":286,"author":{"gitId":"gweeyc"},"content":"            dateIso \u003d LocalDate.of(figures[0], figures[1], figures[2]);","lastModifiedDate":"2021-10-31"},{"lineNumber":287,"author":{"gitId":"gweeyc"},"content":"        } catch (DateTimeException ex) {","lastModifiedDate":"2021-10-31"},{"lineNumber":288,"author":{"gitId":"gweeyc"},"content":"            System.out.println(\"An invalid date entry detected! Try again?\");","lastModifiedDate":"2021-10-31"},{"lineNumber":289,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"gweeyc"},"content":"        return dateIso;","lastModifiedDate":"2021-10-31"},{"lineNumber":291,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"gweeyc"},"content":"    public static boolean isBlocked(String date) {","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"gweeyc"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"gweeyc"},"content":"        LocalDate startLocalDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":297,"author":{"gitId":"gweeyc"},"content":"        Map.Entry\u003cBoolean, Map.Entry\u003cLocalDate, LocalDate\u003e\u003e result \u003d isInRange(startLocalDate);","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"gweeyc"},"content":"        if (result.getKey()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":300,"author":{"gitId":"gweeyc"},"content":"            System.out.printf(\"\u0027%s\u0027 denied process by current BLOCKLIST \u003d\u003e StartDate: [%s] - EndDate: [%s]%n\",","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"gweeyc"},"content":"                    startLocalDate, result.getValue().getKey(), result.getValue().getValue());","lastModifiedDate":"2021-10-20"},{"lineNumber":302,"author":{"gitId":"gweeyc"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"gweeyc"},"content":"        return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":306,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"gweeyc"},"content":"    private static Map.Entry\u003cBoolean, Map.Entry\u003cLocalDate, LocalDate\u003e\u003e isInRange(LocalDate testDate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"gweeyc"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"gweeyc"},"content":"        Map.Entry\u003cLocalDate, LocalDate\u003e member \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"gweeyc"},"content":"        for (Map.Entry\u003cLocalDate, LocalDate\u003e entry : BLOCKLIST.entrySet()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"gweeyc"},"content":"            if (!(testDate.isBefore(entry.getKey()) || testDate.isAfter(entry.getValue()))) {","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"gweeyc"},"content":"                member \u003d entry;","lastModifiedDate":"2021-10-13"},{"lineNumber":315,"author":{"gitId":"gweeyc"},"content":"                flag \u003d true;","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":318,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":319,"author":{"gitId":"gweeyc"},"content":"        return new SimpleEntry\u003c\u003e(flag, member);","lastModifiedDate":"2021-10-13"},{"lineNumber":320,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":322,"author":{"gitId":"gweeyc"},"content":"    // displays the full current month\u0027s weekends listings","lastModifiedDate":"2021-10-31"},{"lineNumber":323,"author":{"gitId":"gweeyc"},"content":"    public static void listWeekends() {","lastModifiedDate":"2021-10-31"},{"lineNumber":324,"author":{"gitId":"gweeyc"},"content":"        Set\u003cDayOfWeek\u003e weekEnds \u003d EnumSet.of(DayOfWeek.SATURDAY, DayOfWeek.SUNDAY);","lastModifiedDate":"2021-10-31"},{"lineNumber":325,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":326,"author":{"gitId":"gweeyc"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-31"},{"lineNumber":327,"author":{"gitId":"gweeyc"},"content":"        int year \u003d currentDate.getYear();","lastModifiedDate":"2021-10-31"},{"lineNumber":328,"author":{"gitId":"gweeyc"},"content":"        Month month \u003d currentDate.getMonth();","lastModifiedDate":"2021-10-31"},{"lineNumber":329,"author":{"gitId":"gweeyc"},"content":"        int currentDay \u003d currentDate.getDayOfMonth();","lastModifiedDate":"2021-10-31"},{"lineNumber":330,"author":{"gitId":"gweeyc"},"content":"        int daysOfMth \u003d currentDate.lengthOfMonth();","lastModifiedDate":"2021-10-31"},{"lineNumber":331,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":332,"author":{"gitId":"gweeyc"},"content":"        IntStream.rangeClosed(currentDay, daysOfMth)","lastModifiedDate":"2021-10-31"},{"lineNumber":333,"author":{"gitId":"gweeyc"},"content":"                .mapToObj(day -\u003e LocalDate.of(year, month, day))","lastModifiedDate":"2021-10-31"},{"lineNumber":334,"author":{"gitId":"gweeyc"},"content":"                .filter(date -\u003e weekEnds.contains(date.getDayOfWeek()))","lastModifiedDate":"2021-10-31"},{"lineNumber":335,"author":{"gitId":"gweeyc"},"content":"                .forEach(JustBook::weekendListings);","lastModifiedDate":"2021-10-31"},{"lineNumber":336,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":337,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":338,"author":{"gitId":"gweeyc"},"content":"    protected static void onLoad() throws IOException {","lastModifiedDate":"2021-11-01"},{"lineNumber":339,"author":{"gitId":"yinyin377"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2021-10-14"},{"lineNumber":340,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":341,"author":{"gitId":"yinyin377"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":342,"author":{"gitId":"yinyin377"},"content":"            directory.mkdir();","lastModifiedDate":"2021-10-14"},{"lineNumber":343,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":344,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":345,"author":{"gitId":"yinyin377"},"content":"        File f \u003d new File(\"data/justbook.txt\");","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":347,"author":{"gitId":"yinyin377"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":348,"author":{"gitId":"yinyin377"},"content":"            f.createNewFile();","lastModifiedDate":"2021-10-14"},{"lineNumber":349,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":350,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":351,"author":{"gitId":"yinyin377"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-10-14"},{"lineNumber":352,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":353,"author":{"gitId":"yinyin377"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":354,"author":{"gitId":"yinyin377"},"content":"            //read all lines","lastModifiedDate":"2021-10-14"},{"lineNumber":355,"author":{"gitId":"yinyin377"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-10-14"},{"lineNumber":356,"author":{"gitId":"yinyin377"},"content":"            String[] readData \u003d input.split(\" \\\\| \");","lastModifiedDate":"2021-10-14"},{"lineNumber":357,"author":{"gitId":"yinyin377"},"content":"            LocalDateTime start \u003d parse(readData[1]);","lastModifiedDate":"2021-10-14"},{"lineNumber":358,"author":{"gitId":"yinyin377"},"content":"            LocalDateTime end \u003d parse(readData[2]);","lastModifiedDate":"2021-10-14"},{"lineNumber":359,"author":{"gitId":"yinyin377"},"content":"            appointments.add(new Bookings(readData[0], start, end));","lastModifiedDate":"2021-10-14"},{"lineNumber":360,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":361,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":362,"author":{"gitId":"yinyin377"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":363,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":364,"author":{"gitId":"gweeyc"},"content":"    private static void onSave() {","lastModifiedDate":"2021-10-14"},{"lineNumber":365,"author":{"gitId":"yinyin377"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":366,"author":{"gitId":"yinyin377"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"data/justbook.txt\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":367,"author":{"gitId":"yinyin377"},"content":"            //writes all tasks into file","lastModifiedDate":"2021-10-14"},{"lineNumber":368,"author":{"gitId":"yinyin377"},"content":"            for (Bookings item : appointments) {","lastModifiedDate":"2021-10-14"},{"lineNumber":369,"author":{"gitId":"yinyin377"},"content":"                String description \u003d item.getBookDesc();","lastModifiedDate":"2021-10-14"},{"lineNumber":370,"author":{"gitId":"yinyin377"},"content":"                LocalDateTime startDate \u003d item.getStartDateTime();","lastModifiedDate":"2021-10-14"},{"lineNumber":371,"author":{"gitId":"yinyin377"},"content":"                LocalDateTime endDate \u003d item.getEndDateTime();","lastModifiedDate":"2021-10-14"},{"lineNumber":372,"author":{"gitId":"yinyin377"},"content":"                writer.write(description + \" | \" + startDate + \" | \" + endDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":373,"author":{"gitId":"yinyin377"},"content":"                writer.newLine();","lastModifiedDate":"2021-10-14"},{"lineNumber":374,"author":{"gitId":"yinyin377"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":375,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":376,"author":{"gitId":"yinyin377"},"content":"            writer.close();","lastModifiedDate":"2021-10-14"},{"lineNumber":377,"author":{"gitId":"yinyin377"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":378,"author":{"gitId":"yinyin377"},"content":"            //prints exception message.","lastModifiedDate":"2021-10-14"},{"lineNumber":379,"author":{"gitId":"yinyin377"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":380,"author":{"gitId":"yinyin377"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":381,"author":{"gitId":"yinyin377"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":382,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":383,"author":{"gitId":"gweeyc"},"content":"    protected static void setBlockRules(String command, String inputContent) {","lastModifiedDate":"2021-11-02"},{"lineNumber":384,"author":{"gitId":"gweeyc"},"content":"        String[] parts \u003d inputContent.split(\" \", 2);","lastModifiedDate":"2021-10-31"},{"lineNumber":385,"author":{"gitId":"gweeyc"},"content":"        LocalDate commence \u003d formLocalDate(parts[0]);","lastModifiedDate":"2021-10-31"},{"lineNumber":386,"author":{"gitId":"gweeyc"},"content":"        LocalDate terminate \u003d formLocalDate(parts[1]);","lastModifiedDate":"2021-10-31"},{"lineNumber":387,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":388,"author":{"gitId":"gweeyc"},"content":"        assert commence !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":389,"author":{"gitId":"gweeyc"},"content":"        assert terminate !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":390,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":391,"author":{"gitId":"gweeyc"},"content":"        // checks the dates input is a range and chronologically correct","lastModifiedDate":"2021-10-31"},{"lineNumber":392,"author":{"gitId":"gweeyc"},"content":"        if (commence.isAfter(terminate) || commence.isEqual(terminate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":393,"author":{"gitId":"gweeyc"},"content":"            System.out.println(\"Start date cannot be equal to or after the end date. Try again?\");","lastModifiedDate":"2021-10-31"},{"lineNumber":394,"author":{"gitId":"gweeyc"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":395,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":396,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":397,"author":{"gitId":"gweeyc"},"content":"        DateTimeFormatter formatStyle \u003d DateTimeFormatter","lastModifiedDate":"2021-10-31"},{"lineNumber":398,"author":{"gitId":"gweeyc"},"content":"                .ofPattern(\"dd/MM/uuuu\")","lastModifiedDate":"2021-10-31"},{"lineNumber":399,"author":{"gitId":"gweeyc"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-10-31"},{"lineNumber":400,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":401,"author":{"gitId":"gweeyc"},"content":"        String begin \u003d commence.format(formatStyle);","lastModifiedDate":"2021-10-31"},{"lineNumber":402,"author":{"gitId":"gweeyc"},"content":"        String stop \u003d terminate.format(formatStyle);","lastModifiedDate":"2021-10-31"},{"lineNumber":403,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":404,"author":{"gitId":"gweeyc"},"content":"        if (command.equals(\"block\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":405,"author":{"gitId":"gweeyc"},"content":"            BLOCKLIST.put(commence, terminate);","lastModifiedDate":"2021-10-31"},{"lineNumber":406,"author":{"gitId":"gweeyc"},"content":"            System.out.printf(\"Date Range: \\\"%s - %s\\\" has been successfully blocked out in your scheduler%n\",","lastModifiedDate":"2021-10-31"},{"lineNumber":407,"author":{"gitId":"gweeyc"},"content":"                    begin, stop);","lastModifiedDate":"2021-10-31"},{"lineNumber":408,"author":{"gitId":"gweeyc"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":409,"author":{"gitId":"gweeyc"},"content":"            BLOCKLIST.remove(commence);","lastModifiedDate":"2021-10-31"},{"lineNumber":410,"author":{"gitId":"gweeyc"},"content":"            System.out.printf(\"Date Range: \\\"%s - %s\\\" has been successfully unblocked out in your scheduler%n\",","lastModifiedDate":"2021-10-31"},{"lineNumber":411,"author":{"gitId":"gweeyc"},"content":"                    begin, stop);","lastModifiedDate":"2021-10-31"},{"lineNumber":412,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":413,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":414,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":415,"author":{"gitId":"gweeyc"},"content":"    private static void showRange(LocalDate startRangeDate, LocalDate endRangeDate) {","lastModifiedDate":"2021-10-31"},{"lineNumber":416,"author":{"gitId":"gweeyc"},"content":"        int listNum \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":417,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":418,"author":{"gitId":"gweeyc"},"content":"        // sorts the database in ascending order","lastModifiedDate":"2021-10-31"},{"lineNumber":419,"author":{"gitId":"gweeyc"},"content":"        appointments.sort(comparing(Bookings::getStartDateTime));","lastModifiedDate":"2021-10-31"},{"lineNumber":420,"author":{"gitId":"gweeyc"},"content":"        int total \u003d appointments.size();","lastModifiedDate":"2021-10-31"},{"lineNumber":421,"author":{"gitId":"gweeyc"},"content":"        //displays user\u0027s complete list of bookings in the database","lastModifiedDate":"2021-10-31"},{"lineNumber":422,"author":{"gitId":"gweeyc"},"content":"        System.out.println();","lastModifiedDate":"2021-10-31"},{"lineNumber":423,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":424,"author":{"gitId":"gweeyc"},"content":"        for (int i \u003d 0; i \u003c total; ) {","lastModifiedDate":"2021-10-31"},{"lineNumber":425,"author":{"gitId":"gweeyc"},"content":"            if (appointments.get(i).getStartDate().compareTo(startRangeDate) \u003e\u003d 0","lastModifiedDate":"2021-10-31"},{"lineNumber":426,"author":{"gitId":"gweeyc"},"content":"                    \u0026\u0026 appointments.get(i).getStartDate().compareTo(endRangeDate) \u003c\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":427,"author":{"gitId":"gweeyc"},"content":"                LocalDate startDate \u003d appointments.get(i).getStartDate();","lastModifiedDate":"2021-10-31"},{"lineNumber":428,"author":{"gitId":"gweeyc"},"content":"                String dateHeader \u003d String.valueOf(startDate).replaceAll(\"-\", \"/\");","lastModifiedDate":"2021-10-31"},{"lineNumber":429,"author":{"gitId":"gweeyc"},"content":"                System.out.printf(\"Date: %s%n\", dateHeader);","lastModifiedDate":"2021-10-31"},{"lineNumber":430,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":431,"author":{"gitId":"gweeyc"},"content":"                while (appointments.get(i).getStartDate().equals(startDate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":432,"author":{"gitId":"gweeyc"},"content":"                    System.out.printf(\"%d. %s%n\", listNum++, appointments.get(i));","lastModifiedDate":"2021-10-31"},{"lineNumber":433,"author":{"gitId":"gweeyc"},"content":"                    i++;","lastModifiedDate":"2021-10-31"},{"lineNumber":434,"author":{"gitId":"gweeyc"},"content":"                }","lastModifiedDate":"2021-10-31"},{"lineNumber":435,"author":{"gitId":"gweeyc"},"content":"                // resets ListNum value to 1 for next date header","lastModifiedDate":"2021-10-31"},{"lineNumber":436,"author":{"gitId":"gweeyc"},"content":"                listNum \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":437,"author":{"gitId":"gweeyc"},"content":"                System.out.println();","lastModifiedDate":"2021-10-31"},{"lineNumber":438,"author":{"gitId":"gweeyc"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":439,"author":{"gitId":"gweeyc"},"content":"                i++;","lastModifiedDate":"2021-10-31"},{"lineNumber":440,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":441,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":442,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":443,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":444,"author":{"gitId":"gweeyc"},"content":"    public static void weekendListings(LocalDate date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":445,"author":{"gitId":"gweeyc"},"content":"        int serialNo \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":446,"author":{"gitId":"gweeyc"},"content":"        String dateHeader \u003d String.valueOf(date).replaceAll(\"-\", \"/\");","lastModifiedDate":"2021-10-31"},{"lineNumber":447,"author":{"gitId":"gweeyc"},"content":"        String weekendName \u003d date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.ENGLISH).toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":448,"author":{"gitId":"gweeyc"},"content":"        System.out.printf(\"%nDate: %s (%s)%n\", dateHeader, weekendName);","lastModifiedDate":"2021-10-31"},{"lineNumber":449,"author":{"gitId":"gweeyc"},"content":"        // flag to reduce unneeded extra loop searches","lastModifiedDate":"2021-11-01"},{"lineNumber":450,"author":{"gitId":"gweeyc"},"content":"        boolean isWkEnd \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":451,"author":{"gitId":"gweeyc"},"content":"        // uses already sorted \u0027appointments\u0027 database here","lastModifiedDate":"2021-11-01"},{"lineNumber":452,"author":{"gitId":"gweeyc"},"content":"        for (Bookings entry : appointments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":453,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":454,"author":{"gitId":"gweeyc"},"content":"            if (date.equals(entry.getStartDate())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":455,"author":{"gitId":"gweeyc"},"content":"                System.out.printf(\"%d. %s%n\", serialNo++, entry);","lastModifiedDate":"2021-10-31"},{"lineNumber":456,"author":{"gitId":"gweeyc"},"content":"                isWkEnd \u003d true;","lastModifiedDate":"2021-11-01"},{"lineNumber":457,"author":{"gitId":"gweeyc"},"content":"                continue;","lastModifiedDate":"2021-10-31"},{"lineNumber":458,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":459,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":460,"author":{"gitId":"gweeyc"},"content":"            if (isWkEnd) {","lastModifiedDate":"2021-10-31"},{"lineNumber":461,"author":{"gitId":"gweeyc"},"content":"                break;","lastModifiedDate":"2021-10-31"},{"lineNumber":462,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":463,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":464,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":465,"author":{"gitId":"gweeyc"},"content":"        if (!isWkEnd) {","lastModifiedDate":"2021-11-01"},{"lineNumber":466,"author":{"gitId":"gweeyc"},"content":"            System.out.println(\"Status: no bookings yet.\");","lastModifiedDate":"2021-11-01"},{"lineNumber":467,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":468,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":469,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yinyin377":77,"gweeyc":363,"-":17,"zcnmashleu95":12}},{"path":"src/main/java/seedu/justbook/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"public class Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"gweeyc":4}},{"path":"src/main/java/seedu/justbook/UserInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hana-oxy"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"hana-oxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"hana-oxy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"hana-oxy"},"content":"import java.io.File;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"hana-oxy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"hana-oxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"hana-oxy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"hana-oxy"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"hana-oxy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"hana-oxy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"hana-oxy"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"hana-oxy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"hana-oxy"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"hana-oxy"},"content":"import java.util.AbstractMap.SimpleEntry;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"hana-oxy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"hana-oxy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"hana-oxy"},"content":"import java.util.EnumSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"hana-oxy"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"hana-oxy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"hana-oxy"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"hana-oxy"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"hana-oxy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"hana-oxy"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"hana-oxy"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"hana-oxy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"hana-oxy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"hana-oxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"hana-oxy"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"hana-oxy"},"content":"import static java.time.LocalDateTime.parse;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"hana-oxy"},"content":"import static java.util.Comparator.comparing;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"hana-oxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"hana-oxy"},"content":"public class UserInterface {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"hana-oxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"hana-oxy"},"content":"    static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"hana-oxy"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"hana-oxy"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"hana-oxy"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"hana-oxy"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"hana-oxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"hana-oxy"},"content":"    static void printGreeting() {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"hana-oxy"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"hana-oxy"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"hana-oxy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"hana-oxy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"hana-oxy"},"content":"    static void welcomeUser(String userName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"hana-oxy"},"content":"        System.out.printf(\"Hello %s,%n\", userName);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"hana-oxy"},"content":"        System.out.printf(\"Welcome back!%n\");","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"hana-oxy"},"content":"        System.out.printf(\"You can now proceed to do your booking :)%n\");","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"hana-oxy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"hana-oxy"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"hana-oxy":50}},{"path":"src/test/java/seedu/justbook/BookingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"class BookingsTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"    @DisplayName(\"get LocalDate from start LocalDateTime\")","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"    public void getStartDateTest() {","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(\"2021-06-07T10:00:00\");","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(\"2021-06-07T11:00:00\");","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDate expected \u003d LocalDate.of(2021, 6, 7);","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"        Bookings testModel \u003d new Bookings(\"Meeting@Hall One\", startDate, endDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"        assertEquals(expected, testModel.getStartDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"    @DisplayName(\"get Booking\u0027s description\")","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"    public void getBookDescTest() {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(\"2021-06-07T10:00:00\");","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(\"2021-06-07T11:00:00\");","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"        String expected \u003d \"Meeting@Hall One\";","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"        Bookings testModel \u003d new Bookings(\"Meeting@Hall One\", startDate, endDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"        assertEquals(expected, testModel.getBookDesc());","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"zcnmashleu95":36}},{"path":"src/test/java/seedu/justbook/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"package seedu.justbook;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"    @DisplayName(\"Deleting \")","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"    public void getStartDateTest() {","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(\"2021-06-07T10:00:00\");","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(\"2021-06-07T11:00:00\");","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"        LocalDate expected \u003d LocalDate.of(2021, 6, 7);","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"        Bookings testModel \u003d new Bookings(\"Meeting@Hall One\", startDate, endDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"        assertEquals(expected, testModel.getStartDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"zcnmashleu95":20}},{"path":"src/test/java/seedu/justbook/JustBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.justbook;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"@DisplayName(\"JUnit 5 JustBook Testing\")","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"public class JustBookTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"    static HashMap\u003cLocalDate, LocalDate\u003e POLICE \u003d JustBook.BLOCKLIST;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"    private static final PrintStream stdOut \u003d System.out;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"    private static final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"    static void setUp() {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"        POLICE.put(LocalDate.of(2021,6,8), LocalDate.of(2021, 6, 30));","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"    @DisplayName(\"`block` CLI Command output test\")","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"    public void setBlockRulesTest() {","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"        JustBook.setBlockRules(\"block\", \"2021-6-6 2021-6-5\");","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"        assertEquals(\"Start date cannot be equal to or after the end date. Try again?\",","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"                outputStreamCaptor.toString()","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"                .trim());","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"    @DisplayName(\"`unblock` CLI Command test\")","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"    public void setBlockRulesTest_2() {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"        JustBook.setBlockRules(\"unblock\", \"2021-6-8 2021-6-30\");","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"        assertEquals(\"Date Range: \\\"08/06/2021 - 30/06/2021\\\" has been successfully unblocked out in your scheduler\",","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"                outputStreamCaptor.toString()","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"                        .trim());","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"        // tests successful removal of block entry in POLICE","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"        assertEquals(0,POLICE.size());","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"    @AfterAll","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"    static void tearDown() {","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"        System.setOut(stdOut);","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"        POLICE.clear();","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"        POLICE \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"gweeyc":55}},{"path":"text-ui-test/general_test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"cd ..\\..\\","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\general_test\\input.txt \u003e ..\\..\\text-ui-test\\general_test\\ACTUAL.TXT","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"FC ..\\..\\text-ui-test\\general_test\\ACTUAL.TXT ..\\..\\text-ui-test\\general_test\\EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":15,"zcnmashleu95":4}},{"path":"text-ui-test/general_test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"cd ../../","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c general_test/input.txt \u003e general_test/ACTUAL.TXT","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"cp general_test/EXPECTED.TXT general_test/EXPECTED-UNIX.TXT","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"dos2unix text-ui-test/general_test/EXPECTED-UNIX.TXT general_test/ACTUAL.TXT","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"diff general_test/EXPECTED-UNIX.TXT general_test/ACTUAL.TXT","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":18,"zcnmashleu95":5}},{"path":"text-ui-test/runtestmain.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"@ECHO OFF","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"REM Navigate to existing tests and call them","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"cd general_test","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"call runtest.bat","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"cd ..","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"pause","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"zcnmashleu95":11}}]
