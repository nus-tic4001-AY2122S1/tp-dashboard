[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"# Daffy  ","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"This is an extension of Duke project.","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"chenghuiyuan":2,"-":61}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Wei Hua | [Github](https://github.com/thisisdax) | [Portfolio](team/thisisdax.md)","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Spencer Nah | [Github](https://github.com/spencernah) | [Portfolio](team/spencernah.md)","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Cheng Hui Yuan | [Github](https://github.com/chenghuiyuan) | [Portfolio](team/chenghuiyuan.md)","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"e0262191"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Broderick | [Github](https://github.com/e0262191) | [Portfolio](team/e0262191.md)","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhuang Yongming | [Github](https://github.com/yaololo/) | [Portfolio](team/yaololo.md)","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"e0262191":2,"thisisdax":1,"chenghuiyuan":1,"yaololo":1,"spencernah":1,"-":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"Thanks to NUS fundamental code for Duke as well as the idea and inspiration behind this project. Daffy is an extension beyond the original Duke project.","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"## Design \u0026 Implementation","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"### Architecture","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280px\" alt\u003d\"architecture-diagram\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"#### Main Class","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"Main component is the coordinator to handle user input and execute the corresponding task by interacting with logic","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"layer.","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"#### Logic Layer","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"This layer contains two main components, `Parser` and `Command`.","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"- Parser will parse user input and return a `Command` object to the caller which is `Duke` class","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"- The `Command` will execute the tasks which corresponds to the user input. It will update the list of `Model`","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"  information and use `UI` component to print out relevant message.","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"#### Model Layer","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"- This layer consists a several `Task` models:","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"  - `Todo` task: the basic task which contains only the todo description and `done` status.","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"  - `Appointment` task: apart from the description and status, it also has `time` and `location` attributes.","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"- The system will generate a list of different `Task` to user.","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"#### UI Layer","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"- This layer is only for print different message for user based on the user input.","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"### Components Interaction","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"The sequence diagram blow shows how the components interact with each other to achieve desired result. This is taking","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"example of user input `view -a`.","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"\u003cimg src\u003d\"images/ViewSequenceDiagram.png\" alt\u003d\"sequence-diagram\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"From the sequence diagram, we can see that a user input `View -a` to and`Duke` class called `Parser.parse` method with the user input to get a `Command` object. The `execute` method of the `Command` object is called to carry out the task.","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"The reason of doing this is to decouple the parsing logic and task execution logic which is the implementation follows `Single Responsibility Principle`.","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"### Implementation","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"The Main flow of the software is to get user input -\u003e parser user input -\u003e execute task -\u003e provide feedback to user regarding the user action.","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"#### Task execution for create appointment and edit time/location of appointment, checking the progress of the task, as well as exiting the program","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"For `AppointmentCommand`, `AppointmentTimeCommand`, `ByeCommand`, `LocationCommand`, and `TaskProgressCommand`, they are all extends `Command` class. Please refer to below image for implementation details.","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"\u003cimg src\u003d\"images/CommandClassDiagram.png\" alt\u003d\"command-class-diagram\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"`Command` class is an abstract class which serves as a based class contains some command methods like `parseDateTime` and `checkTaskNumberOutOfRange` for all subclass to use. It also has an abstract method `execute` which enforce each subclass to override the implementation to handle different user input. This follows the `Single Responsibility Principle` and `The Open Closed principle` to keep our code dry reduce the chances to modify the existing codebase thus reduce the regression error.","lastModifiedDate":"2021-11-13"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"chenghuiyuan"},"content":"### Delete feature","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"It extends `Command` class. It checks if the number input by user is out of range. If yes, error thrown. If no, the task will be deleted from the `TaskList`. `Ui` will print the response.","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"chenghuiyuan"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/54061328/141602529-1b8bafe0-c4d5-4b3a-a37f-3cc05a76fe53.png\" width\u003d\"500\"\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"#### View feature","lastModifiedDate":"2021-11-13"},{"lineNumber":71,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":72,"author":{"gitId":"chenghuiyuan"},"content":"It extends `Command` class. If user input `-a` together with the command, `Ui` will print all the tasks in the `TaskList` together with the done status. If no, `Ui` will print all the **pending** tasks in the `TaskList` together with the done status.","lastModifiedDate":"2021-11-13"},{"lineNumber":73,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"chenghuiyuan"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/54061328/141602241-1b488747-bb15-4765-a166-92329cbb757e.png\" width\u003d\"500\"\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":75,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":76,"author":{"gitId":"yaololo"},"content":"#### Mark as done feature","lastModifiedDate":"2021-11-13"},{"lineNumber":77,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":78,"author":{"gitId":"chenghuiyuan"},"content":"It extends `Command` class. It checks if the number input by user is out of range. If yes, error thrown. If no, change the status of the task to done [X].","lastModifiedDate":"2021-11-13"},{"lineNumber":79,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":80,"author":{"gitId":"chenghuiyuan"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/54061328/141602402-9c7d0e5f-db45-499c-b1d3-387546ff3179.png\" width\u003d\"500\"\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":81,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":82,"author":{"gitId":"e0262191"},"content":"#### Homework feature","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"e0262191"},"content":"It extends `Command` class. It adds assignments to tasks list and assign marks/due dates/difficulty level and progress. It also allows changing of progress status and due dates.","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":85,"author":{"gitId":"e0262191"},"content":"\u003cimg src\u003d\"images/HomeworkDiagram.png\" alt\u003d\"Homework-diagram\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":86,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":87,"author":{"gitId":"thisisdax"},"content":"### Category","lastModifiedDate":"2021-11-13"},{"lineNumber":88,"author":{"gitId":"thisisdax"},"content":"\u003cimg src\u003d\"images/CategoryClass.png\" alt\u003d\"category-class-uml\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":89,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":90,"author":{"gitId":"thisisdax"},"content":"### Category Commands","lastModifiedDate":"2021-11-13"},{"lineNumber":91,"author":{"gitId":"thisisdax"},"content":"\u003cimg src\u003d\"images/CategoryCommands.png\" alt\u003d\"category-commands-uml\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":92,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":93,"author":{"gitId":"thisisdax"},"content":"#### AddCategory Command","lastModifiedDate":"2021-11-13"},{"lineNumber":94,"author":{"gitId":"thisisdax"},"content":"AddCategory extends `Command` class. It adds a new category to the Category list.","lastModifiedDate":"2021-11-13"},{"lineNumber":95,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":96,"author":{"gitId":"thisisdax"},"content":"#### DeleteCategory Command","lastModifiedDate":"2021-11-13"},{"lineNumber":97,"author":{"gitId":"thisisdax"},"content":"DeleteCategory extends `Command` class. It removes an existing category in the Category list based on the given category number. If an existing category is tagged to a task, an error will throw to prevent deleting of category.","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":99,"author":{"gitId":"thisisdax"},"content":"#### TagCategory Command","lastModifiedDate":"2021-11-13"},{"lineNumber":100,"author":{"gitId":"thisisdax"},"content":"TagCategory extends `Command` class. It tags an existing category to a task by the provided category number. If the given category number does not exist and error will throw.","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"thisisdax"},"content":"#### ViewCategory Command","lastModifiedDate":"2021-11-13"},{"lineNumber":103,"author":{"gitId":"thisisdax"},"content":"ViewCategory extends `Command` class. `Ui` will print all the tasks in `Category`.","lastModifiedDate":"2021-11-13"},{"lineNumber":104,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"### Search Command","lastModifiedDate":"2021-11-13"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"Search Command extends `Command` class. It filters and prints the task list based on user\u0027s input. ","lastModifiedDate":"2021-11-13"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"\u003cimg src\u003d\"images/SearchCommandSequenceDiagram.png\" alt\u003d\"search-command-uml\"/\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"thisisdax"},"content":"Daffy is a task tracker specifically built for computing students that are comfortable with the CLI. Working on improving and adding features to the existing Duke project and making it useful for students to manage their schedule and work. Natural language will be implemented to avoid exceptions due to typing errors. ","lastModifiedDate":"2021-11-13"},{"lineNumber":111,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"thisisdax"},"content":"John - 35","lastModifiedDate":"2021-11-13"},{"lineNumber":114,"author":{"gitId":"thisisdax"},"content":"Male","lastModifiedDate":"2021-11-13"},{"lineNumber":115,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":116,"author":{"gitId":"thisisdax"},"content":"Part time student - working adult. Often coming to class late due to work commitment, he would like to be able to track school related tasks that are separated from other commitments outside of school. He finds it difficult to track his work deliverables and his school deliverables separately. So he would like to have a place to write down all the required things that he needs to attend to, so that he can focus on school and work separately. This is to improve his focus in school related submission work.","lastModifiedDate":"2021-11-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"thisisdax"},"content":"As a working IT professional, he has a personal laptop with him all the time. And he prefers to use the CLI to track his task as that is what he interacts with the most throughout his day.","lastModifiedDate":"2021-11-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":120,"author":{"gitId":"thisisdax"},"content":"### User Flow","lastModifiedDate":"2021-11-13"},{"lineNumber":121,"author":{"gitId":"thisisdax"},"content":"He powered up his laptop, and opened the software using Intellij. John sees a todo list, a list of unfinished tasks will be presented to him with the due date of each individual task. He started working on the task, upon finishing the tasks, he keyed in “done {{taskNumber}}” and that task is marked as done in the system. He keyed in “list todos” and saw the task he finished was marked as done.","lastModifiedDate":"2021-11-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"thisisdax"},"content":"Daffy is CLI software that helps individuals track the tasks that were keyed in by individual users. It allows users to add tasks, set due dates to a task, update tasks, and mark tasks as done. It also can list the tasks and let the user know how many tasks that user has finished and how many unfinished tasks, as well as the overdue tasks. ","lastModifiedDate":"2021-11-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                              | So that I can ...                     |","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"yaololo"},"content":"| ------- | -------- | ---------------------------------------------------------- | ------------------------------------- |","lastModifiedDate":"2021-11-13"},{"lineNumber":131,"author":{"gitId":"thisisdax"},"content":"| v1.0    | user     | be able to add a task                                      | keep track which task is not done yet |","lastModifiedDate":"2021-11-13"},{"lineNumber":132,"author":{"gitId":"chenghuiyuan"},"content":"| v1.0    | user     | be able to delete a task if that task is not valid anymore | the task list is not cluttered        |","lastModifiedDate":"2021-11-13"},{"lineNumber":133,"author":{"gitId":"chenghuiyuan"},"content":"| v1.0    | user     | see the responses from Daffy after I enter commands        | know the commands are executed        |","lastModifiedDate":"2021-11-13"},{"lineNumber":134,"author":{"gitId":"chenghuiyuan"},"content":"| v1.0    | user     | be able to see all tasks                                   | plan my time                          |","lastModifiedDate":"2021-11-13"},{"lineNumber":135,"author":{"gitId":"chenghuiyuan"},"content":"| v2.0    | user     | be able to see unfinished tasks only                       | be more focus on the unfinished tasks |","lastModifiedDate":"2021-11-13"},{"lineNumber":136,"author":{"gitId":"chenghuiyuan"},"content":"| v2.0    | user     | mark tasks as done                                         | track the progress                    |","lastModifiedDate":"2021-11-13"},{"lineNumber":137,"author":{"gitId":"thisisdax"},"content":"| v2.0    | user     | be able to have different task types                       | search them easily                    |","lastModifiedDate":"2021-11-13"},{"lineNumber":138,"author":{"gitId":"thisisdax"},"content":"| v2.0    | user     | be able to add category type                               | tag categories to a task              |","lastModifiedDate":"2021-11-13"},{"lineNumber":139,"author":{"gitId":"thisisdax"},"content":"| v2.0    | user     | be able to remove category type                            | the category list is not cluttered    |","lastModifiedDate":"2021-11-13"},{"lineNumber":140,"author":{"gitId":"thisisdax"},"content":"| v2.0    | user     | be able to view all category list                          | view which category are available     |","lastModifiedDate":"2021-11-13"},{"lineNumber":141,"author":{"gitId":"spencernah"},"content":"| v2.0    | user     | be able to misspell my commands                            | still input my commands even with typo|","lastModifiedDate":"2021-11-13"},{"lineNumber":142,"author":{"gitId":"thisisdax"},"content":"| v3.0    | user     | assign category to task                                    | find related task to a category       |","lastModifiedDate":"2021-11-13"},{"lineNumber":143,"author":{"gitId":"e0262191"},"content":"| v3.0    | user     | be able to rank upcoming assignment in difficulty level    | choose which task to work on first    |","lastModifiedDate":"2021-11-13"},{"lineNumber":144,"author":{"gitId":"e0262191"},"content":"| v3.0    | user     | be able to see how much assignment marks                   | choose which task to work on first    |","lastModifiedDate":"2021-11-13"},{"lineNumber":145,"author":{"gitId":"e0262191"},"content":"| v3.0    | user     | be able to track assignment due date and edit when needed  | complete assignment on time           |","lastModifiedDate":"2021-11-13"},{"lineNumber":146,"author":{"gitId":"e0262191"},"content":"| v3.0    | user     | be able to mark my progress of my assignments              | decide on which assignment needs to get started |","lastModifiedDate":"2021-11-13"},{"lineNumber":147,"author":{"gitId":"spencernah"},"content":"| v3.0    | user     | be able to view task list by task type                     | focus on specific task type when the list is too long |","lastModifiedDate":"2021-11-13"},{"lineNumber":148,"author":{"gitId":"spencernah"},"content":"| v3.0    | user     | be able to view tasks with certain category tag            | focus on specific category tag when the list is too long |","lastModifiedDate":"2021-11-13"},{"lineNumber":149,"author":{"gitId":"spencernah"},"content":"| v3.0    | user     | be able to view tasks with certain date                    | focus on upcoming appointments when the list is too long |","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"spencernah"},"content":"| v3.0    | user     | be able to view tasks that contains certain keywords       | filter my task list when it is too long|","lastModifiedDate":"2021-11-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"spencernah"},"content":"Usability - System should be able to autocorrect some of the low-level typos in user\u0027s command inputs.  ","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"yaololo"},"content":"- _glossary item_ - Definition","lastModifiedDate":"2021-11-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"thisisdax"},"content":"1. Download the jar file from Release v3.0","lastModifiedDate":"2021-11-13"},{"lineNumber":163,"author":{"gitId":"thisisdax"},"content":"2. Run the application on your preferred terminal - `java -jar tp.jar`","lastModifiedDate":"2021-11-13"},{"lineNumber":164,"author":{"gitId":"thisisdax"},"content":"3. To add a task, enter `todo clean my fish tank`","lastModifiedDate":"2021-11-13"},{"lineNumber":165,"author":{"gitId":"thisisdax"},"content":"4. To view your task, enter `view`","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"e0262191":9,"thisisdax":38,"chenghuiyuan":18,"yaololo":62,"spencernah":9,"-":29}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"Daffy is a task tracker specifically built for computing students that are comfortable with the CLI.","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"Working on improving and adding features to the existing Duke project and making it useful for students to manage their schedule and work.","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"Natural language will be implemented to avoid exceptions due to typing errors.","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"thisisdax":3,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"Daffy is a task tracker specifically built for computing students that are comfortable with the CLI.","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"Working on improving and adding features to the existing Duke project and making it useful for students to manage their schedule and work.","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"Natural language will be implemented to avoid exceptions due to typing errors.","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"1. Down the latest version of `Daffy` from [here](https://github.com/AY2122S1-TIC4001-F18-6/tp/releases/tag/v3.0b).","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"- The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"- The `TODO_NAME` cannot contain punctuation.","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"### Appointment","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"#### Adding an appointment: `appointment`","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"Adds a new item to the list of todo items, the task is type of Appointment task which has additional `at` and `location`","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"fields.","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"Format: `appointment {description} /at {date time} /l {location}`","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"`appointment see doctor /at 2021-10-21 1:30:00 pm /l Changi`","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"`appointment see doctor /at next-tues 1:30:00 pm /l Changi`","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"#### Setting an appointment time: `set_time`","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"Update existing appointment time","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"Format: `set_time {task number} {date time}`","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"`set_time 2 2021-10-21 1:30:00 pm`","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"`set_time 2 next-tues 1:30:00 pm`","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"NOTE: This is list of possible format the `data time` field can accept (case-insensitive):","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"- \"22-09-2018 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"- \"TODAY 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"- \"YESTERDAY 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"- \"TOMORROW 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"- \"THIS-MON 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"yaololo"},"content":"- \"THIS-TUE 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"yaololo"},"content":"- \"THIS-WED 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"- \"THIS-THU 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"- \"THIS-FRI 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":71,"author":{"gitId":"yaololo"},"content":"- \"THIS-SAT 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":72,"author":{"gitId":"yaololo"},"content":"- \"THIS-SUN 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":73,"author":{"gitId":"yaololo"},"content":"- \"NEXT-MON 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"yaololo"},"content":"- \"NEXT-TUE 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":75,"author":{"gitId":"yaololo"},"content":"- \"NEXT-WED 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":76,"author":{"gitId":"yaololo"},"content":"- \"NEXT-THU 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":77,"author":{"gitId":"yaololo"},"content":"- \"NEXT-FRI 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":78,"author":{"gitId":"yaololo"},"content":"- \"NEXT-SAT 1:23:43 pm\"","lastModifiedDate":"2021-11-13"},{"lineNumber":79,"author":{"gitId":"yaololo"},"content":"- \"NEXT-SUN 1:23:43 pm\";","lastModifiedDate":"2021-11-13"},{"lineNumber":80,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":81,"author":{"gitId":"yaololo"},"content":"#### Setting an appointment location: `set_location`","lastModifiedDate":"2021-11-13"},{"lineNumber":82,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"yaololo"},"content":"Update existing appointment location","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":85,"author":{"gitId":"yaololo"},"content":"Format: `set_location {task number} {location}`","lastModifiedDate":"2021-11-13"},{"lineNumber":86,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":87,"author":{"gitId":"yaololo"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":88,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"`set_location 2 Bedok`","lastModifiedDate":"2021-11-13"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":91,"author":{"gitId":"yaololo"},"content":"### TaskProgress: `progress`","lastModifiedDate":"2021-11-13"},{"lineNumber":92,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":93,"author":{"gitId":"yaololo"},"content":"Check existing tasks progress, how many tasks have been completed.","lastModifiedDate":"2021-11-13"},{"lineNumber":94,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":95,"author":{"gitId":"yaololo"},"content":"Format: `progress`","lastModifiedDate":"2021-11-13"},{"lineNumber":96,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":97,"author":{"gitId":"yaololo"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":99,"author":{"gitId":"yaololo"},"content":"`progress`","lastModifiedDate":"2021-11-13"},{"lineNumber":100,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"e0262191"},"content":"### Assignment: `homework`","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":103,"author":{"gitId":"e0262191"},"content":"Add homework","lastModifiedDate":"2021-11-13"},{"lineNumber":104,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":105,"author":{"gitId":"e0262191"},"content":"Format: `Homework maths /due_on {time} /l {marks} /D {diffuiculty level} /P {progression level}`","lastModifiedDate":"2021-11-13"},{"lineNumber":106,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":107,"author":{"gitId":"e0262191"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":108,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":109,"author":{"gitId":"e0262191"},"content":"`Homework maths /due_on 22-09-2018 1:23:43 pm /l 100 /D 5 /P 5`","lastModifiedDate":"2021-11-13"},{"lineNumber":110,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":111,"author":{"gitId":"e0262191"},"content":"### Assignment: `timeframe`","lastModifiedDate":"2021-11-13"},{"lineNumber":112,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":113,"author":{"gitId":"e0262191"},"content":"Add homework","lastModifiedDate":"2021-11-13"},{"lineNumber":114,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":115,"author":{"gitId":"e0262191"},"content":"Format: `timeframe {task number} {time}`","lastModifiedDate":"2021-11-13"},{"lineNumber":116,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":117,"author":{"gitId":"e0262191"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":118,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":119,"author":{"gitId":"e0262191"},"content":"`timeframe 1 22-09-2018 1:23:42 pm`","lastModifiedDate":"2021-11-13"},{"lineNumber":120,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":121,"author":{"gitId":"e0262191"},"content":"### Assignment: `change`","lastModifiedDate":"2021-11-13"},{"lineNumber":122,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":123,"author":{"gitId":"e0262191"},"content":"Add homework","lastModifiedDate":"2021-11-13"},{"lineNumber":124,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":125,"author":{"gitId":"e0262191"},"content":"Format: `change {task number} {progression level}`","lastModifiedDate":"2021-11-13"},{"lineNumber":126,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":127,"author":{"gitId":"e0262191"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":128,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":129,"author":{"gitId":"e0262191"},"content":"`change 1 5`","lastModifiedDate":"2021-11-13"},{"lineNumber":130,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":131,"author":{"gitId":"yaololo"},"content":"### Bye: `bye`","lastModifiedDate":"2021-11-13"},{"lineNumber":132,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":133,"author":{"gitId":"yaololo"},"content":"To exit the program","lastModifiedDate":"2021-11-13"},{"lineNumber":134,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":135,"author":{"gitId":"yaololo"},"content":"Format: `bye`","lastModifiedDate":"2021-11-13"},{"lineNumber":136,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":137,"author":{"gitId":"yaololo"},"content":"### Search Tasks by Date: `search`","lastModifiedDate":"2021-11-13"},{"lineNumber":138,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":139,"author":{"gitId":"yaololo"},"content":"Search tasks that have the same date as the given user input.","lastModifiedDate":"2021-11-13"},{"lineNumber":140,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":141,"author":{"gitId":"yaololo"},"content":"Format: `search --date {date format}`","lastModifiedDate":"2021-11-13"},{"lineNumber":142,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":143,"author":{"gitId":"yaololo"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":144,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":145,"author":{"gitId":"yaololo"},"content":"`search --date 22-09-2018`","lastModifiedDate":"2021-11-13"},{"lineNumber":146,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":147,"author":{"gitId":"yaololo"},"content":"`search --date this-mon`","lastModifiedDate":"2021-11-13"},{"lineNumber":148,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":149,"author":{"gitId":"yaololo"},"content":"NOTE: the date format is same as the setting Appointment date format.","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":151,"author":{"gitId":"thisisdax"},"content":"### Categories","lastModifiedDate":"2021-11-13"},{"lineNumber":152,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":153,"author":{"gitId":"thisisdax"},"content":"#### Add Categories: `categories add`","lastModifiedDate":"2021-11-13"},{"lineNumber":154,"author":{"gitId":"thisisdax"},"content":"Adds a new item to the list of categories.","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":156,"author":{"gitId":"thisisdax"},"content":"Format: `categories add {CATEGORY_NAME}`","lastModifiedDate":"2021-11-13"},{"lineNumber":157,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":158,"author":{"gitId":"thisisdax"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":159,"author":{"gitId":"thisisdax"},"content":"`categories add fishes`","lastModifiedDate":"2021-11-13"},{"lineNumber":160,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":161,"author":{"gitId":"thisisdax"},"content":"#### Remove Categories: `categories delete`","lastModifiedDate":"2021-11-13"},{"lineNumber":162,"author":{"gitId":"thisisdax"},"content":"Removes an existing item in the current list of categories.","lastModifiedDate":"2021-11-13"},{"lineNumber":163,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":164,"author":{"gitId":"thisisdax"},"content":"Format: `categories delete {CATEGORY_NUMBER}`","lastModifiedDate":"2021-11-13"},{"lineNumber":165,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":166,"author":{"gitId":"thisisdax"},"content":"* The `CATEGORY_NUMBER` must be an integer within the category list and it cannot be 0.","lastModifiedDate":"2021-11-13"},{"lineNumber":167,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":168,"author":{"gitId":"thisisdax"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":169,"author":{"gitId":"thisisdax"},"content":"`categories delete 1`","lastModifiedDate":"2021-11-13"},{"lineNumber":170,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":171,"author":{"gitId":"thisisdax"},"content":"#### View Categories: `categories view`","lastModifiedDate":"2021-11-13"},{"lineNumber":172,"author":{"gitId":"thisisdax"},"content":"Prints the current list of existing categories.","lastModifiedDate":"2021-11-13"},{"lineNumber":173,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":174,"author":{"gitId":"thisisdax"},"content":"Format: `categories view`","lastModifiedDate":"2021-11-13"},{"lineNumber":175,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":176,"author":{"gitId":"thisisdax"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":177,"author":{"gitId":"thisisdax"},"content":"`categories view`","lastModifiedDate":"2021-11-13"},{"lineNumber":178,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":179,"author":{"gitId":"thisisdax"},"content":"#### Tag Categories: `categories tag`","lastModifiedDate":"2021-11-13"},{"lineNumber":180,"author":{"gitId":"thisisdax"},"content":"Tag an existing category to a task.","lastModifiedDate":"2021-11-13"},{"lineNumber":181,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":182,"author":{"gitId":"thisisdax"},"content":"Format: `categories tag {TASK_NUMBER} {CATEGORY_NAME}`","lastModifiedDate":"2021-11-13"},{"lineNumber":183,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":184,"author":{"gitId":"thisisdax"},"content":"* The `TASK_NUMBER` must be an integer within the category list and it cannot be 0.","lastModifiedDate":"2021-11-13"},{"lineNumber":185,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":186,"author":{"gitId":"thisisdax"},"content":"Example of usage:","lastModifiedDate":"2021-11-13"},{"lineNumber":187,"author":{"gitId":"thisisdax"},"content":"`categories tag 1 fishes`","lastModifiedDate":"2021-11-13"},{"lineNumber":188,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":189,"author":{"gitId":"spencernah"},"content":"### Search","lastModifiedDate":"2021-11-13"},{"lineNumber":190,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":191,"author":{"gitId":"spencernah"},"content":"#### Search Tasks by Category Tag: search","lastModifiedDate":"2021-11-13"},{"lineNumber":192,"author":{"gitId":"spencernah"},"content":"Filters and prints a task list that contains a specific `category tag`","lastModifiedDate":"2021-11-13"},{"lineNumber":193,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":194,"author":{"gitId":"spencernah"},"content":"Format: `search {CATEGORY_TAG}`","lastModifiedDate":"2021-11-13"},{"lineNumber":195,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":196,"author":{"gitId":"spencernah"},"content":"Example of usage: `search NUS Year 4 Sem 1`","lastModifiedDate":"2021-11-13"},{"lineNumber":197,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":198,"author":{"gitId":"spencernah"},"content":"#### Search Tasks by Task Type: `search`","lastModifiedDate":"2021-11-13"},{"lineNumber":199,"author":{"gitId":"spencernah"},"content":"Filters and prints a task list that contains a specific task type (i.e. appointment or todo)","lastModifiedDate":"2021-11-13"},{"lineNumber":200,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":201,"author":{"gitId":"spencernah"},"content":"Format: `search appointment` or `search todo`","lastModifiedDate":"2021-11-13"},{"lineNumber":202,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":203,"author":{"gitId":"spencernah"},"content":"#### Search Tasks by Date: `search`","lastModifiedDate":"2021-11-13"},{"lineNumber":204,"author":{"gitId":"spencernah"},"content":"Filters and prints a task list of appointments with specified date","lastModifiedDate":"2021-11-13"},{"lineNumber":205,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":206,"author":{"gitId":"spencernah"},"content":"Format: `search {date}`","lastModifiedDate":"2021-11-13"},{"lineNumber":207,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":208,"author":{"gitId":"spencernah"},"content":"* Date format has to be \"dd-MM-yyyy\"","lastModifiedDate":"2021-11-13"},{"lineNumber":209,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":210,"author":{"gitId":"spencernah"},"content":"Example of usage: `search 13-11-2021`","lastModifiedDate":"2021-11-13"},{"lineNumber":211,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":212,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":213,"author":{"gitId":"spencernah"},"content":"#### Search Tasks by Description: `search`","lastModifiedDate":"2021-11-13"},{"lineNumber":214,"author":{"gitId":"spencernah"},"content":"Filters and prints a task list that contains the specified keywords","lastModifiedDate":"2021-11-13"},{"lineNumber":215,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":216,"author":{"gitId":"spencernah"},"content":"Format: `search {keyword(s)}`","lastModifiedDate":"2021-11-13"},{"lineNumber":217,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":218,"author":{"gitId":"spencernah"},"content":"* Order of `{keyword(s)}` matters","lastModifiedDate":"2021-11-13"},{"lineNumber":219,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":220,"author":{"gitId":"spencernah"},"content":"Example of usage: `search exams 2021`","lastModifiedDate":"2021-11-13"},{"lineNumber":221,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":222,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":223,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":224,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":225,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"yaololo"},"content":"- Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2021-11-13"},{"lineNumber":237,"author":{"gitId":"yaololo"},"content":"- Add Appointment `appointment`","lastModifiedDate":"2021-11-13"},{"lineNumber":238,"author":{"gitId":"yaololo"},"content":"- Set Appointment date time `set_time`","lastModifiedDate":"2021-11-13"},{"lineNumber":239,"author":{"gitId":"yaololo"},"content":"- Set Appointment location `set_location`","lastModifiedDate":"2021-11-13"},{"lineNumber":240,"author":{"gitId":"yaololo"},"content":"- Check task progress `progress`","lastModifiedDate":"2021-11-13"},{"lineNumber":241,"author":{"gitId":"yaololo"},"content":"- Search for tasks by date `search --date`","lastModifiedDate":"2021-11-13"},{"lineNumber":242,"author":{"gitId":"thisisdax"},"content":"- Add category `categories add {CATEGORY_NAME}`","lastModifiedDate":"2021-11-13"},{"lineNumber":243,"author":{"gitId":"thisisdax"},"content":"- Delete category `categories delete {CATEGORY_NUMBER}`","lastModifiedDate":"2021-11-13"},{"lineNumber":244,"author":{"gitId":"thisisdax"},"content":"- View category `categories view`","lastModifiedDate":"2021-11-13"},{"lineNumber":245,"author":{"gitId":"thisisdax"},"content":"- Tag category `categories tag {TASK_NUMBER} {CATEGORY_NAME}`","lastModifiedDate":"2021-11-13"},{"lineNumber":246,"author":{"gitId":"spencernah"},"content":"- Search Tasks by Category Tag `search {CATEGORY_TAG}`","lastModifiedDate":"2021-11-13"},{"lineNumber":247,"author":{"gitId":"spencernah"},"content":"- Search Tasks by Task Type `search appointment` or `search todo`","lastModifiedDate":"2021-11-13"},{"lineNumber":248,"author":{"gitId":"spencernah"},"content":"- Search Tasks by Date `search {date}` where date format is \"dd-MM-yyyy\"","lastModifiedDate":"2021-11-13"},{"lineNumber":249,"author":{"gitId":"spencernah"},"content":"- Search Tasks by Description `search {keyword(s)`","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"e0262191":30,"thisisdax":47,"yaololo":96,"spencernah":41,"-":35}},{"path":"docs/team/chenghuiyuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"# Cheng Hui Yuan - Project Portfolio Page","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"## Overview","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"Daffy is an extension of Duke project. ","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"#### Code contributed:","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":"https://nus-tic4001-ay2122s1.github.io/tp-dashboard/?search\u003dchenghuiyuan\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":"#### Enhancements implemented: ","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":"- View command: To view pending tasks","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":"- View all command: To view all tasks (pending and completed) ","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"- Delete command: To delete a task","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"chenghuiyuan"},"content":"- Mark as done command: To mark a task as done","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"#### Review/mentoring contributions: ","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"chenghuiyuan"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/1/files/8c344715a06d38bd97d4598d7bd5142c4f3b2358","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/3/files/9e1e42b548d7532b5896be81acc8dae106f8aed5","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/6/files/6639f4c148db7acc64be91cf21e6c1f23369edef","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/9/files/bb47427d103e1fe9afbaaa6267a9330a90ecbace","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/16/files/a2f69888fb841c0b7f717806d46b5cd7e6400266","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/17#partial-pull-merging","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"chenghuiyuan":22}},{"path":"docs/team/e0262191.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0262191"},"content":"# Broderick - Project Portfolio Page","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"e0262191"},"content":"## Overview","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"e0262191"},"content":" Daffy is a task tracker specifically built for computing students that are comfortable with the CLI. The aim is to improve and add features to the existing Duke project and make it useful for students to manage their schedule and work.","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"e0262191"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"e0262191"},"content":"#### Code contributed:","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"e0262191"},"content":"https://nus-tic4001-ay2122s1.github.io/tp-dashboard/?search\u003de0262191\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"e0262191"},"content":"#### New Feature: ","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"e0262191"},"content":"Added the ability to create Assignments/Homework","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"e0262191"},"content":"What it does: allows the user to create assignments. The user also can assign marks/due dates/difficulty level and progress. The user is also able to change progress status and due dates whenever it is needed. ","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"e0262191"},"content":"Justification: This allows users to keep track of the assignments given to them. ","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"e0262191"},"content":"Highlights: This enhancement had to be done with the person assigned to doing “task”. Hence was quite challenging.","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"e0262191"},"content":"#### Enhancements to existing features: ","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"e0262191"},"content":"Updated the assignment with all its features in (Pull requests #5,#11,#18)","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"e0262191"},"content":"#### Documentation: ","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"e0262191"},"content":"User Guide: Added documentation for the features Homework where we can add marks/due dates/Difficulty level and progress","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"e0262191"},"content":"Developer Guide: Added implementation details of the Homework feature where we can add marks/due dates/Difficulty level and progress","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"e0262191"},"content":"#### Community:","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"e0262191"},"content":"Provided 10 user stories for user guide","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"e0262191"},"content":"Participated in all group meetings ","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"e0262191":30}},{"path":"docs/team/spencernah.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"# Spencer Nah - Project Portfolio Page","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"## Overview","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"Daffy is an extension and improvement of Duke. This app enables users to keep track of their schedule.","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"### Code contributed:","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"https://nus-tic4001-ay2122s1.github.io/tp-dashboard/?search\u003dspencer\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"### Enhancements implemented:","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"- AutoCorrect: Increases Usability of Daffy. Daffy understands user\u0027s commands even if it is misspelled (including additional chars, incorrect sequence of chars, missing chars)","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"- Search: Single command search (`search`) that filters and returns a focused task list. Daffy uses the lookup parameter to distinguish the search type (Category Tag, Description, Date or Task Type)","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"### Contributions to the DG","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"- Implementation \u003e SearchCommand ","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"- Respective user stories","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"- NFR","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"### Contributions to the UG","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"- Search section","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"  - Search Tasks by Category Tag","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"  - Search Tasks by Task Type","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"  - Search Tasks by Date","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"  - Search Tasks by Description","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/13","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/14","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/15","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/27","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/28","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/29","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/30","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/31","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/32","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"spencernah":42}},{"path":"docs/team/thisisdax.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"# Tan Wei Hua - Project Portfolio Page","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"## Overview","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"Daffy is a task tracker specifically built for computing students that are comfortable with the CLI. Working on improving and adding features to the existing Duke project and making it useful for students to manage their schedule and work. Natural language will be implemented to avoid exceptions due to typing errors.","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"#### Code contributed:","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"https://nus-tic4001-ay2122s1.github.io/tp-dashboard/?search\u003dthisisdax\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"#### Enhancements implemented: ","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"- Create Base Task: Created base task class","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"- Added Todo Task: Added a new task type \"Todo\"","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"- Task List: Added Singleton TaskList to store all task ","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"- Added categories command: 4 additional commands `AddCategory`, `DeleteCategory`, `ViewCategory`, `TagCategory`","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"- Add Category command: Allows user to add new categories to the category list","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"- Delete Category command: Allows user to remove existing categories in the category list","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"- View Category command: View all existing categories in the category list","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"- Tag Category command: Tags a task with an existing category","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"### Contributions to the UG","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"- Added Category components class diagram","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"- Added Command components class diagram for `AddCategory`, `DeleteCategory`, `TagCategory` and `ViewCategory`.","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"#### Review/mentoring contributions: ","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/4","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/6","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/8","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/16","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/17","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/18","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/21","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"thisisdax":33}},{"path":"docs/team/yaololo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"# Zhuang Yongming - Project Portfolio Page","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"## Overview","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"Daffy is an extension of Duke project which allows user to keep track his/her todos.","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"### Code contributed:","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"https://nus-tic4001-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyaololo\u0026tabRepo\u003dAY2122S1-TIC4001-F18-6%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"### Enhancements implemented:","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"- Bye command: To exit the program","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"- Appointment Command: to add an Appointment Task","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"- Set Appointment Date/time: To update an existing Appointment task date-time information","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"- Set Appointment Location: To update an existing Appointment task location information","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"- Check task progress: to check how many task has been completed and show the progress in percentage","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"- Search tasks by date: filter out the tasks that has the same date as the user input","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"### Contributions to the DG","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"- Add Architecture part of UG","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"- Add Command components class diagram for `AppointmentCommand`, `AppointmentTimeCommand`, `ByeCommand`, `LocationCommand`, `TaskProgressCommand`, and `Command`","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"### Contributions to the UG","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"- Add features for `Bye command`, `Appointment Command`, `Set Appointment Location`, `Check task progress`, and `Search tasks by date`.","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/3","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/6","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/7","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/10","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/16","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/17","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/19","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"- https://github.com/AY2122S1-TIC4001-F18-6/tp/pull/20","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"yaololo":40}},{"path":"src/main/java/category/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":" * Serve as a store for saving user command.","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"public class Category {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"    private static final ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"    private static Category category \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    public static Category getInstance() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"            category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        return category;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"     * Returns a Singleton for categories.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"    public ArrayList\u003cString\u003e getList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        return list;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"     * Add a category to the list.","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"     * @param category is a String that can be any String value.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"    public void addCategory(String category) {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"        list.add(category);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"     * Deletes a category from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"     * @param num The index of a category that is required to be removed from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"    public void deleteCategory(int num) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"        list.remove(num);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"thisisdax"},"content":"     * Returns the category from the specified index from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"thisisdax"},"content":"     * @param num The index the category.","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"thisisdax"},"content":"     * @return int The category at the specified index.","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"thisisdax"},"content":"    public String getCategory(int num) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"thisisdax"},"content":"        return list.get(num);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"thisisdax"},"content":"     * Returns the size of the current category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"thisisdax"},"content":"     * @return int The size of the current category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"thisisdax"},"content":"    public int size() {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"thisisdax"},"content":"        return list.size();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"     * Checks if the input is an existing category.","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"     * @param input The string to be checked against all existing categories.","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"     * @return true if input is an existing category.","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"    public static boolean isCategory(String input) {","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"            if (list.get(i).toLowerCase().equals(input.toLowerCase())) {","lastModifiedDate":"2021-11-13"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"                return true;","lastModifiedDate":"2021-11-13"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"        return false;","lastModifiedDate":"2021-11-13"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":77,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":63,"spencernah":15}},{"path":"src/main/java/command/AppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Appointment;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"public class AppointmentCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private final Date at;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final String location;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    public AppointmentCommand(String description, String at, String location) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.at \u003d this.parseDateTime(at);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        Appointment addedAppointment \u003d new Appointment(this.taskDescription, this.at, this.location);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        list.addItem(addedAppointment);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        ui.printAddedTask(addedAppointment.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"yaololo":28}},{"path":"src/main/java/command/AppointmentTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import task.Appointment;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"public class AppointmentTimeCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private final Date time;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public AppointmentTimeCommand(String taskNumber, String time) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        this.time \u003d this.parseDateTime(time);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        Task task \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        if (task instanceof Appointment) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            ((Appointment) task).setTime(this.time);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            ui.printUpdatedTask(task.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"            ui.print(ErrorMessage.INVALID_APPOINTMENT_TASK);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yaololo":32}},{"path":"src/main/java/command/AssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0262191"},"content":"package command;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"e0262191"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"e0262191"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"e0262191"},"content":"import task.Assignment;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"e0262191"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"e0262191"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"e0262191"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"e0262191"},"content":"public class AssignmentCommand extends Command {","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"e0262191"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"e0262191"},"content":"    private final Date dueOn;","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"e0262191"},"content":"    private final String marks;","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"e0262191"},"content":"    private final String difficultyLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"e0262191"},"content":"    private final String progressionLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"e0262191"},"content":"    public AssignmentCommand(String description, String at, String marks, String difficultyLevel,","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"e0262191"},"content":"                             String progressionLevel) throws ErrorHandler {","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"e0262191"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"e0262191"},"content":"        this.dueOn \u003d this.parseDateTime(at);","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"e0262191"},"content":"        this.marks \u003d marks;","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"e0262191"},"content":"        this.difficultyLevel \u003d difficultyLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"e0262191"},"content":"        this.progressionLevel \u003d progressionLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"e0262191"},"content":"    @Override","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"e0262191"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"e0262191"},"content":"        Assignment addedAssignment \u003d","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"e0262191"},"content":"            new Assignment(this.taskDescription, this.dueOn, this.marks, this.difficultyLevel, this.progressionLevel);","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"e0262191"},"content":"        list.addItem(addedAssignment);","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"e0262191"},"content":"        ui.printAddedTask(addedAssignment.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"e0262191"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"e0262191":36}},{"path":"src/main/java/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        ui.bye();","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yaololo":13}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import constant.Utils;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import helpers.DateConverter;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"chenghuiyuan"},"content":" * Represents an executable command.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public boolean isExiting() {","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        return this.isExit;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    protected int parseTaskNumberToIndex(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            // for user input it will start from 1, we need to minus 1 for list index.","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"            return Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"    protected void checkTaskNumberOutOfRange(int taskNumber, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d taskList.sizeOfTask()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    protected java.util.Date parseDateTime(String dateTime) throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        String[] dayTime \u003d dateTime.split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"        if (dayTime.length \u003c 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_APPOINTMENT_TIME);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        String time \u003d dayTime[1];","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"        String day \u003d DateConverter.convert(dayTime[0]).trim();","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(Utils.DATE_TIME_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"            return formatter.parse(day + \" \" + time);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_APPOINTMENT_TIME);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws ErrorHandler, ParseException;","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"    protected Date parseDate(String date) throws ErrorHandler {","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"        String day \u003d DateConverter.convert(date).trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(Utils.DATE_FORMAT);","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"            return formatter.parse(day);","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_DATE_FORMAT);","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"chenghuiyuan":4,"yaololo":62,"spencernah":5}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":" * Deletes a task identified using it\u0027s index from the task list.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public DeleteCommand(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        String deletedItem \u003d list.returnTask(this.taskIndex).taskToStringFormat();","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        list.deleteTask(this.taskIndex);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        ui.printDeleteCommand(deletedItem, list.sizeOfTask());","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chenghuiyuan":23,"yaololo":13}},{"path":"src/main/java/command/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"import task.Task;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":" * Marks a task identified using it\u0027s index as done.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"chenghuiyuan"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"    public DoneCommand(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"    ","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"        Task doneTask \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"        doneTask.setStatus(true);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"        ui.printDoneCommand(doneTask.taskToStringFormat());","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"chenghuiyuan":39}},{"path":"src/main/java/command/DueDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0262191"},"content":"package command;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"e0262191"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"e0262191"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"e0262191"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"e0262191"},"content":"import task.Assignment;","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"e0262191"},"content":"import task.Task;","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"e0262191"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"e0262191"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"e0262191"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"e0262191"},"content":"public class DueDateCommand extends Command {","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"e0262191"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"e0262191"},"content":"    private final Date time;","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"e0262191"},"content":"    public DueDateCommand(String taskNumber, String time) throws ErrorHandler {","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"e0262191"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"e0262191"},"content":"        this.time \u003d this.parseDateTime(time);","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"e0262191"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"e0262191"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"e0262191"},"content":"        Task task \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"e0262191"},"content":"        if (task instanceof Assignment) {","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"e0262191"},"content":"            ((Assignment) task).setTime(this.time);","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"e0262191"},"content":"            ui.printUpdatedTask(task.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"e0262191"},"content":"        } else {","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"e0262191"},"content":"            ui.print(ErrorMessage.INVALID_APPOINTMENT_TASK);","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"e0262191"},"content":"        }","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"e0262191"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"e0262191":33}},{"path":"src/main/java/command/LocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import task.Appointment;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"public class LocationCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final String location;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    public LocationCommand(String taskNumber, String location) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        Task task \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        if (task instanceof Appointment) {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            ((Appointment) task).setLocation(this.location);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            ui.printUpdatedTask(task.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"            ui.print(ErrorMessage.INVALID_APPOINTMENT_TASK);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yaololo":31}},{"path":"src/main/java/command/ProgressionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0262191"},"content":"package command;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"e0262191"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"e0262191"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"e0262191"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"e0262191"},"content":"import task.Assignment;","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"e0262191"},"content":"import task.Task;","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"e0262191"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"e0262191"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"e0262191"},"content":"public class ProgressionCommand extends Command {","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"e0262191"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"e0262191"},"content":"    private final String progression;","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"e0262191"},"content":"    public ProgressionCommand(String taskNumber, String progression) throws ErrorHandler {","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"e0262191"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"e0262191"},"content":"        this.progression \u003d progression;","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"e0262191"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"e0262191"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"e0262191"},"content":"        Task task \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"e0262191"},"content":"        if (task instanceof Assignment) {","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"e0262191"},"content":"            ((Assignment) task).setProgressionLevel(this.progression);","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"e0262191"},"content":"            ui.printUpdatedTask(task.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"e0262191"},"content":"        } else {","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"e0262191"},"content":"            ui.print(ErrorMessage.INVALID_ASSIGNMENT_TASK);","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"e0262191"},"content":"        }","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"e0262191"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"e0262191":31}},{"path":"src/main/java/command/SearchByDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.Utils;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import task.Appointment;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"public class SearchByDateCommand extends Command {","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    private final Date dateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    public SearchByDateCommand(String dateTime) throws ErrorHandler {","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        this.dateTime \u003d this.parseDate(dateTime);","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        for (Task task : list.getList()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            if (task instanceof Appointment) {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"                Date currentDate \u003d ((Appointment) task).getDateTime();","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"                if (this.isSameDay(this.dateTime, currentDate)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"                    tasks.add(task.taskToStringFormat());","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"    private boolean isSameDay(Date target, Date current) {","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"        SimpleDateFormat dtf \u003d new SimpleDateFormat(Utils.DATE_FORMAT);","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        String targetDateString \u003d dtf.format(target);","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        String currentDateString \u003d dtf.format(current);","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"        return targetDateString.equals(currentDateString);","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"yaololo":45}},{"path":"src/main/java/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package command;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import helpers.DateConverter;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import task.Task;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import static category.Category.isCategory;","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import static helpers.DateConverter.isValidDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import static helpers.StringUtils.convertArrayToString;","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":" * Search task list based on certain parameters.","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    String searchType \u003d \"nil\";","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    String[] param;","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    public SearchCommand(String input) throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"        param \u003d input.split(\" \");","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        if (param.length \u003e 1) {","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"            if (param[1].toUpperCase().equals(\"APPOINTMENT\") || param[1].toUpperCase().equals(\"TODO\")) {","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"                searchType \u003d \"taskType\";","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"            }  else if (isValidDate(param[1])) {","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"                searchType \u003d \"date\";","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"            }  else if (isCategory(convertArrayToString(param, true))) {","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"                searchType \u003d \"category\";","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ParseException, ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        switch (searchType) {","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        case(\"taskType\"):","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"            ui.printByTaskType(list, param[1].toUpperCase());","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"            break;","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        case(\"date\"):","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"            ui.printByDate(list, DateConverter.convertStringToDate(param[1]));","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"            break;","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        case(\"category\"):","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            ui.printByCategory(list, convertArrayToString(param, true));","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            break;","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        default:","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"            searchByDesc(list, ui, convertArrayToString(param, true));","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"    private void searchByDesc(TaskList list, Ui ui, String input) {","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        boolean hasTask \u003d false;","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.sizeOfTask(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"            Task task \u003d list.returnTask(i);","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"            String desc \u003d task.getDescription();","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"            if (desc.toLowerCase().equals(input) || desc.toLowerCase().contains(input)) {","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"                hasTask \u003d true;","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"                count++;","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"                ui.printTask(task, count);","lastModifiedDate":"2021-11-13"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"        if (!hasTask) {","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"            ui.printNoResults();","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"thisisdax":4,"spencernah":66}},{"path":"src/main/java/command/TaskProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class TaskProgressCommand extends Command {","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        int completedTaskCount \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"        int numberOfTasks \u003d list.sizeOfTask();","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        for (Task task : list.getList()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"            if (task.getStatus()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"                completedTaskCount +\u003d 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        String percentage \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"            numberOfTasks \u003e 0 ? String.format(\"%.2f\", (completedTaskCount * 100.0) / numberOfTasks) + \"%\" : \"0%\";","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        ui.printProgress(completedTaskCount, list.sizeOfTask(), percentage);","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"yaololo":23}},{"path":"src/main/java/command/TodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Todo;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        Todo addedTodo \u003d new Todo(this.taskDescription);","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        list.addItem(addedTodo);","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        ui.printAddedTask(addedTodo.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"yaololo":23}},{"path":"src/main/java/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":" * Lists all tasks in the task list to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":"    private boolean isViewAll;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"chenghuiyuan"},"content":"    public ViewCommand(String[] input) {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"        if (input.length \u003e 1 \u0026\u0026 input[1].equals(\"-a\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"chenghuiyuan"},"content":"            this.isViewAll \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"            this.isViewAll \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"        if (list.sizeOfTask() \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            ui.print(\"The list is empty.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"        } ","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"        if (isViewAll) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"            ui.printTaskList(list);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"            ui.printPendingTaskList(list);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chenghuiyuan":36,"yaololo":4}},{"path":"src/main/java/command/category/AddCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"public class AddCategory extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    private final String categoryName;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public AddCategory(String category) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        if (category.isEmpty() || category.isBlank()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        this.categoryName \u003d category;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        category.addCategory(this.categoryName);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"        ui.printAddedCategory(this.categoryName, category.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":27}},{"path":"src/main/java/command/category/DeleteCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":" * Deletes a category identified using it\u0027s index from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"public class DeleteCategory extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    private final int categoryIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    private String input;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"    public DeleteCategory(String categoryNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"            this.categoryIndex \u003d Integer.parseInt(categoryNumber) - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"        if (this.categoryIndex \u003c 0 || this.categoryIndex \u003e\u003d category.size()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"thisisdax"},"content":"        String tagCategory \u003d category.getCategory(this.categoryIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"thisisdax"},"content":"        for (int i \u003d 0; i \u003c list.sizeOfTask(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"thisisdax"},"content":"            if (list.returnTask(i).getCategory().equals(tagCategory)) {","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"thisisdax"},"content":"                throw new ErrorHandler(ErrorMessage.CATEGORY_STILL_IN_USE);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"thisisdax"},"content":"        category.deleteCategory(this.categoryIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"thisisdax"},"content":"        ui.printDeleteCategory(tagCategory, category.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":53}},{"path":"src/main/java/command/category/TagCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"public class TagCategory extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    private final String categoryName;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    private final int taskNum;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    public TagCategory(String taskNum, String categoryName) throws ErrorHandler {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"        if (categoryName.isEmpty() || categoryName.isBlank()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NAME);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        this.taskNum \u003d this.parseTaskNumberToIndex(taskNum);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        boolean categoryExists \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"        for (String searchCategory : this.category.getList()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"            if (searchCategory.contains(categoryName)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"                categoryExists \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"        if (!categoryExists) {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.CATEGORY_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"        this.checkTaskNumberOutOfRange(this.taskNum, tasks);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"        tasks.tagItem(tasks.returnTask(this.taskNum), this.categoryName);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"        ui.printTaggedCategory(taskNum, this.categoryName, category.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"thisisdax":42}},{"path":"src/main/java/command/category/ViewCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":" * Lists all categories in the category list to the user.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"public class ViewCategory extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"        if (category.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(\"The category list is empty.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"        ui.printCategoryList(category);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":32}},{"path":"src/main/java/constant/CommandKeyWords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"public enum CommandKeyWords {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"    SET_LOCATION(\"SET_LOCATION\"), DELETE(\"DELETE\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"    APPOINTMENT(\"APPOINTMENT\"), SET_TIME(\"SET_TIME\"),","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"    CATEGORY(\"CATEGORY\"), HOMEWORK(\"HOMEWORK\"),","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"    DIFFICULTY_LEVEL(\"DIFFICULTY_LEVEL\"), PROGRESS(\"PROGRESS\"), CHANGE(\"CHANGE\"),","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    TIMEFRAME(\"TIMEFRAME\"), SEARCH(\"SEARCH\"), DONE(\"DONE\"), VIEW(\"VIEW\"), TODO(\"TODO\"),","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    BYE(\"BYE\");","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final String value;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    CommandKeyWords(String value) {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"     * Get serialized string.","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"     * @return string which shows all available command keywords.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"    private static String getSerializedString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        String keywords \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        int numberOfKeys \u003d values().length;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        for (CommandKeyWords v : values()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"            index +\u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            String punctuation \u003d index \u003d\u003d numberOfKeys ? \".\" : \", \";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"            keywords \u003d keywords.concat(v.getValue()).concat(punctuation);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        return keywords;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"     * Command key words.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"     * @param value is an enum string for validating if the given value is valid.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"    public static CommandKeyWords getEnum(String value) throws ErrorHandler {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        for (CommandKeyWords v : values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            if (v.getValue().equalsIgnoreCase(value)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"                return v;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"                CommandKeyWords w \u003d autoCorrect(value, v);","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"                if (w !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"                    return w;","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"        throw new ErrorHandler(ErrorMessage.INVALID_COMMAND + \" Please starts your command with \"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"            + getSerializedString()","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"            + \" (case insensitive)\");","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"     * Correct user\u0027s input Command in case of typo/misspelling.","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"     * @param v command","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"     * @return an existing Command Keyword","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"    private static CommandKeyWords autoCorrect(String input, CommandKeyWords v) {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"        double similarity \u003d 0;","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"        int iter \u003d 0;","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"        double comparison;","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"        boolean isSkip;","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"        String comp \u003d v.getValue();","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c comp.length(); i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"            isSkip \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"            for (int j \u003d iter; j \u003c input.length() \u0026\u0026 !isSkip; j++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"                if (input.charAt(j) \u003d\u003d comp.charAt(i)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"                    similarity++;","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"                    iter++;","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"                    isSkip \u003d true;","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"                comparison \u003d similarity / comp.length();","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"                if (comparison \u003e 0.7) {","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"                    return v;","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"yaololo"},"content":"     * Get value.","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"yaololo"},"content":"     * @return enum value.","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"yaololo"},"content":"    public String getValue() {","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"yaololo"},"content":"        return value;","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"yaololo"},"content":"        return this.getValue();","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"e0262191":1,"thisisdax":5,"yaololo":60,"spencernah":39}},{"path":"src/main/java/constant/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":" * Constants for error messages.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class ErrorMessage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_TASK_NUMBER \u003d \"OOPS!!! I\u0027m sorry, you have provided a invalid task number.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TASK_NUMBER \u003d \"OOPS!!! The task number cannot be empty.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TODO \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_LOCATION_DESCRIPTION \u003d \"OOPS!!! The appointment location cannot be empty.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    public static final String INVALID_CATEGORY_COMMAND \u003d \"OOPS!!! Please specify a valid category command.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    public static final String INVALID_CATEGORY_NUMBER \u003d \"OOPS!!! Please specify a valid category number.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    public static final String EMPTY_CATEGORY_NAME \u003d \"OOPS!!! Please specify a category name.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public static final String EMPTY_CATEGORY_NUMBER \u003d \"OOPS!!! Please specify a category number.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    public static final String CATEGORY_STILL_IN_USE \u003d \"OOPS!!! The category is still being tagged to some task.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    public static final String CATEGORY_DOES_NOT_EXIST \u003d \"OOPS!!! The category you specified does not exist.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    public static final String INVALID_CATEGORY_TAG \u003d \"OOPS!!! Please specify a task number and a category \"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        + \"name. e.g. category tag 1 homework\";","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TIME_DESCRIPTION \u003d \"OOPS!!! The appointment time cannot be empty.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_APPOINTMENT_TIME \u003d \"OOPS!!! The appointment time format is invalid, please \"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        + \"refer to these formats:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        + \"\u002722-09-2018 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        + \"\u0027TODAY 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        + \"\u0027YESTERDAY 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        + \"\u0027TOMORROW 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-MON 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-TUE 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-WED 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-THU 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-FRI 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-SAT 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-SUN 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-MON 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-TUE 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-WED 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-THU 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-FRI 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-SAT 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-SUN 1:23:43 pm\u0027\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_DATE_FORMAT \u003d \"OOPS!!! The date format is invalid, please use \u0027dd-MM-YYYY \";","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_APPOINTMENT_TASK \u003d \"OOPS!!! Set location fail, the task is not of Appointment \"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        + \"type.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_APPOINTMENT_DESCRIPTION \u003d \"OOPS!!! The appointment description cannot be empty.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_APPOINTMENT_TIME \u003d \"OOPS!!! The appointment time is missing, missing \u0027/at\u0027\";","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_SEARCH_CATEGORY \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        \"OOPS!!! The searching category is missing, available categories are: \u0027--date\u0027\";","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_SEARCH_CATEGORY \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"        \"OOPS!!! The searching category is missing, available categories are: \u0027--date\u0027\";","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"    public static final String MISSING_SEARCHING_DESCRIPTION \u003d \"OOPS!!! The searching description is missing\";","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_APPOINTMENT_LOCATION \u003d \"OOPS!!! The appointment location is missing, missing \"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"        + \"\u0027/l\u0027\";","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"    public static final String INVALID_INDEX \u003d \"Error: Index is greater than array size\";","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"e0262191"},"content":"    public static final String EMPTY_ASSIGNMENT_DESCRIPTION \u003d \"OOPS!!! The homework description cannot be empty.\";","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"e0262191"},"content":"    public static final String EMPTY_ASSIGNMENT_MARKS \u003d \"OOPS!!! The homework due date is missing, missing \u0027/due_on\u0027\";","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"e0262191"},"content":"    public static final String EMPTY_ASSIGNMENT_DUE_DATE \u003d \"OOPS!!! The homework marks is missing, missing \u0027/l\u0027\";","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"e0262191"},"content":"    public static final String EMPTY_DIFFICULTY_LEVEL \u003d \"OOPS!!! The difficulty level is empty, missing \u0027/D\u0027\";","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"e0262191"},"content":"    public static final String EMPTY_PROGRESSION_LEVEL \u003d \"OOPS!!! The progression level is empty, missing \u0027/P\u0027\";","lastModifiedDate":"2021-11-12"},{"lineNumber":61,"author":{"gitId":"e0262191"},"content":"    public static final String INVALID_ASSIGNMENT_TASK \u003d","lastModifiedDate":"2021-11-12"},{"lineNumber":62,"author":{"gitId":"e0262191"},"content":"        \"OOPS!!! Set Progression failed, the task is not of Assignment\";","lastModifiedDate":"2021-11-12"},{"lineNumber":63,"author":{"gitId":"e0262191"},"content":"    public static final String EMPTY_SET_PROGRESSION \u003d \"OOPS!!! Progression cannot be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"e0262191":8,"thisisdax":8,"yaololo":47,"spencernah":1}},{"path":"src/main/java/constant/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class Utils {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy hh:mm:ss a\";","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"yaololo":6,"spencernah":1}},{"path":"src/main/java/exception/ErrorHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package exception;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class ErrorHandler extends Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public ErrorHandler(String errorMessage) {","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":7}},{"path":"src/main/java/helpers/DateConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package helpers;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.Utils;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"import static java.time.temporal.TemporalAdjusters.nextOrSame;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"import static java.time.temporal.TemporalAdjusters.previousOrSame;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"public class DateConverter {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public static String convert(String day) {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        switch (day.toUpperCase()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        case \"TODAY\":","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"            LocalDate today \u003d getToday();","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"            return today.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        case \"YESTERDAY\":","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"            LocalDate yesterday \u003d getToday().minusDays(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            return yesterday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        case \"TOMORROW\":","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            LocalDate tomorrow \u003d getToday().plusDays(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            return tomorrow.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        case \"THIS-MON\":","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"            LocalDate monday \u003d getCurrentWeekDay(getToday(), DayOfWeek.MONDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            return monday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        case \"THIS-TUE\":","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            LocalDate tuesday \u003d getCurrentWeekDay(getToday(), DayOfWeek.TUESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"            return tuesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        case \"THIS-WED\":","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"            LocalDate wednesday \u003d getCurrentWeekDay(getToday(), DayOfWeek.WEDNESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"            return wednesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        case \"THIS-THU\":","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            LocalDate thursday \u003d getCurrentWeekDay(getToday(), DayOfWeek.THURSDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"            return thursday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        case \"THIS-FRI\":","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"            LocalDate friday \u003d getCurrentWeekDay(getToday(), DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"            return friday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"        case \"THIS-SAT\":","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"            LocalDate saturday \u003d getCurrentWeekDay(getToday(), DayOfWeek.SATURDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            return saturday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        case \"THIS-SUN\":","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            LocalDate sunday \u003d getCurrentWeekDay(getToday(), DayOfWeek.SUNDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"            return sunday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-MON\":","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"            LocalDate nexMonday \u003d getNextWeekDay(getToday(), DayOfWeek.MONDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"            return nexMonday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-TUE\":","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"            LocalDate nextTuesday \u003d getNextWeekDay(getToday(), DayOfWeek.TUESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"            return nextTuesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-WED\":","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"            LocalDate nextWednesday \u003d getNextWeekDay(getToday(), DayOfWeek.WEDNESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"            return nextWednesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-THU\":","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"            LocalDate nextThursday \u003d getNextWeekDay(getToday(), DayOfWeek.THURSDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"            return nextThursday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-FRI\":","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"            LocalDate nextFriday \u003d getNextWeekDay(getToday(), DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"            return nextFriday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-SAT\":","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"            LocalDate nextSaturday \u003d getNextWeekDay(getToday(), DayOfWeek.SATURDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"            return nextSaturday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-SUN\":","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"yaololo"},"content":"            LocalDate nextSunday \u003d getNextWeekDay(getToday(), DayOfWeek.SUNDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"            return nextSunday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"        default:","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"yaololo"},"content":"            return day;","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"yaololo"},"content":"    private static LocalDate getToday() {","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"yaololo"},"content":"        return LocalDate.now();","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"yaololo"},"content":"    private static LocalDate getCurrentWeekDay(LocalDate today, DayOfWeek targetDate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"yaololo"},"content":"        if (today.getDayOfWeek().compareTo(targetDate) \u003d\u003d 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"yaololo"},"content":"            return today;","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"yaololo"},"content":"        } else if (today.getDayOfWeek().compareTo(targetDate) \u003e 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"yaololo"},"content":"            return today.with(previousOrSame(targetDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"yaololo"},"content":"            return today.with(nextOrSame(targetDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"    private static LocalDate getNextWeekDay(LocalDate today, DayOfWeek targetDate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"        return getCurrentWeekDay(today, targetDate).plusDays(7);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"     * Checks if the string input is a valid date format.","lastModifiedDate":"2021-11-13"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"     * @param inDate Date that user has input as parameter.","lastModifiedDate":"2021-11-13"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"     * @return true boolean if input can be parsed as a date.","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"    public static boolean isValidDate(String inDate) {","lastModifiedDate":"2021-11-13"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"            dateFormat.setLenient(false);","lastModifiedDate":"2021-11-13"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"            dateFormat.parse(inDate.trim());","lastModifiedDate":"2021-11-13"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"            return true;","lastModifiedDate":"2021-11-13"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-11-13"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"            return false;","lastModifiedDate":"2021-11-13"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":110,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":111,"author":{"gitId":"spencernah"},"content":"     * Converts string to date.","lastModifiedDate":"2021-11-13"},{"lineNumber":112,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":113,"author":{"gitId":"spencernah"},"content":"     * @param inDate Date that user has input as parameter.","lastModifiedDate":"2021-11-13"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"     * @return Date in \"dd-MM-yyyy\" format.","lastModifiedDate":"2021-11-13"},{"lineNumber":115,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"    public static Date convertStringToDate(String inDate) throws ParseException {","lastModifiedDate":"2021-11-13"},{"lineNumber":117,"author":{"gitId":"spencernah"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-11-13"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2021-11-13"},{"lineNumber":119,"author":{"gitId":"spencernah"},"content":"        return dateFormat.parse(inDate.trim());","lastModifiedDate":"2021-11-13"},{"lineNumber":120,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":121,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":122,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":123,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":124,"author":{"gitId":"spencernah"},"content":"     * Set time (hour, min, sec and millisec) to 0 .","lastModifiedDate":"2021-11-13"},{"lineNumber":125,"author":{"gitId":"spencernah"},"content":"     * Mainly for comparison of input date and Appointment dates.","lastModifiedDate":"2021-11-13"},{"lineNumber":126,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":127,"author":{"gitId":"spencernah"},"content":"     * @param date Date of an existing Appointment.","lastModifiedDate":"2021-11-13"},{"lineNumber":128,"author":{"gitId":"spencernah"},"content":"     * @return Date with zeroed Time.","lastModifiedDate":"2021-11-13"},{"lineNumber":129,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":130,"author":{"gitId":"spencernah"},"content":"    public static Date removeTime(Date date) {","lastModifiedDate":"2021-11-13"},{"lineNumber":131,"author":{"gitId":"spencernah"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2021-11-13"},{"lineNumber":132,"author":{"gitId":"spencernah"},"content":"        cal.setTime(date);","lastModifiedDate":"2021-11-13"},{"lineNumber":133,"author":{"gitId":"spencernah"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);","lastModifiedDate":"2021-11-13"},{"lineNumber":134,"author":{"gitId":"spencernah"},"content":"        cal.set(Calendar.MINUTE, 0);","lastModifiedDate":"2021-11-13"},{"lineNumber":135,"author":{"gitId":"spencernah"},"content":"        cal.set(Calendar.SECOND, 0);","lastModifiedDate":"2021-11-13"},{"lineNumber":136,"author":{"gitId":"spencernah"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2021-11-13"},{"lineNumber":137,"author":{"gitId":"spencernah"},"content":"        return cal.getTime();","lastModifiedDate":"2021-11-13"},{"lineNumber":138,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":139,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"thisisdax":1,"yaololo":89,"spencernah":49}},{"path":"src/main/java/helpers/StringUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package helpers;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":" * Utility class for manipulating strings.","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"public class StringUtils {","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"     * Converts a String array to a singular String.","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"     * Assumes that the method will be used to construct a sentence","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     * @param input an array of String","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * @return Date with zeroed Time.","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    public static String convertArrayToString(String[] input) throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"        return concatenate(input, 0);","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     * Converts a String array to a singular String.","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     * Assumes that the method will be used to construct a sentence","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param input an array of String","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * @param isIgnoreCommand determines if method should concatenate array from element 0 or 1 where;","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     *                        true -\u003e starts from element 1.","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     *                        false -\u003e starts from element 0.","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * @return a concatenated string of the elements in the array.","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    public static String convertArrayToString(String[] input, boolean isIgnoreCommand) throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        if (isIgnoreCommand) {","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"            return concatenate(input, 1);","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        return concatenate(input, 0);","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"     * Concatenates the elements in a string array and adds a space between each element.","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"     * Assumes that the method will be used to construct a sentence","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"     * @param input an array of String","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"     * @param start index of the first element to be concatenated","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"     * @return a concatenated string of the elements in the array","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    private static String concatenate(String[] input, int start) throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        if (start \u003e input.length) {","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_INDEX);","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d start; i \u003c input.length; i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"            output +\u003d input[i] + \" \";","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"        return output.trim();","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"thisisdax":4,"spencernah":54}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import command.SearchByDateCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.SearchCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import command.category.AddCategory;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import command.category.DeleteCategory;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import command.category.TagCategory;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import command.category.ViewCategory;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"import command.ViewCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"import command.DoneCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"import command.TodoCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"import command.DeleteCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"import command.LocationCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"import command.ByeCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"import command.AppointmentCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"import command.AssignmentCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"import command.TaskProgressCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"import command.AppointmentTimeCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"import command.ProgressionCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"import command.DueDateCommand;","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"import constant.CommandKeyWords;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"public class Parser {","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"    private String content;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    private String taskNo;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    public Command parse(String input) throws ErrorHandler {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        input \u003d input.trim();","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        String[] result \u003d input.split(\" \", 2);","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        CommandKeyWords commandWord \u003d CommandKeyWords.getEnum(result[0].toUpperCase());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"        case VIEW:","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"            return new ViewCommand(result);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"        case DONE:","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"chenghuiyuan"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"chenghuiyuan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"chenghuiyuan"},"content":"            this.taskNo \u003d result[1].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"chenghuiyuan"},"content":"            return new DoneCommand(this.taskNo);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        case TODO:","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TODO);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"            this.content \u003d result[1].trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"            return new TodoCommand(this.content);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"        case DELETE:","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"            this.taskNo \u003d result[1].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"            return new DeleteCommand(this.taskNo);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"thisisdax"},"content":"        case CATEGORY:","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"thisisdax"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"                throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"thisisdax"},"content":"            String[] categoryOption \u003d result[1].split(\" \", 2);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"thisisdax"},"content":"            switch (categoryOption[0].toLowerCase().trim()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"thisisdax"},"content":"            case \"view\":","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"thisisdax"},"content":"                return new ViewCategory();","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"thisisdax"},"content":"            case \"add\":","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"thisisdax"},"content":"                if (categoryOption.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"thisisdax"},"content":"                return new AddCategory(categoryOption[1].trim());","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"thisisdax"},"content":"            case \"delete\":","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"thisisdax"},"content":"                if (categoryOption.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"thisisdax"},"content":"                return new DeleteCategory(categoryOption[1].trim());","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"thisisdax"},"content":"            case \"tag\":","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"thisisdax"},"content":"                if (categoryOption.length \u003c 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"thisisdax"},"content":"                String[] tagOption \u003d categoryOption[1].split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"thisisdax"},"content":"                if (tagOption.length \u003c 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_TAG);","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"thisisdax"},"content":"                return new TagCategory(tagOption[0].trim(), tagOption[1].trim());","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"thisisdax"},"content":"            default:","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"thisisdax"},"content":"                throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"        case APPOINTMENT:","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_APPOINTMENT_DESCRIPTION);","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"yaololo"},"content":"            return this.handleNewAppointment(result[1].trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"yaololo"},"content":"        case SET_LOCATION:","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"yaololo"},"content":"            String[] inputContent \u003d result[1].split(\" \", 2);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"yaololo"},"content":"            if (inputContent.length \u003c 2) {","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_LOCATION_DESCRIPTION);","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yaololo"},"content":"            this.taskNo \u003d inputContent[0];","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yaololo"},"content":"            this.content \u003d inputContent[1];","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"yaololo"},"content":"            return new LocationCommand(this.taskNo, this.content);","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"yaololo"},"content":"        case SET_TIME:","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"yaololo"},"content":"            return this.handleSetTime(result[1]);","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"        case SEARCH:","lastModifiedDate":"2021-11-13"},{"lineNumber":115,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_SEARCH_CATEGORY);","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"            if (result[1].contains(\"--date\")) {","lastModifiedDate":"2021-11-13"},{"lineNumber":119,"author":{"gitId":"yaololo"},"content":"                return this.handleSearch(result[1]);","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"thisisdax"},"content":"            } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":121,"author":{"gitId":"spencernah"},"content":"                return new SearchCommand(input);","lastModifiedDate":"2021-11-13"},{"lineNumber":122,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":123,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":124,"author":{"gitId":"e0262191"},"content":"        case HOMEWORK:","lastModifiedDate":"2021-11-12"},{"lineNumber":125,"author":{"gitId":"e0262191"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":126,"author":{"gitId":"e0262191"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_ASSIGNMENT_DESCRIPTION);","lastModifiedDate":"2021-11-12"},{"lineNumber":127,"author":{"gitId":"e0262191"},"content":"            }","lastModifiedDate":"2021-11-12"},{"lineNumber":128,"author":{"gitId":"e0262191"},"content":"            return this.handleNewAssignment(result[1].trim());","lastModifiedDate":"2021-11-12"},{"lineNumber":129,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":130,"author":{"gitId":"e0262191"},"content":"        case CHANGE:","lastModifiedDate":"2021-11-12"},{"lineNumber":131,"author":{"gitId":"e0262191"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":132,"author":{"gitId":"e0262191"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-11-12"},{"lineNumber":133,"author":{"gitId":"e0262191"},"content":"            }","lastModifiedDate":"2021-11-12"},{"lineNumber":134,"author":{"gitId":"e0262191"},"content":"            String[] inputProgression \u003d result[1].split(\" \", 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":135,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":136,"author":{"gitId":"e0262191"},"content":"            if (inputProgression.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":137,"author":{"gitId":"e0262191"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_SET_PROGRESSION);","lastModifiedDate":"2021-11-12"},{"lineNumber":138,"author":{"gitId":"e0262191"},"content":"            }","lastModifiedDate":"2021-11-12"},{"lineNumber":139,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":140,"author":{"gitId":"e0262191"},"content":"            this.taskNo \u003d inputProgression[0];","lastModifiedDate":"2021-11-12"},{"lineNumber":141,"author":{"gitId":"e0262191"},"content":"            this.content \u003d inputProgression[1];","lastModifiedDate":"2021-11-12"},{"lineNumber":142,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":143,"author":{"gitId":"e0262191"},"content":"            return new ProgressionCommand(this.taskNo, this.content);","lastModifiedDate":"2021-11-12"},{"lineNumber":144,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":145,"author":{"gitId":"e0262191"},"content":"        case TIMEFRAME:","lastModifiedDate":"2021-11-12"},{"lineNumber":146,"author":{"gitId":"e0262191"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":147,"author":{"gitId":"e0262191"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-11-12"},{"lineNumber":148,"author":{"gitId":"e0262191"},"content":"            }","lastModifiedDate":"2021-11-12"},{"lineNumber":149,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":150,"author":{"gitId":"e0262191"},"content":"            return this.handleDeadLine(result[1]);","lastModifiedDate":"2021-11-12"},{"lineNumber":151,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":152,"author":{"gitId":"yaololo"},"content":"        case PROGRESS:","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"yaololo"},"content":"            return new TaskProgressCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"yaololo"},"content":"        case BYE:","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"yaololo"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"yaololo"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"yaololo"},"content":"    private Command handleNewAppointment(String inputContent) throws ErrorHandler {","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"yaololo"},"content":"        String[] appointmentInput \u003d inputContent.split(\"/at\", 2);","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"yaololo"},"content":"        this.content \u003d appointmentInput[0].trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"yaololo"},"content":"        if (appointmentInput.length \u003c 2) {","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_APPOINTMENT_TIME);","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"yaololo"},"content":"        String[] timeContent \u003d appointmentInput[1].split(\"/l\", 2);","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"yaololo"},"content":"        if (timeContent.length \u003c 2) {","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_APPOINTMENT_LOCATION);","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"yaololo"},"content":"        String at \u003d timeContent[0].trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"yaololo"},"content":"        String location \u003d timeContent[1].trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"yaololo"},"content":"        return new AppointmentCommand(this.content, at, location);","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"yaololo"},"content":"    private Command handleSetTime(String input) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"yaololo"},"content":"        String[] inputContent \u003d input.split(\" \", 2);","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"yaololo"},"content":"        if (inputContent.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_TIME_DESCRIPTION);","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"yaololo"},"content":"        this.taskNo \u003d inputContent[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"yaololo"},"content":"        this.content \u003d inputContent[1];","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"yaololo"},"content":"        return new AppointmentTimeCommand(this.taskNo, this.content);","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"yaololo"},"content":"    private Command handleSearch(String input) throws ErrorHandler {","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"yaololo"},"content":"        String[] result \u003d input.split(\" \", 2);","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"yaololo"},"content":"        if (result.length \u003c 2) {","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.MISSING_SEARCHING_DESCRIPTION);","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"yaololo"},"content":"        String searchCategory \u003d result[0].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"yaololo"},"content":"        if (searchCategory.equals(\"--date\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"yaololo"},"content":"            return new SearchByDateCommand(result[1]);","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_SEARCH_CATEGORY);","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"yaololo"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"e0262191"},"content":"    private Command handleDeadLine(String input) throws ErrorHandler {","lastModifiedDate":"2021-11-12"},{"lineNumber":209,"author":{"gitId":"e0262191"},"content":"        String[] inputContent \u003d input.split(\" \", 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":210,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":211,"author":{"gitId":"e0262191"},"content":"        if (inputContent.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":212,"author":{"gitId":"e0262191"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_TIME_DESCRIPTION);","lastModifiedDate":"2021-11-12"},{"lineNumber":213,"author":{"gitId":"e0262191"},"content":"        }","lastModifiedDate":"2021-11-12"},{"lineNumber":214,"author":{"gitId":"e0262191"},"content":"        this.taskNo \u003d inputContent[0];","lastModifiedDate":"2021-11-12"},{"lineNumber":215,"author":{"gitId":"e0262191"},"content":"        this.content \u003d inputContent[1];","lastModifiedDate":"2021-11-12"},{"lineNumber":216,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":217,"author":{"gitId":"e0262191"},"content":"        return new DueDateCommand(this.taskNo, this.content);","lastModifiedDate":"2021-11-12"},{"lineNumber":218,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":219,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":220,"author":{"gitId":"e0262191"},"content":"    private Command handleNewAssignment(String inputContent) throws ErrorHandler {","lastModifiedDate":"2021-11-12"},{"lineNumber":221,"author":{"gitId":"e0262191"},"content":"        String[] assignmentInput \u003d inputContent.split(\"/due_on\", 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":222,"author":{"gitId":"e0262191"},"content":"        this.content \u003d assignmentInput[0].trim();","lastModifiedDate":"2021-11-12"},{"lineNumber":223,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":224,"author":{"gitId":"e0262191"},"content":"        if (assignmentInput.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":225,"author":{"gitId":"e0262191"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_ASSIGNMENT_MARKS);","lastModifiedDate":"2021-11-12"},{"lineNumber":226,"author":{"gitId":"e0262191"},"content":"        }","lastModifiedDate":"2021-11-12"},{"lineNumber":227,"author":{"gitId":"e0262191"},"content":"        String[] timeContent \u003d assignmentInput[1].split(\"/l\", 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":228,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":229,"author":{"gitId":"e0262191"},"content":"        if (timeContent.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":230,"author":{"gitId":"e0262191"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_ASSIGNMENT_DUE_DATE);","lastModifiedDate":"2021-11-12"},{"lineNumber":231,"author":{"gitId":"e0262191"},"content":"        }","lastModifiedDate":"2021-11-12"},{"lineNumber":232,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":233,"author":{"gitId":"e0262191"},"content":"        String[] difficultyContent \u003d timeContent[1].split(\"/D\", 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":234,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":235,"author":{"gitId":"e0262191"},"content":"        if (difficultyContent.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":236,"author":{"gitId":"e0262191"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_DIFFICULTY_LEVEL);","lastModifiedDate":"2021-11-12"},{"lineNumber":237,"author":{"gitId":"e0262191"},"content":"        }","lastModifiedDate":"2021-11-12"},{"lineNumber":238,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":239,"author":{"gitId":"e0262191"},"content":"        String[] progressionContent \u003d difficultyContent[1].split(\"/P\", 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":240,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":241,"author":{"gitId":"e0262191"},"content":"        if (progressionContent.length \u003c 2) {","lastModifiedDate":"2021-11-12"},{"lineNumber":242,"author":{"gitId":"e0262191"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_PROGRESSION_LEVEL);","lastModifiedDate":"2021-11-12"},{"lineNumber":243,"author":{"gitId":"e0262191"},"content":"        }","lastModifiedDate":"2021-11-12"},{"lineNumber":244,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":245,"author":{"gitId":"e0262191"},"content":"        String dueOn \u003d timeContent[0].trim();","lastModifiedDate":"2021-11-12"},{"lineNumber":246,"author":{"gitId":"e0262191"},"content":"        String marks \u003d difficultyContent[0].trim();","lastModifiedDate":"2021-11-12"},{"lineNumber":247,"author":{"gitId":"e0262191"},"content":"        String difficulty \u003d progressionContent[0].trim();","lastModifiedDate":"2021-11-12"},{"lineNumber":248,"author":{"gitId":"e0262191"},"content":"        String progression \u003d progressionContent[1].trim();","lastModifiedDate":"2021-11-12"},{"lineNumber":249,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":250,"author":{"gitId":"e0262191"},"content":"        return new AssignmentCommand(this.content, dueOn, marks, difficulty, progression);","lastModifiedDate":"2021-11-12"},{"lineNumber":251,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":252,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":253,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"e0262191":76,"thisisdax":50,"chenghuiyuan":7,"yaololo":115,"spencernah":5}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import command.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import parser.Parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private final Storage storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    private final Category category;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    public Duke() {","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        this.storage \u003d new Storage(\"file_path\");","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        this.tasklist \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        this.category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        new Duke().run();","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    public void run() {","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        this.ui.welcome();","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            try {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"                String userCommand \u003d in.nextLine().trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"                Command command \u003d new Parser().parse(userCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"                command.execute(this.tasklist, this.ui, this.storage);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"                isExit \u003d command.isExiting();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"                this.ui.print(\"Error: \" + e.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        // exit program","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"thisisdax":4,"yaololo":34,"-":13}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class Storage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    private final Path root \u003d FileSystems.getDefault().getPath(\"\").toAbsolutePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    private String filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        this.filePath \u003d \"/\" + filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"yaololo":14}},{"path":"src/main/java/task/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.Utils;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class Appointment extends Task {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    private final String type;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private Date at;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private String location;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public Appointment(String description, Date at, String location) {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        super(description);","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        type \u003d \"A\";","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public String taskToStringFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(Utils.DATE_TIME_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        return \"[\" + this.getType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            + super.getDescription() + \",\" + \" at \" + formatter.format(this.at) + \". \"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            + \"Location: \" + this.location;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"    public String getType() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        return this.type;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    public String getLocation() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        return this.location;","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    public Date getDate() {","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        return this.at;","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"    public void setLocation(String location) {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"    public Date getDateTime() {","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"        return this.at;","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"    public void setTime(Date time) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        this.at \u003d time;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yaololo":47,"spencernah":4}},{"path":"src/main/java/task/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0262191"},"content":"package task;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"e0262191"},"content":"import constant.Utils;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"e0262191"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"e0262191"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"e0262191"},"content":"public class Assignment extends Task {","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"e0262191"},"content":"    private final String type;","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"e0262191"},"content":"    private Date dueOn;","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"e0262191"},"content":"    private String marks;","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"e0262191"},"content":"    private String difficultyLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"e0262191"},"content":"    private String progressionLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"e0262191"},"content":"    public Assignment(String description, Date dueOn, String marks, String difficultyLevel, String progressionLevel) {","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"e0262191"},"content":"        super(description);","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"e0262191"},"content":"        type \u003d \"100\";","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"e0262191"},"content":"        this.marks \u003d marks;","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"e0262191"},"content":"        this.dueOn \u003d dueOn;","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"e0262191"},"content":"        this.difficultyLevel \u003d difficultyLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"e0262191"},"content":"        this.progressionLevel \u003d progressionLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"e0262191"},"content":"    public String taskToStringFormat() {","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"e0262191"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(Utils.DATE_TIME_FORMAT);","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"e0262191"},"content":"        return \"[\" + this.getType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \"","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"e0262191"},"content":"            + super.getDescription() + \",\" + \" due on \" + formatter.format(this.dueOn) + \". \"","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"e0262191"},"content":"            + \"Marks: \" + this.marks + \". \"","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"e0262191"},"content":"            + \"difficultyLevel: \" + this.difficultyLevel + \". \"","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"e0262191"},"content":"            + \"progressionLevel: \" + this.progressionLevel;","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"e0262191"},"content":"    public String getType() {","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"e0262191"},"content":"        return this.type;","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    public Date getDate() {","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"e0262191"},"content":"    public void setProgressionLevel(String progression) {","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"e0262191"},"content":"        this.progressionLevel \u003d progression;","lastModifiedDate":"2021-11-12"},{"lineNumber":45,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":46,"author":{"gitId":"e0262191"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":47,"author":{"gitId":"e0262191"},"content":"    public void setTime(Date time) {","lastModifiedDate":"2021-11-12"},{"lineNumber":48,"author":{"gitId":"e0262191"},"content":"        this.dueOn \u003d time;","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"e0262191"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"e0262191"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"e0262191":45,"spencernah":5}},{"path":"src/main/java/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"    private String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"    private String category;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"        this.category \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"    public void setStatus(Boolean status) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"        isDone \u003d status;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"        return isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    public String getCategory() {","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        return this.category;","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"thisisdax"},"content":"    public abstract String taskToStringFormat();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"thisisdax"},"content":"    public abstract String getType();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    public abstract Date getDate();","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":37,"yaololo":4,"spencernah":9}},{"path":"src/main/java/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"    private String type;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"        super(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"        type \u003d \"T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    public String taskToStringFormat() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"        return \"[\" + this.getType() + \"]\" +  \"[\" + super.getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    public String getType() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"        return type;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    public Date getDate() {","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thisisdax":20,"spencernah":7}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package tasklist;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":" * Serve as a store for saving user command.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"public class TaskList {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    private static TaskList taskList \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public static TaskList getInstance() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        if (taskList \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        return taskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"        return list;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"     * @param num The index of a task that is required to be removed from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"    public void deleteTask(int num) {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"        list.remove(num);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"     * Returns the task from the specified index from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"     * @param num The index the task.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"     * @return Task The task at the specified index.","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"    public Task returnTask(int num) {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"chenghuiyuan"},"content":"        return list.get(num);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"chenghuiyuan"},"content":"     * Returns the size of the current task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"chenghuiyuan"},"content":"     * @return int  The size of the current task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"chenghuiyuan"},"content":"    public int sizeOfTask() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"chenghuiyuan"},"content":"        return list.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"     * Add a task to the list.","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"     * @param task is a type of task, could be Event, Deadline.","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"    public void addItem(Task task) {","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"        list.add(task);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"thisisdax"},"content":"     * Add a task to the list.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"thisisdax"},"content":"     * @param task is a type of task, could be Event, Deadline.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"thisisdax"},"content":"    public void tagItem(Task task, String tagCategory) {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"thisisdax"},"content":"        task.setCategory(tagCategory);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":21,"chenghuiyuan":29,"yaololo":20}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import task.Appointment;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import static helpers.DateConverter.removeTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":" * Ui class is only for printing message.","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"public class Ui {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public void welcome() {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"        print(\"Hello! I\u0027m Daffy\\n\");","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"    public void print(String message) {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays an empty line.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"    public void printEmptyLine() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"\\n\");","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays a number of tasks in the Tasklist.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"    public void printTaskNum(TaskList tasks, Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(task + \"\\n   Now you have \" + tasks.sizeOfTask() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays the response when a task is deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"    public void printDeleteCommand(String task, int num) {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"   Noted. I\u0027ve removed this task:\\n   \" + task + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"chenghuiyuan"},"content":"            + \" tasks in the list.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays the response when a task is marked as done.","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"chenghuiyuan"},"content":"    public void printDoneCommand(String task) {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"   Nice! I\u0027ve marked this task as done:\\n   \" + task);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"chenghuiyuan"},"content":"     * Shows a list of tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"chenghuiyuan"},"content":"    public void printTaskList(TaskList list) {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.sizeOfTask(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"chenghuiyuan"},"content":"            System.out.print(\"   \" + i + \". \");","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"            System.out.println(list.returnTask(i).taskToStringFormat());","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"thisisdax"},"content":"     * Shows a list of tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"thisisdax"},"content":"    public void printCategoryList(Category list) {","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":72,"author":{"gitId":"thisisdax"},"content":"            System.out.print(\"   \" + i + \". \");","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"            System.out.println(list.getCategory(i));","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"chenghuiyuan"},"content":"     * Shows a list of pending tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"chenghuiyuan"},"content":"    public void printPendingTaskList(TaskList list) {","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"chenghuiyuan"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.sizeOfTask(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"            Task task \u003d list.returnTask(i);","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"chenghuiyuan"},"content":"            if (!task.getStatus()) { // pending task","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"chenghuiyuan"},"content":"                count++;","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"chenghuiyuan"},"content":"                System.out.print(\"   \" + i + \".\");","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"                System.out.println(list.returnTask(i).taskToStringFormat());","lastModifiedDate":"2021-11-13"},{"lineNumber":88,"author":{"gitId":"chenghuiyuan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"chenghuiyuan"},"content":"        if (count \u003d\u003d 0) { // no pending task","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"chenghuiyuan"},"content":"            System.out.print(\"   No pending tasks. Try command `view -a` to see all tasks.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"     * Prints a list of task filtered based on a specific task type.","lastModifiedDate":"2021-11-13"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"     * @param list existing task list.","lastModifiedDate":"2021-11-13"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"     * @param input task to be filtered from the list.","lastModifiedDate":"2021-11-13"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"    public void printByTaskType(TaskList list, String input) {","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-13"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"        String type;","lastModifiedDate":"2021-11-13"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"        if (input.equals(\"TODO\")) {","lastModifiedDate":"2021-11-13"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"            type \u003d \"T\";","lastModifiedDate":"2021-11-13"},{"lineNumber":107,"author":{"gitId":"thisisdax"},"content":"        } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"            type \u003d \"A\";","lastModifiedDate":"2021-11-13"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":110,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":111,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.sizeOfTask(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":112,"author":{"gitId":"spencernah"},"content":"            Task task \u003d list.returnTask(i);","lastModifiedDate":"2021-11-13"},{"lineNumber":113,"author":{"gitId":"spencernah"},"content":"            if (task.getType() \u003d\u003d type) {","lastModifiedDate":"2021-11-13"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"                count++;","lastModifiedDate":"2021-11-13"},{"lineNumber":115,"author":{"gitId":"spencernah"},"content":"                printTask(task, count);","lastModifiedDate":"2021-11-13"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":117,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"        if (count \u003d\u003d 0) { // no pending task","lastModifiedDate":"2021-11-13"},{"lineNumber":119,"author":{"gitId":"spencernah"},"content":"            printNoTask();","lastModifiedDate":"2021-11-13"},{"lineNumber":120,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":121,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":122,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":123,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":124,"author":{"gitId":"spencernah"},"content":"     * Prints a list of task filtered based on a specific date.","lastModifiedDate":"2021-11-13"},{"lineNumber":125,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":126,"author":{"gitId":"spencernah"},"content":"     * @param list existing task list.","lastModifiedDate":"2021-11-13"},{"lineNumber":127,"author":{"gitId":"spencernah"},"content":"     * @param date date to be filtered from the list.","lastModifiedDate":"2021-11-13"},{"lineNumber":128,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":129,"author":{"gitId":"spencernah"},"content":"    public void printByDate(TaskList list, Date date) {","lastModifiedDate":"2021-11-13"},{"lineNumber":130,"author":{"gitId":"spencernah"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-13"},{"lineNumber":131,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.sizeOfTask(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":132,"author":{"gitId":"spencernah"},"content":"            Task task \u003d list.returnTask(i);","lastModifiedDate":"2021-11-13"},{"lineNumber":133,"author":{"gitId":"spencernah"},"content":"            if (task.getType() \u003d\u003d \"A\" \u0026\u0026 date.compareTo(removeTime(task.getDate())) \u003d\u003d 0) {","lastModifiedDate":"2021-11-13"},{"lineNumber":134,"author":{"gitId":"spencernah"},"content":"                count++;","lastModifiedDate":"2021-11-13"},{"lineNumber":135,"author":{"gitId":"spencernah"},"content":"                printTask(task, count);","lastModifiedDate":"2021-11-13"},{"lineNumber":136,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":137,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":138,"author":{"gitId":"spencernah"},"content":"        if (count \u003d\u003d 0) { // no pending task","lastModifiedDate":"2021-11-13"},{"lineNumber":139,"author":{"gitId":"spencernah"},"content":"            printNoTask();","lastModifiedDate":"2021-11-13"},{"lineNumber":140,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":141,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":142,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":143,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":144,"author":{"gitId":"spencernah"},"content":"     * Prints a list of task filtered based on a specific category.","lastModifiedDate":"2021-11-13"},{"lineNumber":145,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":146,"author":{"gitId":"spencernah"},"content":"     * @param list existing task list.","lastModifiedDate":"2021-11-13"},{"lineNumber":147,"author":{"gitId":"spencernah"},"content":"     * @param category category to be filtered from the list.","lastModifiedDate":"2021-11-13"},{"lineNumber":148,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":149,"author":{"gitId":"spencernah"},"content":"    public void printByCategory(TaskList list, String category) {","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"spencernah"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-13"},{"lineNumber":151,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.sizeOfTask(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":152,"author":{"gitId":"spencernah"},"content":"            Task task \u003d list.returnTask(i);","lastModifiedDate":"2021-11-13"},{"lineNumber":153,"author":{"gitId":"spencernah"},"content":"            if (task.getCategory().equals(category)) {","lastModifiedDate":"2021-11-13"},{"lineNumber":154,"author":{"gitId":"spencernah"},"content":"                count++;","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"spencernah"},"content":"                printTask(task, count);","lastModifiedDate":"2021-11-13"},{"lineNumber":156,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":157,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":158,"author":{"gitId":"spencernah"},"content":"        if (count \u003d\u003d 0) { // no pending task","lastModifiedDate":"2021-11-13"},{"lineNumber":159,"author":{"gitId":"spencernah"},"content":"            printNoTask();","lastModifiedDate":"2021-11-13"},{"lineNumber":160,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":161,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":162,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":163,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":164,"author":{"gitId":"spencernah"},"content":"     * Prints a single task with a leading number.","lastModifiedDate":"2021-11-13"},{"lineNumber":165,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":166,"author":{"gitId":"spencernah"},"content":"     * @param task existing task.","lastModifiedDate":"2021-11-13"},{"lineNumber":167,"author":{"gitId":"spencernah"},"content":"     * @param index leading number.","lastModifiedDate":"2021-11-13"},{"lineNumber":168,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":169,"author":{"gitId":"spencernah"},"content":"    public void printTask(Task task, int index) {","lastModifiedDate":"2021-11-13"},{"lineNumber":170,"author":{"gitId":"spencernah"},"content":"        System.out.print(\"   \" + index + \".\");","lastModifiedDate":"2021-11-13"},{"lineNumber":171,"author":{"gitId":"spencernah"},"content":"        System.out.println(task.taskToStringFormat());","lastModifiedDate":"2021-11-13"},{"lineNumber":172,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":173,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":174,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":175,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":176,"author":{"gitId":"spencernah"},"content":"     * Prints a task from the task list based on the task index.","lastModifiedDate":"2021-11-13"},{"lineNumber":177,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-13"},{"lineNumber":178,"author":{"gitId":"spencernah"},"content":"     * @param list existing task list.","lastModifiedDate":"2021-11-13"},{"lineNumber":179,"author":{"gitId":"spencernah"},"content":"     * @param index task index.","lastModifiedDate":"2021-11-13"},{"lineNumber":180,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":181,"author":{"gitId":"spencernah"},"content":"    public void printByTask(TaskList list, int index) {","lastModifiedDate":"2021-11-13"},{"lineNumber":182,"author":{"gitId":"spencernah"},"content":"        System.out.print(\"   1.\");","lastModifiedDate":"2021-11-13"},{"lineNumber":183,"author":{"gitId":"spencernah"},"content":"        System.out.println(list.returnTask(index).taskToStringFormat());","lastModifiedDate":"2021-11-13"},{"lineNumber":184,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":185,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":186,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":187,"author":{"gitId":"spencernah"},"content":"     * Prints a message when no search result is returned.","lastModifiedDate":"2021-11-13"},{"lineNumber":188,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":189,"author":{"gitId":"spencernah"},"content":"    public void printNoResults() {","lastModifiedDate":"2021-11-13"},{"lineNumber":190,"author":{"gitId":"spencernah"},"content":"        System.out.println(\"   No results found. Please try another parameter\");","lastModifiedDate":"2021-11-13"},{"lineNumber":191,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":192,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":193,"author":{"gitId":"spencernah"},"content":"    private void printNoTask() {","lastModifiedDate":"2021-11-13"},{"lineNumber":194,"author":{"gitId":"spencernah"},"content":"        System.out.println(\"   No pending tasks. Try command `view -a` to see all tasks.\");","lastModifiedDate":"2021-11-13"},{"lineNumber":195,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":196,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":197,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":198,"author":{"gitId":"yaololo"},"content":"     * Displays the response when a task is added.","lastModifiedDate":"2021-10-15"},{"lineNumber":199,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":200,"author":{"gitId":"yaololo"},"content":"    public void printAddedTask(String task, int num) {","lastModifiedDate":"2021-10-15"},{"lineNumber":201,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"   Noted. I\u0027ve added this task:\\n   \" + task + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-15"},{"lineNumber":202,"author":{"gitId":"yaololo"},"content":"            + \" tasks in the list.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":203,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":204,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":205,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"thisisdax"},"content":"     * Displays the response when a category is added.","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"thisisdax"},"content":"    public void printAddedCategory(String category, int num) {","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"thisisdax"},"content":"        System.out.println(\"   Noted. I\u0027ve added this category:\\n   \" + category + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-29"},{"lineNumber":210,"author":{"gitId":"thisisdax"},"content":"            + \" categories in the list.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"thisisdax"},"content":"     * Displays the response when a category is deleted.","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"thisisdax"},"content":"    public void printDeleteCategory(String category, int num) {","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"thisisdax"},"content":"        System.out.println(\"   Noted. I\u0027ve removed this category:\\n   \" + category + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"thisisdax"},"content":"            + \" categories in the list.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"thisisdax"},"content":"     * Displays the response when a category is added.","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"thisisdax"},"content":"    public void printTaggedCategory(int taskIndex, String category, int num) {","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"thisisdax"},"content":"        System.out.println(\"   Noted. I\u0027ve tagged task number \"","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"thisisdax"},"content":"            + (taskIndex + 1) + \" with the specified category:\\n   \" + category);","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"yaololo"},"content":"    public void printUpdatedTask(String task, int num) {","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"   Noted. I\u0027ve updated this task:\\n   \" + task + \"\\n\");","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"yaololo"},"content":"    public void bye() {","lastModifiedDate":"2021-10-15"},{"lineNumber":234,"author":{"gitId":"yaololo"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-10-15"},{"lineNumber":235,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":236,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"yaololo"},"content":"    public void printProgress(int noOfCompleted, int totalTasks, String percentage) {","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"yaololo"},"content":"        print(noOfCompleted + \" out of \" + totalTasks + \" tasks are completed. \" + \"(\" + percentage + \")\");","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"yaololo"},"content":"    public void printTasks(ArrayList\u003cString\u003e tasks) {","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"yaololo"},"content":"        if (tasks.size() \u003c 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"yaololo"},"content":"            print(\"   No matching result.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"yaololo"},"content":"            print(\"Matched results are: \");","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"yaololo"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"yaololo"},"content":"            for (String task : tasks) {","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"yaololo"},"content":"                print(\"   \" + index + \". \" + task);","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"yaololo"},"content":"                index +\u003d 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":35,"chenghuiyuan":56,"yaololo":46,"spencernah":116}},{"path":"src/test/java/seedu/duke/CategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package seedu.duke;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"public class CategoryTest {","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private final Category category \u003d new Category();","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    @Test","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    public void addCategory() throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"        category.addCategory(\"fishes\");","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        assertEquals(\"fishes\", category.getCategory(0));","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    @Test","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    public void addAnotherCategory() throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"        category.addCategory(\"shrimps\");","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        assertEquals(\"shrimps\", category.getCategory(1));","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"    @Test","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"    public void getCategorySize() throws ErrorHandler {","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"        assertEquals(2, category.size());","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"thisisdax":27,"yaololo":2}}]
