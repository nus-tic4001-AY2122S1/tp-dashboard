[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"# Daffy  ","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"This is an extension of Duke project.","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"chenghuiyuan":2,"-":61}},{"path":"src/main/java/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        ui.bye();","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yaololo":13}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":" * Represents an executable command.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public boolean isExiting() {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        return this.isExit;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    protected int parseTaskNumberToIndex(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"            // for user input it will start from 1, we need to minus 1 for list index.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"            return Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"    protected void checkTaskNumberOutOfRange(int taskNumber, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d taskList.sizeOfTask()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"chenghuiyuan":5,"yaololo":31}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":" * Deletes a task identified using it\u0027s index from the task list.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    private String input;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    public DeleteCommand(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        String deletedItem \u003d list.returnTask(this.taskIndex).taskToStringFormat();","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        list.deleteTask(this.taskIndex);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"        ui.printDeleteCommand(deletedItem, list.sizeOfTask());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"    private void existingCode(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        int num \u003d 0;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"        if (input.matches(\".*\\\\d.*\")) {","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"            num \u003d Integer.parseInt(input.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d list.sizeOfTask()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"            String echo \u003d list.returnTask(num - 1).taskToStringFormat();","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            list.deleteTask(num - 1);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"            ui.printDeleteCommand(echo, list.sizeOfTask());","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(\"Item not found.\\n\");","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"        ui.printEmptyLine();","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chenghuiyuan":24,"yaololo":31}},{"path":"src/main/java/command/LocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class LocationCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private final String location;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public LocationCommand(String taskNumber, String location) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        this.taskNumber \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"pending implementation for setting location for appointment task. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"            + \"Waiting for implementation of Appointment task\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yaololo":21}},{"path":"src/main/java/command/TodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Todo;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        Todo addedTodo \u003d new Todo(this.taskDescription);","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        list.addItem(addedTodo);","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        ui.printAddedTask(addedTodo.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"yaololo":23}},{"path":"src/main/java/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":" * Lists all tasks in the task list to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"        if (list.sizeOfTask() \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"            throw new ErrorHandler(\"The list is empty.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"        ui.printTaskList(list);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chenghuiyuan":27,"yaololo":2}},{"path":"src/main/java/constant/CommandKeyWords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"public enum CommandKeyWords {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    LOCATION(\"LOCATION\"), BYE(\"BYE\"), TODO(\"TODO\"), DELETE(\"DELETE\"), VIEW(\"VIEW\");","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    private final String value;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    CommandKeyWords(String value) {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"     * Get serialized string.","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"     * @return string which shows all available command keywords.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    private static String getSerializedString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        String keywords \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        int numberOfKeys \u003d values().length;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        for (CommandKeyWords v : values()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"            index +\u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            String punctuation \u003d index \u003d\u003d numberOfKeys ? \".\" : \", \";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            keywords \u003d keywords.concat(v.getValue()).concat(punctuation);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        return keywords;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"     * Command key words.","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"     * @param value is an enum string for validating if the given value is valid.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"    public static CommandKeyWords getEnum(String value) throws ErrorHandler {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"        for (CommandKeyWords v : values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"            if (v.getValue().equalsIgnoreCase(value)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"                return v;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        throw new ErrorHandler(ErrorMessage.INVALID_COMMAND + \" Please starts your command with \"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            + getSerializedString()","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"            + \" (case insensitive)\");","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"     * Get value.","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"     * @return enum value.","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"    public String getValue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"        return value;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"        return this.getValue();","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thisisdax":2,"yaololo":61}},{"path":"src/main/java/constant/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":" * Constants for error messages.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class ErrorMessage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_TASK_NUMBER \u003d \"OOPS!!! I\u0027m sorry, you have provided a invalid task number.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TASK_NUMBER \u003d \"OOPS!!! The task number cannot be empty.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TODO \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_LOCATION_DESCRIPTION \u003d \"OOPS!!! The appointment location cannot be empty.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":12}},{"path":"src/main/java/exception/ErrorHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package exception;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class ErrorHandler extends Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public ErrorHandler(String errorMessage) {","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":7}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import command.ByeCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import command.Command;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import command.DeleteCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import command.TodoCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import command.ViewCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import constant.CommandKeyWords;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"public class Parser {","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private String content;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private String taskNo;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public Command parse(String input) throws ErrorHandler {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        String[] result \u003d input.split(\" \", 2);","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        CommandKeyWords commandWord \u003d CommandKeyWords.getEnum(result[0].toUpperCase());","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        case VIEW:","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"            return new ViewCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        case TODO:","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TODO);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            this.content \u003d result[1].trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"            return new TodoCommand(this.content);","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        case DELETE:","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"            this.taskNo \u003d result[1].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"            return new DeleteCommand(this.taskNo);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"        case BYE:","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":41}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import command.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import parser.Parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private static final ArrayList\u003cTask\u003e todoList \u003d TaskList.getInstance().getList();","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    private final Storage storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    public Duke() {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        this.storage \u003d new Storage(\"file_path\");","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        this.tasklist \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        new Duke().run();","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    public void run() {","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        this.ui.welcome();","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            try {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"                String userCommand \u003d in.nextLine().trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"                Command command \u003d new Parser().parse(userCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"                command.execute(this.tasklist, this.ui, this.storage);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"                isExit \u003d command.isExiting();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"                this.ui.print(\"Error: \" + e.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        // exit program","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"thisisdax":3,"yaololo":35,"-":13}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class Storage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    private final Path root \u003d FileSystems.getDefault().getPath(\"\").toAbsolutePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    private String filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        this.filePath \u003d \"/\" + filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"yaololo":14}},{"path":"src/main/java/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"    private String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    public void setStatus(Boolean status) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"        isDone \u003d status;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"        return isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"    public abstract String taskToStringFormat();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"    public abstract String getType();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":31,"yaololo":4}},{"path":"src/main/java/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"    private String type;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"        super(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"        type \u003d \"T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    public String taskToStringFormat() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"        return \"[\" + this.getType() + \"]\" +  \"[\" + super.getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    public String getType() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"        return type;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thisisdax":20}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package tasklist;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":" * Serve as a store for saving user command.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"public class TaskList {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    private static TaskList taskList \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public static TaskList getInstance() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        if (taskList \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        return taskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"        return list;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"     * @param num The index of a task that is required to be removed from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"    public void deleteTask(int num) {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"        list.remove(num);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"     * Returns the task from the specified index from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"     * @param num The index the task.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"     * @return Task The task at the specified index.","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"    public Task returnTask(int num) {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"chenghuiyuan"},"content":"        return list.get(num);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"chenghuiyuan"},"content":"     * Returns the size of the current task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"chenghuiyuan"},"content":"     * @return int  The size of the current task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"chenghuiyuan"},"content":"    public int sizeOfTask() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"chenghuiyuan"},"content":"        return list.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"     * Add a task to the list.","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"     * @param task is a type of task, could be Event, Deadline.","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"    public void addItem(Task task) {","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"        list.add(task);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":13,"chenghuiyuan":29,"yaololo":20}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":" * Ui class is only for printing message.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class Ui {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public void welcome() {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        print(\"Hello! I\u0027m Dafy\\n\");","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    public void print(String message) {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays an empty line.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"    public void printEmptyLine() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"\\n\");","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays a number of tasks in the Tasklist.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"    public void printTaskNum(TaskList tasks, Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(task + \"\\n   Now you have \" + tasks.sizeOfTask() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays the response when a task is deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"    public void printDeleteCommand(String task, int num) {","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"   Noted. I\u0027ve removed this task:\\n   \" + task + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"            + \" tasks in the list.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"     * Shows a list of tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"chenghuiyuan"},"content":"    public void printTaskList(TaskList list) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"chenghuiyuan"},"content":"        for (int i \u003d 1; i \u003c\u003d list.sizeOfTask(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"chenghuiyuan"},"content":"            System.out.print(\"   \" + i + \".\");","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"            System.out.println(list.returnTask(i - 1).taskToStringFormat());","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"     * Displays the response when a task is added.","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"    public void printAddedTask(String task, int num) {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"   Noted. I\u0027ve added this task:\\n   \" + task + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"            + \" tasks in the list.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"    public void bye() {","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"chenghuiyuan":34,"yaololo":27}}]
