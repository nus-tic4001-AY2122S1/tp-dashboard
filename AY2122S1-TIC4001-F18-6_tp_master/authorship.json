[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"# Daffy  ","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"This is an extension of Duke project.","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"chenghuiyuan":2,"-":61}},{"path":"src/main/java/category/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":" * Serve as a store for saving user command.","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"public class Category {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"    private static final ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"    private static Category category \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    public static Category getInstance() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"            category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        return category;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"     * Returns a Singleton for categories.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"    public ArrayList\u003cString\u003e getList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        return list;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"     * Add a category to the list.","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"     * @param category is a String that can be any String value.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"    public void addCategory(String category) {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"        list.add(category);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"     * Deletes a category from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"     * @param num The index of a category that is required to be removed from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"    public void deleteCategory(int num) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"        list.remove(num);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"thisisdax"},"content":"     * Returns the category from the specified index from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"thisisdax"},"content":"     * @param num The index the category.","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"thisisdax"},"content":"     * @return int The category at the specified index.","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"thisisdax"},"content":"    public String getCategory(int num) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"thisisdax"},"content":"        return list.get(num);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"thisisdax"},"content":"     * Returns the size of the current category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"thisisdax"},"content":"     * @return int The size of the current category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"thisisdax"},"content":"    public int size() {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"thisisdax"},"content":"        return list.size();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":63}},{"path":"src/main/java/command/AppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Appointment;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"public class AppointmentCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private final Date at;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final String location;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    public AppointmentCommand(String description, String at, String location) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.at \u003d this.parseDateTime(at);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        Appointment addedAppointment \u003d new Appointment(this.taskDescription, this.at, this.location);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        list.addItem(addedAppointment);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        ui.printAddedTask(addedAppointment.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"yaololo":28}},{"path":"src/main/java/command/AppointmentTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import task.Appointment;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"public class AppointmentTimeCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private final Date time;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public AppointmentTimeCommand(String taskNumber, String time) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        this.time \u003d this.parseDateTime(time);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        Task task \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        if (task instanceof Appointment) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            ((Appointment) task).setTime(this.time);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            ui.printUpdatedTask(task.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"            ui.print(ErrorMessage.INVALID_APPOINTMENT_TASK);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yaololo":32}},{"path":"src/main/java/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        ui.bye();","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yaololo":13}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import constant.Utils;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import helpers.DateConverter;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"chenghuiyuan"},"content":" * Represents an executable command.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public boolean isExiting() {","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        return this.isExit;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    protected int parseTaskNumberToIndex(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            // for user input it will start from 1, we need to minus 1 for list index.","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"            return Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"    protected void checkTaskNumberOutOfRange(int taskNumber, TaskList taskList) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d taskList.sizeOfTask()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_TASK_NUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"    protected Date parseDateTime(String dateTime) throws ErrorHandler {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        String[] dayTime \u003d dateTime.split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"        if (dayTime.length \u003c 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_APPOINTMENT_TIME);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        String time \u003d dayTime[1];","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"        String day \u003d DateConverter.convert(dayTime[0]).trim();","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(Utils.DATE_TIME_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"            return formatter.parse(day + \" \" + time);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_APPOINTMENT_TIME);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"chenghuiyuan":4,"yaololo":55}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":" * Deletes a task identified using it\u0027s index from the task list.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    public DeleteCommand(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        String deletedItem \u003d list.returnTask(this.taskIndex).taskToStringFormat();","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        list.deleteTask(this.taskIndex);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        ui.printDeleteCommand(deletedItem, list.sizeOfTask());","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chenghuiyuan":23,"yaololo":13}},{"path":"src/main/java/command/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"import task.Task;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"chenghuiyuan"},"content":" * Marks a task identified using it\u0027s index as done.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"chenghuiyuan"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"    public DoneCommand(String taskNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"    ","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"        Task doneTask \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"        doneTask.setStatus(true);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"        ui.printDoneCommand(doneTask.taskToStringFormat());","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"chenghuiyuan":39}},{"path":"src/main/java/command/LocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import task.Appointment;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"public class LocationCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    private final String location;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    public LocationCommand(String taskNumber, String location) throws ErrorHandler {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.taskIndex \u003d this.parseTaskNumberToIndex(taskNumber);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        this.checkTaskNumberOutOfRange(this.taskIndex, list);","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        Task task \u003d list.returnTask(this.taskIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        if (task instanceof Appointment) {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            ((Appointment) task).setLocation(this.location);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            ui.printUpdatedTask(task.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"            ui.print(ErrorMessage.INVALID_APPOINTMENT_TASK);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yaololo":31}},{"path":"src/main/java/command/TaskProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class TaskProgressCommand extends Command {","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        int completedTaskCount \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"        int numberOfTasks \u003d list.sizeOfTask();","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        for (Task task : list.getList()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"            if (task.getStatus()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"                completedTaskCount +\u003d 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        String percentage \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"            numberOfTasks \u003e 0 ? String.format(\"%.2f\", (completedTaskCount * 100.0) / numberOfTasks) + \"%\" : \"0%\";","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        ui.printProgress(completedTaskCount, list.sizeOfTask(), percentage);","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"yaololo":23}},{"path":"src/main/java/command/TodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package command;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import task.Todo;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        Todo addedTodo \u003d new Todo(this.taskDescription);","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        list.addItem(addedTodo);","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        ui.printAddedTask(addedTodo.taskToStringFormat(), list.sizeOfTask());","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"yaololo":23}},{"path":"src/main/java/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"package command;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chenghuiyuan"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"chenghuiyuan"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chenghuiyuan"},"content":" * Lists all tasks in the task list to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chenghuiyuan"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":"    private boolean isViewAll;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"chenghuiyuan"},"content":"    public ViewCommand(String[] input) {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"chenghuiyuan"},"content":"        if (input.length \u003e 1 \u0026\u0026 input[1].equals(\"-a\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"chenghuiyuan"},"content":"            this.isViewAll \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"chenghuiyuan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"            this.isViewAll \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"        if (list.sizeOfTask() \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            ui.print(\"The list is empty.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"        } ","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"        if (isViewAll) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"            ui.printTaskList(list);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"            ui.printPendingTaskList(list);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chenghuiyuan":36,"yaololo":4}},{"path":"src/main/java/command/category/AddCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"public class AddCategory extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    private final String categoryName;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public AddCategory(String category) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        if (category.isEmpty() || category.isBlank()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        this.categoryName \u003d category;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        category.addCategory(this.categoryName);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"        ui.printAddedCategory(this.categoryName, category.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":27}},{"path":"src/main/java/command/category/DeleteCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":" * Deletes a category identified using it\u0027s index from the category list.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"public class DeleteCategory extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    private final int categoryIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    private String input;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"    public DeleteCategory(String categoryNumber) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"            this.categoryIndex \u003d Integer.parseInt(categoryNumber) - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"        if (this.categoryIndex \u003c 0 || this.categoryIndex \u003e\u003d category.size()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"thisisdax"},"content":"        String tagCategory \u003d category.getCategory(this.categoryIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"thisisdax"},"content":"        for (String searchCategory : this.category.getList()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"thisisdax"},"content":"            if (searchCategory.contains(tagCategory)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"thisisdax"},"content":"                throw new ErrorHandler(ErrorMessage.CATEGORY_STILL_IN_USE);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"thisisdax"},"content":"        category.deleteCategory(this.categoryIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"thisisdax"},"content":"        ui.printDeleteCategory(tagCategory, category.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":53}},{"path":"src/main/java/command/category/TagCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"public class TagCategory extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    private final String categoryName;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    private final int taskNum;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    public TagCategory(String taskNum, String categoryName) throws ErrorHandler {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"        if (categoryName.isEmpty() || categoryName.isBlank()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NAME);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        this.taskNum \u003d this.parseTaskNumberToIndex(taskNum);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        boolean categoryExists \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"        for (String searchCategory : this.category.getList()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"            if (searchCategory.contains(categoryName)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"                categoryExists \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"        if (!categoryExists) {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(ErrorMessage.CATEGORY_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"        this.checkTaskNumberOutOfRange(this.taskNum, tasks);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"        tasks.tagItem(tasks.returnTask(this.taskNum), this.categoryName);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"        ui.printTaggedCategory(taskNum, this.categoryName, category.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"thisisdax":42}},{"path":"src/main/java/command/category/ViewCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package command.category;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":" * Lists all categories in the category list to the user.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"public class ViewCategory extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    private Category category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"     * @param list    The tasks stored in an ArrayList.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"     * @param ui      The User Interface (UI).","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"     * @param storage The storage to allow reading and storing of tasks from and to a txt file.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"        if (category.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"            throw new ErrorHandler(\"The category list is empty.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"        ui.printCategoryList(category);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"thisisdax":32}},{"path":"src/main/java/constant/CommandKeyWords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"public enum CommandKeyWords {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"    SET_LOCATION(\"SET_LOCATION\"), DELETE(\"DELETE\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    APPOINTMENT(\"APPOINTMENT\"), SET_TIME(\"SET_TIME\"), CATEGORY(\"CATEGORY\"), DONE(\"DONE\"), VIEW(\"VIEW\"), TODO(\"TODO\"),","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    BYE(\"BYE\"), PROGRESS(\"PROGRESS\");","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    private final String value;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    CommandKeyWords(String value) {","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"     * Get serialized string.","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"     * @return string which shows all available command keywords.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    private static String getSerializedString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        String keywords \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        int numberOfKeys \u003d values().length;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        for (CommandKeyWords v : values()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            index +\u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            String punctuation \u003d index \u003d\u003d numberOfKeys ? \".\" : \", \";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            keywords \u003d keywords.concat(v.getValue()).concat(punctuation);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        return keywords;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"     * Command key words.","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"     * @param value is an enum string for validating if the given value is valid.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"    public static CommandKeyWords getEnum(String value) throws ErrorHandler {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        for (CommandKeyWords v : values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"            if (v.getValue().equalsIgnoreCase(value)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"                return v;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"            } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"                CommandKeyWords w \u003d autoCorrect(value, v);","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"                if (w !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"                    return w;","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"        throw new ErrorHandler(ErrorMessage.INVALID_COMMAND + \" Please starts your command with \"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"            + getSerializedString()","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"            + \" (case insensitive)\");","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"     * Correct user\u0027s input Command in case of typo/misspelling.","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"     * @param input is the user\u0027s input","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"     * @param v     is an enum","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"    private static CommandKeyWords autoCorrect(String input, CommandKeyWords v) {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"        double similarity;","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"        int iter;","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"        double comparison;","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"        boolean isSkip;","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"        String comp \u003d v.getValue();","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"        similarity \u003d 0;","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"        iter \u003d 0;","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c comp.length(); i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"            isSkip \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"            for (int j \u003d iter; j \u003c input.length() \u0026\u0026 !isSkip; j++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"                if (input.charAt(j) \u003d\u003d comp.charAt(i)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"                    similarity++;","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"                    iter++;","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"                    isSkip \u003d true;","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"                comparison \u003d similarity / comp.length();","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"                if (comparison \u003e 0.7) {","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"                    return v;","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"     * Get value.","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"yaololo"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"yaololo"},"content":"     * @return enum value.","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"yaololo"},"content":"    public String getValue() {","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"yaololo"},"content":"        return value;","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"yaololo"},"content":"        return this.getValue();","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thisisdax":2,"yaololo":63,"spencernah":38}},{"path":"src/main/java/constant/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":" * Constants for error messages.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class ErrorMessage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_TASK_NUMBER \u003d \"OOPS!!! I\u0027m sorry, you have provided a invalid task number.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TASK_NUMBER \u003d \"OOPS!!! The task number cannot be empty.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TODO \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_LOCATION_DESCRIPTION \u003d \"OOPS!!! The appointment location cannot be empty.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    public static final String INVALID_CATEGORY_COMMAND \u003d \"OOPS!!! Please specify a valid category command.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    public static final String INVALID_CATEGORY_NUMBER \u003d \"OOPS!!! Please specify a valid category number.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    public static final String EMPTY_CATEGORY_NAME \u003d \"OOPS!!! Please specify a category name.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public static final String EMPTY_CATEGORY_NUMBER \u003d \"OOPS!!! Please specify a category number.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    public static final String CATEGORY_STILL_IN_USE \u003d \"OOPS!!! The category is still being tagged to some task.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    public static final String CATEGORY_DOES_NOT_EXIST \u003d \"OOPS!!! The category you specified does not exist.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    public static final String INVALID_CATEGORY_TAG \u003d \"OOPS!!! Please specify a task number and a category \"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        + \"name. e.g. category tag 1 homework\";","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_TIME_DESCRIPTION \u003d \"OOPS!!! The appointment time cannot be empty.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_APPOINTMENT_TIME \u003d \"OOPS!!! The appointment time format is invalid, please \"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        + \"refer to these formats:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        + \"\u002722-09-2018 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"        + \"\u0027TODAY 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        + \"\u0027YESTERDAY 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        + \"\u0027TOMORROW 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-MON 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-TUE 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-WED 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-THU 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-FRI 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-SAT 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        + \"\u0027THIS-SUN 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-MON 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-TUE 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-WED 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-THU 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-FRI 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-SAT 1:23:43 pm\u0027\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        + \"\u0027NEXT-SUN 1:23:43 pm\u0027\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_APPOINTMENT_TASK \u003d \"OOPS!!! Set location fail, the task is not of Appointment \"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"        + \"type.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_APPOINTMENT_DESCRIPTION \u003d \"OOPS!!! The appointment description cannot be empty.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_APPOINTMENT_TIME \u003d \"OOPS!!! The appointment time is missing, missing \u0027/at\u0027\";","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"    public static final String EMPTY_APPOINTMENT_LOCATION \u003d \"OOPS!!! The appointment location is missing, missing \"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        + \"\u0027/l\u0027\";","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":8,"yaololo":39}},{"path":"src/main/java/constant/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class Utils {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy hh:mm:ss a\";","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yaololo":6}},{"path":"src/main/java/exception/ErrorHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package exception;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class ErrorHandler extends Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public ErrorHandler(String errorMessage) {","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":7}},{"path":"src/main/java/helpers/DateConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package helpers;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.Utils;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import static java.time.temporal.TemporalAdjusters.nextOrSame;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"import static java.time.temporal.TemporalAdjusters.previousOrSame;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"public class DateConverter {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public static String convert(String day) {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        switch (day.toUpperCase()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        case \"TODAY\":","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"            LocalDate today \u003d getToday();","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"            System.out.println(today.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT)));","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"            return today.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"        case \"YESTERDAY\":","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"            LocalDate yesterday \u003d getToday().minusDays(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"            return yesterday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        case \"TOMORROW\":","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"            LocalDate tomorrow \u003d getToday().plusDays(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            return tomorrow.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"        case \"THIS-MON\":","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"            LocalDate monday \u003d getCurrentWeekDay(getToday(), DayOfWeek.MONDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"            return monday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"        case \"THIS-TUE\":","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"            LocalDate tuesday \u003d getCurrentWeekDay(getToday(), DayOfWeek.TUESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"            return tuesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        case \"THIS-WED\":","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"            LocalDate wednesday \u003d getCurrentWeekDay(getToday(), DayOfWeek.WEDNESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"            return wednesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        case \"THIS-THU\":","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"            LocalDate thursday \u003d getCurrentWeekDay(getToday(), DayOfWeek.THURSDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"            return thursday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        case \"THIS-FRI\":","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"            LocalDate friday \u003d getCurrentWeekDay(getToday(), DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"            return friday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"        case \"THIS-SAT\":","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"            LocalDate saturday \u003d getCurrentWeekDay(getToday(), DayOfWeek.SATURDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"            return saturday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"        case \"THIS-SUN\":","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"            LocalDate sunday \u003d getCurrentWeekDay(getToday(), DayOfWeek.SUNDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            return sunday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-MON\":","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            LocalDate nexMonday \u003d getNextWeekDay(getToday(), DayOfWeek.MONDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"            return nexMonday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-TUE\":","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"            LocalDate nextTuesday \u003d getNextWeekDay(getToday(), DayOfWeek.TUESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"            return nextTuesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-WED\":","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"            LocalDate nextWednesday \u003d getNextWeekDay(getToday(), DayOfWeek.WEDNESDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"            return nextWednesday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-THU\":","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"            LocalDate nextThursday \u003d getNextWeekDay(getToday(), DayOfWeek.THURSDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"            return nextThursday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-FRI\":","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"            LocalDate nextFriday \u003d getNextWeekDay(getToday(), DayOfWeek.FRIDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"            return nextFriday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-SAT\":","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"yaololo"},"content":"            LocalDate nextSaturday \u003d getNextWeekDay(getToday(), DayOfWeek.SATURDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"yaololo"},"content":"            return nextSaturday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"yaololo"},"content":"        case \"NEXT-SUN\":","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"yaololo"},"content":"            LocalDate nextSunday \u003d getNextWeekDay(getToday(), DayOfWeek.SUNDAY);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"yaololo"},"content":"            return nextSunday.format(DateTimeFormatter.ofPattern(Utils.DATE_FORMAT));","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"yaololo"},"content":"        default:","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"yaololo"},"content":"            return day;","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"yaololo"},"content":"    private static LocalDate getToday() {","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"yaololo"},"content":"        return LocalDate.now();","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"yaololo"},"content":"    private static LocalDate getCurrentWeekDay(LocalDate today, DayOfWeek targetDate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"yaololo"},"content":"        if (today.getDayOfWeek().compareTo(targetDate) \u003d\u003d 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"yaololo"},"content":"            return today;","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"yaololo"},"content":"        } else if (today.getDayOfWeek().compareTo(targetDate) \u003e 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"yaololo"},"content":"            return today.with(previousOrSame(targetDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"yaololo"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"yaololo"},"content":"            return today.with(nextOrSame(targetDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"yaololo"},"content":"    private static LocalDate getNextWeekDay(LocalDate today, DayOfWeek targetDate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"yaololo"},"content":"        return getCurrentWeekDay(today, targetDate).plusDays(7);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"yaololo":90}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import command.category.AddCategory;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"import command.category.DeleteCategory;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import command.category.TagCategory;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import command.category.ViewCategory;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"import command.Command;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import command.ViewCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"chenghuiyuan"},"content":"import command.DoneCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"import command.TodoCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"import command.DeleteCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"import command.LocationCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"import command.ByeCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"import command.AppointmentCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"import command.TaskProgressCommand;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"import command.AppointmentTimeCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"import constant.CommandKeyWords;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"import constant.ErrorMessage;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"public class Parser {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    private final Category category \u003d new Category();","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    private String content;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    private String taskNo;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"    public Command parse(String input) throws ErrorHandler {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"        String[] result \u003d input.split(\" \", 2);","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        CommandKeyWords commandWord \u003d CommandKeyWords.getEnum(result[0].toUpperCase());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"        case VIEW:","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"            return new ViewCommand(result);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"        case DONE:","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"            this.taskNo \u003d result[1].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"            return new DoneCommand(this.taskNo);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"        case TODO:","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TODO);","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"            this.content \u003d result[1].trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            return new TodoCommand(this.content);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        case DELETE:","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"            this.taskNo \u003d result[1].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"            return new DeleteCommand(this.taskNo);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"thisisdax"},"content":"        case CATEGORY:","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"thisisdax"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"thisisdax"},"content":"                throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"thisisdax"},"content":"            String[] categoryOption \u003d result[1].split(\" \", 2);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"thisisdax"},"content":"            switch (categoryOption[0].toLowerCase().trim()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"            case \"view\":","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"thisisdax"},"content":"                return new ViewCategory();","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"thisisdax"},"content":"            case \"add\":","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"thisisdax"},"content":"                if (categoryOption.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"thisisdax"},"content":"                return new AddCategory(categoryOption[1].trim());","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"thisisdax"},"content":"            case \"delete\":","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"thisisdax"},"content":"                if (categoryOption.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"thisisdax"},"content":"                return new DeleteCategory(categoryOption[1].trim());","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"thisisdax"},"content":"            case \"tag\":","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"thisisdax"},"content":"                if (categoryOption.length \u003c 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.EMPTY_CATEGORY_NUMBER);","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"thisisdax"},"content":"                String[] tagOption \u003d categoryOption[1].split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"thisisdax"},"content":"                if (tagOption.length \u003c 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"thisisdax"},"content":"                    throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_TAG);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"thisisdax"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"thisisdax"},"content":"                return new TagCategory(tagOption[0].trim(), tagOption[1].trim());","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"thisisdax"},"content":"            default:","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"thisisdax"},"content":"                throw new ErrorHandler(ErrorMessage.INVALID_CATEGORY_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"thisisdax"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"yaololo"},"content":"        case APPOINTMENT:","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_APPOINTMENT_DESCRIPTION);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"            return this.handleNewAppointment(result[1].trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"yaololo"},"content":"        case SET_LOCATION:","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"yaololo"},"content":"            String[] inputContent \u003d result[1].split(\" \", 2);","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"yaololo"},"content":"            if (inputContent.length \u003c 2) {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_LOCATION_DESCRIPTION);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"yaololo"},"content":"            this.taskNo \u003d inputContent[0];","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"yaololo"},"content":"            this.content \u003d inputContent[1];","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yaololo"},"content":"            return new LocationCommand(this.taskNo, this.content);","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yaololo"},"content":"        case SET_TIME:","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"yaololo"},"content":"            if (result.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"yaololo"},"content":"                throw new ErrorHandler(ErrorMessage.EMPTY_TASK_NUMBER);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"yaololo"},"content":"            return this.handleSetTime(result[1]);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"yaololo"},"content":"        case PROGRESS:","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"yaololo"},"content":"            return new TaskProgressCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"yaololo"},"content":"        case BYE:","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"yaololo"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"yaololo"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"yaololo"},"content":"    private Command handleNewAppointment(String inputContent) throws ErrorHandler {","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"yaololo"},"content":"        String[] appointmentInput \u003d inputContent.split(\"/at\", 2);","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"yaololo"},"content":"        this.content \u003d appointmentInput[0].trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"yaololo"},"content":"        if (appointmentInput.length \u003c 2) {","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_APPOINTMENT_TIME);","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"yaololo"},"content":"        String[] timeContent \u003d appointmentInput[1].split(\"/l\", 2);","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"yaololo"},"content":"        if (timeContent.length \u003c 2) {","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_APPOINTMENT_LOCATION);","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"yaololo"},"content":"        String at \u003d timeContent[0].trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"yaololo"},"content":"        String location \u003d timeContent[1].trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"yaololo"},"content":"        return new AppointmentCommand(this.content, at, location);","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"yaololo"},"content":"    private Command handleSetTime(String input) throws ErrorHandler {","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"yaololo"},"content":"        String[] inputContent \u003d input.split(\" \", 2);","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"yaololo"},"content":"        if (inputContent.length \u003c 2) {","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"yaololo"},"content":"            throw new ErrorHandler(ErrorMessage.EMPTY_TIME_DESCRIPTION);","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"yaololo"},"content":"        this.taskNo \u003d inputContent[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"yaololo"},"content":"        this.content \u003d inputContent[1];","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"yaololo"},"content":"        return new AppointmentTimeCommand(this.taskNo, this.content);","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":35,"chenghuiyuan":8,"yaololo":106}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import command.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import parser.Parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"import task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"    private final Storage storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    private final Category category;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public Duke() {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        this.storage \u003d new Storage(\"file_path\");","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        this.tasklist \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        this.category \u003d new Category();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"        new Duke().run();","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"    public void run() {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"        this.ui.welcome();","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"            try {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"                String userCommand \u003d in.nextLine().trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"                Command command \u003d new Parser().parse(userCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"                command.execute(this.tasklist, this.ui, this.storage);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"                isExit \u003d command.isExiting();","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"                this.ui.print(\"Error: \" + e.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"        // exit program","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"thisisdax":6,"yaololo":34,"-":13}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class Storage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    private final Path root \u003d FileSystems.getDefault().getPath(\"\").toAbsolutePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    private String filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        this.filePath \u003d \"/\" + filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"yaololo":14}},{"path":"src/main/java/task/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import constant.Utils;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"public class Appointment extends Task {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    private final String type;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    private Date at;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    private String location;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    public Appointment(String description, Date at, String location) {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        super(description);","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        type \u003d \"A\";","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"    public String taskToStringFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(Utils.DATE_TIME_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"        return \"[\" + this.getType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"            + super.getDescription() + \",\" + \" at \" + formatter.format(this.at) + \". \"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"            + \"Location: \" + this.location;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"    public String getType() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"        return this.type;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    public String getLocation() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        return this.location;","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"    public void setLocation(String location) {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"    public void setTime(Date time) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"        this.at \u003d time;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yaololo":43}},{"path":"src/main/java/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"    private String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"    private String category;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"        this.category \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    public void setStatus(Boolean status) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"        isDone \u003d status;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"        return isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"    public abstract String taskToStringFormat();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"    public abstract String getType();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":37,"yaololo":4}},{"path":"src/main/java/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"    private String type;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"        super(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"        type \u003d \"T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    public String taskToStringFormat() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"        return \"[\" + this.getType() + \"]\" +  \"[\" + super.getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    public String getType() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"        return type;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thisisdax":20}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package tasklist;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":" * Serve as a store for saving user command.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"public class TaskList {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    private static TaskList taskList \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public static TaskList getInstance() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        if (taskList \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"        return taskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"        return list;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"     * @param num The index of a task that is required to be removed from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"    public void deleteTask(int num) {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"        list.remove(num);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"chenghuiyuan"},"content":"     * Returns the task from the specified index from the task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"     * @param num The index the task.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"     * @return Task The task at the specified index.","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"    public Task returnTask(int num) {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"chenghuiyuan"},"content":"        return list.get(num);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"chenghuiyuan"},"content":"     * Returns the size of the current task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"chenghuiyuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"chenghuiyuan"},"content":"     * @return int  The size of the current task list.","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"chenghuiyuan"},"content":"    public int sizeOfTask() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"chenghuiyuan"},"content":"        return list.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"yaololo"},"content":"     * Add a task to the list.","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"yaololo"},"content":"     * @param task is a type of task, could be Event, Deadline.","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"yaololo"},"content":"    public void addItem(Task task) {","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"yaololo"},"content":"        list.add(task);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"thisisdax"},"content":"     * Add a task to the list.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"thisisdax"},"content":"     * @param task is a type of task, could be Event, Deadline.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"thisisdax"},"content":"    public void tagItem(Task task, String tagCategory) {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"thisisdax"},"content":"        task.setCategory(tagCategory);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":21,"chenghuiyuan":29,"yaololo":20}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chenghuiyuan"},"content":"import task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import category.Category;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"chenghuiyuan"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":" * Ui class is only for printing message.","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"public class Ui {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    public void welcome() {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"chenghuiyuan"},"content":"        print(\"Hello! I\u0027m Daffy\\n\");","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"    public void print(String message) {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays an empty line.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"chenghuiyuan"},"content":"    public void printEmptyLine() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"\\n\");","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays a number of tasks in the Tasklist.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chenghuiyuan"},"content":"    public void printTaskNum(TaskList tasks, Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(task + \"\\n   Now you have \" + tasks.sizeOfTask() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays the response when a task is deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"    public void printDeleteCommand(String task, int num) {","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"   Noted. I\u0027ve removed this task:\\n   \" + task + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"chenghuiyuan"},"content":"            + \" tasks in the list.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"chenghuiyuan"},"content":"     * Displays the response when a task is marked as done.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"chenghuiyuan"},"content":"    public void printDoneCommand(String task) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"chenghuiyuan"},"content":"        System.out.println(\"   Nice! I\u0027ve marked this task as done:\\n   \" + task);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"chenghuiyuan"},"content":"     * Shows a list of tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"chenghuiyuan"},"content":"    public void printTaskList(TaskList list) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"chenghuiyuan"},"content":"        for (int i \u003d 1; i \u003c\u003d list.sizeOfTask(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"chenghuiyuan"},"content":"            System.out.print(\"   \" + i + \". \");","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"yaololo"},"content":"            System.out.println(list.returnTask(i - 1).taskToStringFormat());","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"thisisdax"},"content":"     * Shows a list of tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"    public void printCategoryList(Category list) {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"thisisdax"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"thisisdax"},"content":"            System.out.print(\"   \" + i + \". \");","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"thisisdax"},"content":"            System.out.println(list.getCategory(i - 1));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"chenghuiyuan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"chenghuiyuan"},"content":"     * Shows a list of pending tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"chenghuiyuan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"chenghuiyuan"},"content":"    public void printPendingTaskList(TaskList list) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"chenghuiyuan"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"chenghuiyuan"},"content":"        for (int i \u003d 1; i \u003c\u003d list.sizeOfTask(); i++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"chenghuiyuan"},"content":"            Task task \u003d list.returnTask(i - 1);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"chenghuiyuan"},"content":"            if (!task.getStatus()) { // pending task","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"chenghuiyuan"},"content":"                count++;","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"chenghuiyuan"},"content":"                System.out.print(\"   \" + i + \".\");","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"chenghuiyuan"},"content":"                System.out.println(list.returnTask(i - 1).taskToStringFormat());","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"chenghuiyuan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"chenghuiyuan"},"content":"        if (count \u003d\u003d 0) { // no pending task","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"chenghuiyuan"},"content":"            System.out.print(\"   No pending tasks. Try command `view -a` to see all tasks.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"chenghuiyuan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"chenghuiyuan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"chenghuiyuan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"yaololo"},"content":"     * Displays the response when a task is added.","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"yaololo"},"content":"    public void printAddedTask(String task, int num) {","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"   Noted. I\u0027ve added this task:\\n   \" + task + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"yaololo"},"content":"            + \" tasks in the list.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"thisisdax"},"content":"     * Displays the response when a category is added.","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"thisisdax"},"content":"    public void printAddedCategory(String category, int num) {","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"thisisdax"},"content":"        System.out.println(\"   Noted. I\u0027ve added this category:\\n   \" + category + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"thisisdax"},"content":"            + \" categories in the list.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"thisisdax"},"content":"     * Displays the response when a category is deleted.","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"thisisdax"},"content":"    public void printDeleteCategory(String category, int num) {","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"thisisdax"},"content":"        System.out.println(\"   Noted. I\u0027ve removed this category:\\n   \" + category + \"\\n   Now you have \" + num","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"thisisdax"},"content":"            + \" categories in the list.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"thisisdax"},"content":"     * Displays the response when a category is added.","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"thisisdax"},"content":"    public void printTaggedCategory(int taskIndex, String category, int num) {","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"thisisdax"},"content":"        System.out.println(\"   Noted. I\u0027ve tagged task number \"","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"thisisdax"},"content":"            + (taskIndex + 1) + \" with the specified category:\\n   \" + category);","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"yaololo"},"content":"    public void printUpdatedTask(String task, int num) {","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"yaololo"},"content":"        System.out.println(\"   Noted. I\u0027ve updated this task:\\n   \" + task + \"\\n\");","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"yaololo"},"content":"    public void bye() {","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"yaololo"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"yaololo"},"content":"    public void printProgress(int noOfCompleted, int totalTasks, String percentage) {","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"yaololo"},"content":"        print(noOfCompleted + \" out of \" + totalTasks + \" tasks are completed. \" + \"(\" + percentage + \")\");","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"thisisdax":36,"chenghuiyuan":60,"yaololo":33}}]
