[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chenghuiyuan"},"content":"# Daffy  ","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"chenghuiyuan"},"content":"This is an extension of Duke project.","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"chenghuiyuan":2,"-":61}},{"path":"src/main/java/constant/CommandKeyWords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import exception.ErrorHandler;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"public enum CommandKeyWords {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    LOCATION(\"LOCATION\");","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    private String value;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"     * @return string which shows all available command keywords","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    private static String getSerializedString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        String keywords \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"        int numberOfKeys \u003d values().length;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"        int index\u003d0;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"        for(CommandKeyWords v : values()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"yaololo"},"content":"            index +\u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"            String punctuation \u003d index \u003d\u003d numberOfKeys ? \".\" : \", \";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"            keywords \u003d keywords.concat(v.getValue()).concat(punctuation);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"yaololo"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        return keywords;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"    CommandKeyWords(String value) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"yaololo"},"content":"     * @return enum value","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"yaololo"},"content":"    public String getValue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"yaololo"},"content":"        return value;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"yaololo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"yaololo"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"yaololo"},"content":"        return this.getValue();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"yaololo"},"content":"     * @param value is an enum string for validating if the given value is valid","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"yaololo"},"content":"     * @throws ErrorHandler customized error","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"yaololo"},"content":"    public static CommandKeyWords getEnum(String value) throws ErrorHandler {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yaololo"},"content":"        for(CommandKeyWords v : values())","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"yaololo"},"content":"            if(v.getValue().equalsIgnoreCase(value)) return v;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"yaololo"},"content":"        throw new ErrorHandler(ErrorMessage.INVALID_COMMAND + \" Please starts your command with \"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"yaololo"},"content":"                + getSerializedString()","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"yaololo"},"content":"                + \" (case insensitive)\");","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"yaololo":53}},{"path":"src/main/java/constant/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package constant;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":" * Constants for error messages","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class ErrorMessage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    public static final String INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":8}},{"path":"src/main/java/exception/ErrorHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package exception;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class ErrorHandler extends  Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"    public ErrorHandler(String errorMessage) {","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":7}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public class Parser {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":4}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public Duke() {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"yaololo"},"content":"        new Duke().run();","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"yaololo"},"content":"    public void run() {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"yaololo"},"content":"        this.ui.welcome();","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello \" + in.nextLine());","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"yaololo"},"content":"        // exit program","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"yaololo"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yaololo":15,"-":14}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class Storage {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"    private final Path root \u003d FileSystems.getDefault().getPath(\"\").toAbsolutePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    private String filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"        this.filePath \u003d \"/\" +filePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":13}},{"path":"src/main/java/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package task;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":4}},{"path":"src/main/java/taskList/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package taskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"import task.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":" * Serve as a store for saving user command","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"public class TaskList {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"     * A list of different task type","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":16}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaololo"},"content":"package ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"yaololo"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yaololo"},"content":" * Ui class is only for printing message.","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"yaololo"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"yaololo"},"content":"public class Ui {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yaololo"},"content":"    public void welcome () {","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yaololo"},"content":"        print(\"Hello! I\u0027m Dafy\\n\" );","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yaololo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yaololo"},"content":"    public void print(String message) {","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yaololo"},"content":"        System.out.println( message);","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yaololo"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"yaololo"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yaololo":15}}]
